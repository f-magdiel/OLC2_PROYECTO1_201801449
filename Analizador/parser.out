Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    CONTAINS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    instruccion -> declaracion_vector
Rule 22    instruccion -> forin
Rule 23    instruccion -> nativas_vector
Rule 24    declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 25    declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 26    expresion -> VEC NOT CORIZQ expresiones CORDER
Rule 27    expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER
Rule 28    expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
Rule 29    expresion -> nativas_vec
Rule 30    nativas_vec -> ID PTO LEN PARIZQ PARDER
Rule 31    expresion -> ID PTO CAPACITY PARIZQ PARDER
Rule 32    nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA
Rule 33    nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
Rule 34    nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA
Rule 35    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 36    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 37    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 38    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 39    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 40    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 41    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 42    lparametros -> lparametros COMA lparame
Rule 43    lparametros -> lparame
Rule 44    lparame -> ID DOSPT tipo
Rule 45    lparame -> ID DOSPT SIGNOI MUT tipo_arreglo
Rule 46    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 47    llamada_funciones -> ID PARIZQ PARDER
Rule 48    largumentos -> largumentos COMA largumento
Rule 49    largumentos -> largumento
Rule 50    largumento -> expresion
Rule 51    largumento -> SIGNOI MUT expresion
Rule 52    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 53    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 54    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 55    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 56    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 57    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 58    asignacion -> ID IGUAL expresion PTCOMA
Rule 59    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 60    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 61    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 62    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 63    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 64    lelseif -> lelseif elseif
Rule 65    lelseif -> elseif
Rule 66    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 67    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 68    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 69    imatch -> opmatch COMA dmatch
Rule 70    opmatch -> opmatch COMA cmatch
Rule 71    opmatch -> opmatch COMA rmatch
Rule 72    opmatch -> cmatch
Rule 73    opmatch -> rmatch
Rule 74    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 75    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 76    bloque_match -> bloque_match BARRAS expresion
Rule 77    bloque_match -> expresion
Rule 78    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 79    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 80    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 81    rrmatch -> instruccion
Rule 82    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 83    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 84    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 85    forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
Rule 86    forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
Rule 87    break -> BREAK PTCOMA
Rule 88    break -> BREAK expresion PTCOMA
Rule 89    continue -> CONTINUE PTCOMA
Rule 90    return -> RETURN expresion PTCOMA
Rule 91    tipo -> I64
Rule 92    tipo -> F64
Rule 93    tipo -> BOOL
Rule 94    tipo -> CHAR
Rule 95    tipo -> STRING
Rule 96    tipo -> USIZE
Rule 97    tipo -> SIGNOI STR
Rule 98    expresiones -> expresiones COMA expresion
Rule 99    expresiones -> expresion
Rule 100   expresion -> ID
Rule 101   expresion -> ENTERO
Rule 102   expresion -> DECIMAL
Rule 103   expresion -> TRUE
Rule 104   expresion -> FALSE
Rule 105   expresion -> tostring
Rule 106   expresion -> toowned
Rule 107   tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 108   toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 109   expresion -> STR
Rule 110   expresion -> CADENA
Rule 111   expresion -> CARACTER
Rule 112   expresion -> expresion MAS expresion
Rule 113   expresion -> expresion MENOS expresion
Rule 114   expresion -> expresion POR expresion
Rule 115   expresion -> expresion DIVIDIDO expresion
Rule 116   expresion -> expresion MODULO expresion
Rule 117   expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 118   expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 119   expresion -> expresion IGUALQUE expresion
Rule 120   expresion -> expresion NOIGUALQUE expresion
Rule 121   expresion -> expresion MENORQUE expresion
Rule 122   expresion -> expresion MAYORQUE expresion
Rule 123   expresion -> expresion MENORIQUE expresion
Rule 124   expresion -> expresion MAYORIQUE expresion
Rule 125   expresion -> expresion OR expresion
Rule 126   expresion -> expresion AND expresion
Rule 127   expresion -> MENOS expresion
Rule 128   expresion -> NOT expresion
Rule 129   expresion -> PARIZQ expresion PARDER
Rule 130   expresion -> llamada_funciones
Rule 131   expresion -> CORIZQ expresiones CORDER
Rule 132   expresion -> ID lindices
Rule 133   lindices -> lindices CORIZQ expresion CORDER
Rule 134   lindices -> CORIZQ expresion CORDER
Rule 135   expresion -> if_asig
Rule 136   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 137   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 138   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 139   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 140   elseifa -> elseifa lif
Rule 141   elseifa -> lif
Rule 142   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 143   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 144   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 145   bloque_expresion -> expresion
Rule 146   expresion -> match_asig
Rule 147   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 148   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 149   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 150   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 151   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 152   opmatch_asig -> cmatch_asig
Rule 153   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 154   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 155   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 156   bloque_match_asig -> expresion
Rule 157   expresion -> loop_asig
Rule 158   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 126
AS                   : 
BARRAS               : 76 155
BOOL                 : 93
BREAK                : 87 88
CADENA               : 107 108 110
CAPACITY             : 31
CARACTER             : 111
CHAR                 : 94
COMA                 : 33 42 48 52 69 70 71 98 117 118 148 151
CONTAINS             : 
CONTINUE             : 89
CORDER               : 26 36 37 131 133 134
CORIZQ               : 26 36 37 131 133 134
DECIMAL              : 102
DIVIDIDO             : 115
DOSPT                : 24 25 27 27 28 28 35 44 45 54 56 117 117 118 118
ELSE                 : 66 67 142 143
ENTERO               : 101
F64                  : 92
FALSE                : 104
FN                   : 5 38 39 40 41
FOR                  : 85 86
GUIONB               : 78 79 149 150
I64                  : 91
ID                   : 24 25 30 31 32 33 34 35 38 39 40 41 44 45 46 47 54 55 56 57 58 59 85 86 100 132
IF                   : 60 61 62 63 66 136 137 138 139 142
IGUAL                : 24 25 35 54 55 56 57 58 59 74 75 78 79 80 80 149 150 153 154
IGUALQUE             : 119
IN                   : 85 86
INSERT               : 33
LEN                  : 30
LET                  : 24 25 35 54 55 56 57
LLAVEDER             : 5 38 39 40 41 60 61 62 63 66 67 68 74 78 82 83 84 85 86 136 137 138 139 142 143 147 149 153 158
LLAVEIZQ             : 5 38 39 40 41 60 61 62 63 66 67 68 74 78 82 83 84 85 86 136 137 138 139 142 143 147 149 153 158
LOOP                 : 83 158
MAIN                 : 5
MAS                  : 112
MATCH                : 68 147
MAYORIQUE            : 124
MAYORQUE             : 24 25 38 39 74 75 78 79 80 122 149 150 153 154
MENORIQUE            : 123
MENORQUE             : 24 25 121
MENOS                : 38 39 113 127
MODULO               : 116
MUT                  : 24 35 45 51 54 55
NEW                  : 27
NOIGUALQUE           : 120
NOT                  : 26 52 53 128
OR                   : 125
PARDER               : 5 27 28 30 31 32 33 34 38 39 40 41 46 47 52 53 107 108 117 118 129
PARIZQ               : 5 27 28 30 31 32 33 34 38 39 40 41 46 47 52 53 107 108 117 118 129
POR                  : 114
POW                  : 117
POWF                 : 118
PRINTLN              : 52 53
PTCOMA               : 19 24 25 32 33 34 35 36 37 52 53 54 55 56 57 58 59 87 88 89 90 144
PTO                  : 30 31 32 33 34 80 80 86 86 107 108
PUSH                 : 32
REMOVE               : 34
RETURN               : 90
SIGNOI               : 45 51 97
STR                  : 97 109
STRING               : 95
TOOWNED              : 108
TOSTRING             : 107
TRUE                 : 103
USIZE                : 96
VEC                  : 26
VVEC                 : 24 25 27 28
WHILE                : 84
WITH_CAPACITY        : 28
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 136 137 138 139 142 143 144 149 153
bloque_match         : 74 75 76
bloque_match_asig    : 153 154 155
break                : 15
cmatch               : 70 72
cmatch_asig          : 151 152
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
declaracion_vector   : 21
dmatch               : 69
dmatch_asig          : 148
else                 : 61 63
elsea                : 137 139
elseif               : 64 65
elseifa              : 138 139 140
expresion            : 24 25 28 32 33 33 34 35 36 37 50 51 52 53 54 55 56 57 58 59 60 61 62 63 66 68 76 77 80 80 84 85 86 86 88 90 98 99 112 112 113 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 128 129 133 134 136 137 138 139 142 144 145 147 150 154 155 156
expresiones          : 26 52 98 131
forin                : 22
funciones            : 18
if                   : 11
if_asig              : 135
imatch               : 68
imatch_asig          : 147
imprimir             : 9
inicio               : 0
instruccion          : 6 7 75 79 81
instrucciones        : 1 1 2 3 5 6 38 39 40 41 60 61 62 63 66 67 74 78 82 83 84 85 86 158
largumento           : 48 49
largumentos          : 46 48
lelseif              : 62 63 64
lif                  : 140 141
lindices             : 59 132 133
llamada_funciones    : 19 130
loop                 : 13
loop_asig            : 157
lparame              : 42 43
lparametros          : 38 40 42
main                 : 1 2 3 4
match                : 12
match_asig           : 146
nativas_vec          : 29
nativas_vector       : 23
opmatch              : 69 70 71
opmatch_asig         : 148 151
return               : 16
rmatch               : 71 73
rrmatch              : 80
tipo                 : 24 25 37 38 39 44 54 56 117 118
tipo_arreglo         : 35 36 45
toowned              : 106
tostring             : 105
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FOR             shift and go to state 32

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FOR             shift and go to state 32

    main                           shift and go to state 33
    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 35
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    FOR             reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (38) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 37
    ID              shift and go to state 38


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    FOR             reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    FOR             reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    FOR             reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    FOR             reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    FOR             reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    FOR             reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    FOR             reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    FOR             reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    FOR             reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    FOR             reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    FOR             reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 39


state 18

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FOR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 19

    (21) instruccion -> declaracion_vector .

    FN              reduce using rule 21 (instruccion -> declaracion_vector .)
    LET             reduce using rule 21 (instruccion -> declaracion_vector .)
    PRINTLN         reduce using rule 21 (instruccion -> declaracion_vector .)
    ID              reduce using rule 21 (instruccion -> declaracion_vector .)
    IF              reduce using rule 21 (instruccion -> declaracion_vector .)
    MATCH           reduce using rule 21 (instruccion -> declaracion_vector .)
    LOOP            reduce using rule 21 (instruccion -> declaracion_vector .)
    WHILE           reduce using rule 21 (instruccion -> declaracion_vector .)
    BREAK           reduce using rule 21 (instruccion -> declaracion_vector .)
    RETURN          reduce using rule 21 (instruccion -> declaracion_vector .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion_vector .)
    FOR             reduce using rule 21 (instruccion -> declaracion_vector .)
    $end            reduce using rule 21 (instruccion -> declaracion_vector .)
    LLAVEDER        reduce using rule 21 (instruccion -> declaracion_vector .)
    COMA            reduce using rule 21 (instruccion -> declaracion_vector .)


state 20

    (22) instruccion -> forin .

    FN              reduce using rule 22 (instruccion -> forin .)
    LET             reduce using rule 22 (instruccion -> forin .)
    PRINTLN         reduce using rule 22 (instruccion -> forin .)
    ID              reduce using rule 22 (instruccion -> forin .)
    IF              reduce using rule 22 (instruccion -> forin .)
    MATCH           reduce using rule 22 (instruccion -> forin .)
    LOOP            reduce using rule 22 (instruccion -> forin .)
    WHILE           reduce using rule 22 (instruccion -> forin .)
    BREAK           reduce using rule 22 (instruccion -> forin .)
    RETURN          reduce using rule 22 (instruccion -> forin .)
    CONTINUE        reduce using rule 22 (instruccion -> forin .)
    FOR             reduce using rule 22 (instruccion -> forin .)
    $end            reduce using rule 22 (instruccion -> forin .)
    LLAVEDER        reduce using rule 22 (instruccion -> forin .)
    COMA            reduce using rule 22 (instruccion -> forin .)


state 21

    (23) instruccion -> nativas_vector .

    FN              reduce using rule 23 (instruccion -> nativas_vector .)
    LET             reduce using rule 23 (instruccion -> nativas_vector .)
    PRINTLN         reduce using rule 23 (instruccion -> nativas_vector .)
    ID              reduce using rule 23 (instruccion -> nativas_vector .)
    IF              reduce using rule 23 (instruccion -> nativas_vector .)
    MATCH           reduce using rule 23 (instruccion -> nativas_vector .)
    LOOP            reduce using rule 23 (instruccion -> nativas_vector .)
    WHILE           reduce using rule 23 (instruccion -> nativas_vector .)
    BREAK           reduce using rule 23 (instruccion -> nativas_vector .)
    RETURN          reduce using rule 23 (instruccion -> nativas_vector .)
    CONTINUE        reduce using rule 23 (instruccion -> nativas_vector .)
    FOR             reduce using rule 23 (instruccion -> nativas_vector .)
    $end            reduce using rule 23 (instruccion -> nativas_vector .)
    LLAVEDER        reduce using rule 23 (instruccion -> nativas_vector .)
    COMA            reduce using rule 23 (instruccion -> nativas_vector .)


state 22

    (54) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> LET . ID IGUAL expresion PTCOMA
    (35) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET . MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MUT             shift and go to state 40
    ID              shift and go to state 41


state 23

    (58) asignacion -> ID . IGUAL expresion PTCOMA
    (59) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (46) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (47) llamada_funciones -> ID . PARIZQ PARDER
    (32) nativas_vector -> ID . PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> ID . PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> ID . PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (133) lindices -> . lindices CORIZQ expresion CORDER
    (134) lindices -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 42
    PARIZQ          shift and go to state 44
    PTO             shift and go to state 45
    CORIZQ          shift and go to state 46

    lindices                       shift and go to state 43

state 24

    (52) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 47


state 25

    (60) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 49
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 26

    (68) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 81
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 27

    (83) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 82


state 28

    (84) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 83
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 29

    (87) break -> BREAK . PTCOMA
    (88) break -> BREAK . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 84
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 85
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 30

    (90) return -> RETURN . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 86
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 31

    (89) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 87


state 32

    (85) forin -> FOR . ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> FOR . ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 88


state 33

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 89
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 34

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 35

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 36

    (38) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 38


state 37

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 90


state 38

    (38) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 91


state 39

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 40

    (54) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (35) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    ID              shift and go to state 92


state 41

    (56) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> LET ID . IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 93
    IGUAL           shift and go to state 94


state 42

    (58) asignacion -> ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 95
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 43

    (59) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (133) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 96
    CORIZQ          shift and go to state 97


state 44

    (46) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (47) llamada_funciones -> ID PARIZQ . PARDER
    (48) largumentos -> . largumentos COMA largumento
    (49) largumentos -> . largumento
    (50) largumento -> . expresion
    (51) largumento -> . SIGNOI MUT expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 99
    SIGNOI          shift and go to state 102
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    largumentos                    shift and go to state 98
    largumento                     shift and go to state 100
    expresion                      shift and go to state 101
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 45

    (32) nativas_vector -> ID PTO . PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> ID PTO . INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> ID PTO . REMOVE PARIZQ expresion PARDER PTCOMA

    PUSH            shift and go to state 103
    INSERT          shift and go to state 104
    REMOVE          shift and go to state 105


state 46

    (134) lindices -> CORIZQ . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 106
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 47

    (52) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 107


state 48

    (136) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 108
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 49

    (60) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (61) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 50

    (26) expresion -> VEC . NOT CORIZQ expresiones CORDER

    NOT             shift and go to state 123


state 51

    (128) expresion -> NOT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 124
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 52

    (131) expresion -> CORIZQ . expresiones CORDER
    (98) expresiones -> . expresiones COMA expresion
    (99) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresiones                    shift and go to state 125
    expresion                      shift and go to state 126
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 53

    (27) expresion -> VVEC . DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC . DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 127


state 54

    (129) expresion -> PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 128
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 55

    (29) expresion -> nativas_vec .

    LLAVEIZQ        reduce using rule 29 (expresion -> nativas_vec .)
    MAS             reduce using rule 29 (expresion -> nativas_vec .)
    MENOS           reduce using rule 29 (expresion -> nativas_vec .)
    POR             reduce using rule 29 (expresion -> nativas_vec .)
    DIVIDIDO        reduce using rule 29 (expresion -> nativas_vec .)
    MODULO          reduce using rule 29 (expresion -> nativas_vec .)
    IGUALQUE        reduce using rule 29 (expresion -> nativas_vec .)
    NOIGUALQUE      reduce using rule 29 (expresion -> nativas_vec .)
    MENORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MAYORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MENORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    MAYORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    OR              reduce using rule 29 (expresion -> nativas_vec .)
    AND             reduce using rule 29 (expresion -> nativas_vec .)
    PTCOMA          reduce using rule 29 (expresion -> nativas_vec .)
    PARDER          reduce using rule 29 (expresion -> nativas_vec .)
    COMA            reduce using rule 29 (expresion -> nativas_vec .)
    CORDER          reduce using rule 29 (expresion -> nativas_vec .)
    PTO             reduce using rule 29 (expresion -> nativas_vec .)
    IGUAL           reduce using rule 29 (expresion -> nativas_vec .)
    BARRAS          reduce using rule 29 (expresion -> nativas_vec .)
    LLAVEDER        reduce using rule 29 (expresion -> nativas_vec .)


state 56

    (31) expresion -> ID . PTO CAPACITY PARIZQ PARDER
    (100) expresion -> ID .
    (132) expresion -> ID . lindices
    (30) nativas_vec -> ID . PTO LEN PARIZQ PARDER
    (46) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (47) llamada_funciones -> ID . PARIZQ PARDER
    (133) lindices -> . lindices CORIZQ expresion CORDER
    (134) lindices -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PTO resolved as shift
    PTO             shift and go to state 129
    LLAVEIZQ        reduce using rule 100 (expresion -> ID .)
    MAS             reduce using rule 100 (expresion -> ID .)
    MENOS           reduce using rule 100 (expresion -> ID .)
    POR             reduce using rule 100 (expresion -> ID .)
    DIVIDIDO        reduce using rule 100 (expresion -> ID .)
    MODULO          reduce using rule 100 (expresion -> ID .)
    IGUALQUE        reduce using rule 100 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 100 (expresion -> ID .)
    MENORQUE        reduce using rule 100 (expresion -> ID .)
    MAYORQUE        reduce using rule 100 (expresion -> ID .)
    MENORIQUE       reduce using rule 100 (expresion -> ID .)
    MAYORIQUE       reduce using rule 100 (expresion -> ID .)
    OR              reduce using rule 100 (expresion -> ID .)
    AND             reduce using rule 100 (expresion -> ID .)
    PTCOMA          reduce using rule 100 (expresion -> ID .)
    PARDER          reduce using rule 100 (expresion -> ID .)
    COMA            reduce using rule 100 (expresion -> ID .)
    CORDER          reduce using rule 100 (expresion -> ID .)
    IGUAL           reduce using rule 100 (expresion -> ID .)
    BARRAS          reduce using rule 100 (expresion -> ID .)
    LLAVEDER        reduce using rule 100 (expresion -> ID .)
    PARIZQ          shift and go to state 44
    CORIZQ          shift and go to state 46

  ! PTO             [ reduce using rule 100 (expresion -> ID .) ]

    lindices                       shift and go to state 130

state 57

    (101) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 101 (expresion -> ENTERO .)
    MAS             reduce using rule 101 (expresion -> ENTERO .)
    MENOS           reduce using rule 101 (expresion -> ENTERO .)
    POR             reduce using rule 101 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 101 (expresion -> ENTERO .)
    MODULO          reduce using rule 101 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 101 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 101 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 101 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 101 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 101 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 101 (expresion -> ENTERO .)
    OR              reduce using rule 101 (expresion -> ENTERO .)
    AND             reduce using rule 101 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 101 (expresion -> ENTERO .)
    PARDER          reduce using rule 101 (expresion -> ENTERO .)
    COMA            reduce using rule 101 (expresion -> ENTERO .)
    CORDER          reduce using rule 101 (expresion -> ENTERO .)
    PTO             reduce using rule 101 (expresion -> ENTERO .)
    IGUAL           reduce using rule 101 (expresion -> ENTERO .)
    BARRAS          reduce using rule 101 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 101 (expresion -> ENTERO .)


state 58

    (102) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 102 (expresion -> DECIMAL .)
    MAS             reduce using rule 102 (expresion -> DECIMAL .)
    MENOS           reduce using rule 102 (expresion -> DECIMAL .)
    POR             reduce using rule 102 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 102 (expresion -> DECIMAL .)
    MODULO          reduce using rule 102 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 102 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 102 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 102 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 102 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 102 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 102 (expresion -> DECIMAL .)
    OR              reduce using rule 102 (expresion -> DECIMAL .)
    AND             reduce using rule 102 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 102 (expresion -> DECIMAL .)
    PARDER          reduce using rule 102 (expresion -> DECIMAL .)
    COMA            reduce using rule 102 (expresion -> DECIMAL .)
    CORDER          reduce using rule 102 (expresion -> DECIMAL .)
    PTO             reduce using rule 102 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 102 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 102 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 102 (expresion -> DECIMAL .)


state 59

    (103) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 103 (expresion -> TRUE .)
    MAS             reduce using rule 103 (expresion -> TRUE .)
    MENOS           reduce using rule 103 (expresion -> TRUE .)
    POR             reduce using rule 103 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 103 (expresion -> TRUE .)
    MODULO          reduce using rule 103 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 103 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 103 (expresion -> TRUE .)
    MENORQUE        reduce using rule 103 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 103 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 103 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 103 (expresion -> TRUE .)
    OR              reduce using rule 103 (expresion -> TRUE .)
    AND             reduce using rule 103 (expresion -> TRUE .)
    PTCOMA          reduce using rule 103 (expresion -> TRUE .)
    PARDER          reduce using rule 103 (expresion -> TRUE .)
    COMA            reduce using rule 103 (expresion -> TRUE .)
    CORDER          reduce using rule 103 (expresion -> TRUE .)
    PTO             reduce using rule 103 (expresion -> TRUE .)
    IGUAL           reduce using rule 103 (expresion -> TRUE .)
    BARRAS          reduce using rule 103 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 103 (expresion -> TRUE .)


state 60

    (104) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 104 (expresion -> FALSE .)
    MAS             reduce using rule 104 (expresion -> FALSE .)
    MENOS           reduce using rule 104 (expresion -> FALSE .)
    POR             reduce using rule 104 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 104 (expresion -> FALSE .)
    MODULO          reduce using rule 104 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 104 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 104 (expresion -> FALSE .)
    MENORQUE        reduce using rule 104 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 104 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 104 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 104 (expresion -> FALSE .)
    OR              reduce using rule 104 (expresion -> FALSE .)
    AND             reduce using rule 104 (expresion -> FALSE .)
    PTCOMA          reduce using rule 104 (expresion -> FALSE .)
    PARDER          reduce using rule 104 (expresion -> FALSE .)
    COMA            reduce using rule 104 (expresion -> FALSE .)
    CORDER          reduce using rule 104 (expresion -> FALSE .)
    PTO             reduce using rule 104 (expresion -> FALSE .)
    IGUAL           reduce using rule 104 (expresion -> FALSE .)
    BARRAS          reduce using rule 104 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 104 (expresion -> FALSE .)


state 61

    (105) expresion -> tostring .

    LLAVEIZQ        reduce using rule 105 (expresion -> tostring .)
    MAS             reduce using rule 105 (expresion -> tostring .)
    MENOS           reduce using rule 105 (expresion -> tostring .)
    POR             reduce using rule 105 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 105 (expresion -> tostring .)
    MODULO          reduce using rule 105 (expresion -> tostring .)
    IGUALQUE        reduce using rule 105 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 105 (expresion -> tostring .)
    MENORQUE        reduce using rule 105 (expresion -> tostring .)
    MAYORQUE        reduce using rule 105 (expresion -> tostring .)
    MENORIQUE       reduce using rule 105 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 105 (expresion -> tostring .)
    OR              reduce using rule 105 (expresion -> tostring .)
    AND             reduce using rule 105 (expresion -> tostring .)
    PTCOMA          reduce using rule 105 (expresion -> tostring .)
    PARDER          reduce using rule 105 (expresion -> tostring .)
    COMA            reduce using rule 105 (expresion -> tostring .)
    CORDER          reduce using rule 105 (expresion -> tostring .)
    PTO             reduce using rule 105 (expresion -> tostring .)
    IGUAL           reduce using rule 105 (expresion -> tostring .)
    BARRAS          reduce using rule 105 (expresion -> tostring .)
    LLAVEDER        reduce using rule 105 (expresion -> tostring .)


state 62

    (106) expresion -> toowned .

    LLAVEIZQ        reduce using rule 106 (expresion -> toowned .)
    MAS             reduce using rule 106 (expresion -> toowned .)
    MENOS           reduce using rule 106 (expresion -> toowned .)
    POR             reduce using rule 106 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 106 (expresion -> toowned .)
    MODULO          reduce using rule 106 (expresion -> toowned .)
    IGUALQUE        reduce using rule 106 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 106 (expresion -> toowned .)
    MENORQUE        reduce using rule 106 (expresion -> toowned .)
    MAYORQUE        reduce using rule 106 (expresion -> toowned .)
    MENORIQUE       reduce using rule 106 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 106 (expresion -> toowned .)
    OR              reduce using rule 106 (expresion -> toowned .)
    AND             reduce using rule 106 (expresion -> toowned .)
    PTCOMA          reduce using rule 106 (expresion -> toowned .)
    PARDER          reduce using rule 106 (expresion -> toowned .)
    COMA            reduce using rule 106 (expresion -> toowned .)
    CORDER          reduce using rule 106 (expresion -> toowned .)
    PTO             reduce using rule 106 (expresion -> toowned .)
    IGUAL           reduce using rule 106 (expresion -> toowned .)
    BARRAS          reduce using rule 106 (expresion -> toowned .)
    LLAVEDER        reduce using rule 106 (expresion -> toowned .)


state 63

    (109) expresion -> STR .

    LLAVEIZQ        reduce using rule 109 (expresion -> STR .)
    MAS             reduce using rule 109 (expresion -> STR .)
    MENOS           reduce using rule 109 (expresion -> STR .)
    POR             reduce using rule 109 (expresion -> STR .)
    DIVIDIDO        reduce using rule 109 (expresion -> STR .)
    MODULO          reduce using rule 109 (expresion -> STR .)
    IGUALQUE        reduce using rule 109 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 109 (expresion -> STR .)
    MENORQUE        reduce using rule 109 (expresion -> STR .)
    MAYORQUE        reduce using rule 109 (expresion -> STR .)
    MENORIQUE       reduce using rule 109 (expresion -> STR .)
    MAYORIQUE       reduce using rule 109 (expresion -> STR .)
    OR              reduce using rule 109 (expresion -> STR .)
    AND             reduce using rule 109 (expresion -> STR .)
    PTCOMA          reduce using rule 109 (expresion -> STR .)
    PARDER          reduce using rule 109 (expresion -> STR .)
    COMA            reduce using rule 109 (expresion -> STR .)
    CORDER          reduce using rule 109 (expresion -> STR .)
    PTO             reduce using rule 109 (expresion -> STR .)
    IGUAL           reduce using rule 109 (expresion -> STR .)
    BARRAS          reduce using rule 109 (expresion -> STR .)
    LLAVEDER        reduce using rule 109 (expresion -> STR .)


state 64

    (110) expresion -> CADENA .
    (107) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (108) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 110 (expresion -> CADENA .)
    MAS             reduce using rule 110 (expresion -> CADENA .)
    MENOS           reduce using rule 110 (expresion -> CADENA .)
    POR             reduce using rule 110 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 110 (expresion -> CADENA .)
    MODULO          reduce using rule 110 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 110 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 110 (expresion -> CADENA .)
    MENORQUE        reduce using rule 110 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 110 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 110 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 110 (expresion -> CADENA .)
    OR              reduce using rule 110 (expresion -> CADENA .)
    AND             reduce using rule 110 (expresion -> CADENA .)
    PTCOMA          reduce using rule 110 (expresion -> CADENA .)
    PARDER          reduce using rule 110 (expresion -> CADENA .)
    COMA            reduce using rule 110 (expresion -> CADENA .)
    CORDER          reduce using rule 110 (expresion -> CADENA .)
    IGUAL           reduce using rule 110 (expresion -> CADENA .)
    BARRAS          reduce using rule 110 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 110 (expresion -> CADENA .)
    PTO             shift and go to state 131

  ! PTO             [ reduce using rule 110 (expresion -> CADENA .) ]


state 65

    (111) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 111 (expresion -> CARACTER .)
    MAS             reduce using rule 111 (expresion -> CARACTER .)
    MENOS           reduce using rule 111 (expresion -> CARACTER .)
    POR             reduce using rule 111 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 111 (expresion -> CARACTER .)
    MODULO          reduce using rule 111 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 111 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 111 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 111 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 111 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 111 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 111 (expresion -> CARACTER .)
    OR              reduce using rule 111 (expresion -> CARACTER .)
    AND             reduce using rule 111 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 111 (expresion -> CARACTER .)
    PARDER          reduce using rule 111 (expresion -> CARACTER .)
    COMA            reduce using rule 111 (expresion -> CARACTER .)
    CORDER          reduce using rule 111 (expresion -> CARACTER .)
    PTO             reduce using rule 111 (expresion -> CARACTER .)
    IGUAL           reduce using rule 111 (expresion -> CARACTER .)
    BARRAS          reduce using rule 111 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 111 (expresion -> CARACTER .)


state 66

    (127) expresion -> MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 132
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 67

    (117) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 133


state 68

    (130) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 130 (expresion -> llamada_funciones .)
    MAS             reduce using rule 130 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 130 (expresion -> llamada_funciones .)
    POR             reduce using rule 130 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 130 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 130 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 130 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 130 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 130 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 130 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 130 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 130 (expresion -> llamada_funciones .)
    OR              reduce using rule 130 (expresion -> llamada_funciones .)
    AND             reduce using rule 130 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 130 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 130 (expresion -> llamada_funciones .)
    COMA            reduce using rule 130 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 130 (expresion -> llamada_funciones .)
    PTO             reduce using rule 130 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 130 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 130 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 130 (expresion -> llamada_funciones .)


state 69

    (135) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 135 (expresion -> if_asig .)
    MAS             reduce using rule 135 (expresion -> if_asig .)
    MENOS           reduce using rule 135 (expresion -> if_asig .)
    POR             reduce using rule 135 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 135 (expresion -> if_asig .)
    MODULO          reduce using rule 135 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 135 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 135 (expresion -> if_asig .)
    MENORQUE        reduce using rule 135 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 135 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 135 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 135 (expresion -> if_asig .)
    OR              reduce using rule 135 (expresion -> if_asig .)
    AND             reduce using rule 135 (expresion -> if_asig .)
    PTCOMA          reduce using rule 135 (expresion -> if_asig .)
    PARDER          reduce using rule 135 (expresion -> if_asig .)
    COMA            reduce using rule 135 (expresion -> if_asig .)
    CORDER          reduce using rule 135 (expresion -> if_asig .)
    PTO             reduce using rule 135 (expresion -> if_asig .)
    IGUAL           reduce using rule 135 (expresion -> if_asig .)
    BARRAS          reduce using rule 135 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 135 (expresion -> if_asig .)


state 70

    (146) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 146 (expresion -> match_asig .)
    MAS             reduce using rule 146 (expresion -> match_asig .)
    MENOS           reduce using rule 146 (expresion -> match_asig .)
    POR             reduce using rule 146 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 146 (expresion -> match_asig .)
    MODULO          reduce using rule 146 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 146 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 146 (expresion -> match_asig .)
    MENORQUE        reduce using rule 146 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 146 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 146 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 146 (expresion -> match_asig .)
    OR              reduce using rule 146 (expresion -> match_asig .)
    AND             reduce using rule 146 (expresion -> match_asig .)
    PTCOMA          reduce using rule 146 (expresion -> match_asig .)
    PARDER          reduce using rule 146 (expresion -> match_asig .)
    COMA            reduce using rule 146 (expresion -> match_asig .)
    CORDER          reduce using rule 146 (expresion -> match_asig .)
    PTO             reduce using rule 146 (expresion -> match_asig .)
    IGUAL           reduce using rule 146 (expresion -> match_asig .)
    BARRAS          reduce using rule 146 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 146 (expresion -> match_asig .)


state 71

    (157) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 157 (expresion -> loop_asig .)
    MAS             reduce using rule 157 (expresion -> loop_asig .)
    MENOS           reduce using rule 157 (expresion -> loop_asig .)
    POR             reduce using rule 157 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 157 (expresion -> loop_asig .)
    MODULO          reduce using rule 157 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 157 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 157 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 157 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 157 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 157 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 157 (expresion -> loop_asig .)
    OR              reduce using rule 157 (expresion -> loop_asig .)
    AND             reduce using rule 157 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 157 (expresion -> loop_asig .)
    PARDER          reduce using rule 157 (expresion -> loop_asig .)
    COMA            reduce using rule 157 (expresion -> loop_asig .)
    CORDER          reduce using rule 157 (expresion -> loop_asig .)
    PTO             reduce using rule 157 (expresion -> loop_asig .)
    IGUAL           reduce using rule 157 (expresion -> loop_asig .)
    BARRAS          reduce using rule 157 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 157 (expresion -> loop_asig .)


state 72

    (91) tipo -> I64 .

    DOSPT           reduce using rule 91 (tipo -> I64 .)
    IGUAL           reduce using rule 91 (tipo -> I64 .)
    PARDER          reduce using rule 91 (tipo -> I64 .)
    COMA            reduce using rule 91 (tipo -> I64 .)
    PTCOMA          reduce using rule 91 (tipo -> I64 .)
    MAYORQUE        reduce using rule 91 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 91 (tipo -> I64 .)


state 73

    (92) tipo -> F64 .

    DOSPT           reduce using rule 92 (tipo -> F64 .)
    IGUAL           reduce using rule 92 (tipo -> F64 .)
    PARDER          reduce using rule 92 (tipo -> F64 .)
    COMA            reduce using rule 92 (tipo -> F64 .)
    PTCOMA          reduce using rule 92 (tipo -> F64 .)
    MAYORQUE        reduce using rule 92 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 92 (tipo -> F64 .)


state 74

    (93) tipo -> BOOL .

    DOSPT           reduce using rule 93 (tipo -> BOOL .)
    IGUAL           reduce using rule 93 (tipo -> BOOL .)
    PARDER          reduce using rule 93 (tipo -> BOOL .)
    COMA            reduce using rule 93 (tipo -> BOOL .)
    PTCOMA          reduce using rule 93 (tipo -> BOOL .)
    MAYORQUE        reduce using rule 93 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 93 (tipo -> BOOL .)


state 75

    (94) tipo -> CHAR .

    DOSPT           reduce using rule 94 (tipo -> CHAR .)
    IGUAL           reduce using rule 94 (tipo -> CHAR .)
    PARDER          reduce using rule 94 (tipo -> CHAR .)
    COMA            reduce using rule 94 (tipo -> CHAR .)
    PTCOMA          reduce using rule 94 (tipo -> CHAR .)
    MAYORQUE        reduce using rule 94 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 94 (tipo -> CHAR .)


state 76

    (95) tipo -> STRING .

    DOSPT           reduce using rule 95 (tipo -> STRING .)
    IGUAL           reduce using rule 95 (tipo -> STRING .)
    PARDER          reduce using rule 95 (tipo -> STRING .)
    COMA            reduce using rule 95 (tipo -> STRING .)
    PTCOMA          reduce using rule 95 (tipo -> STRING .)
    MAYORQUE        reduce using rule 95 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 95 (tipo -> STRING .)


state 77

    (96) tipo -> USIZE .

    DOSPT           reduce using rule 96 (tipo -> USIZE .)
    IGUAL           reduce using rule 96 (tipo -> USIZE .)
    PARDER          reduce using rule 96 (tipo -> USIZE .)
    COMA            reduce using rule 96 (tipo -> USIZE .)
    PTCOMA          reduce using rule 96 (tipo -> USIZE .)
    MAYORQUE        reduce using rule 96 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 96 (tipo -> USIZE .)


state 78

    (97) tipo -> SIGNOI . STR

    STR             shift and go to state 134


state 79

    (147) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 135
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 80

    (158) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 136


state 81

    (68) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 137
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 82

    (83) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 138
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 83

    (84) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 139
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 84

    (87) break -> BREAK PTCOMA .

    FN              reduce using rule 87 (break -> BREAK PTCOMA .)
    LET             reduce using rule 87 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 87 (break -> BREAK PTCOMA .)
    ID              reduce using rule 87 (break -> BREAK PTCOMA .)
    IF              reduce using rule 87 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 87 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 87 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 87 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 87 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 87 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 87 (break -> BREAK PTCOMA .)
    FOR             reduce using rule 87 (break -> BREAK PTCOMA .)
    $end            reduce using rule 87 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 87 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 87 (break -> BREAK PTCOMA .)


state 85

    (88) break -> BREAK expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 140
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 86

    (90) return -> RETURN expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 141
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 87

    (89) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 89 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 89 (continue -> CONTINUE PTCOMA .)


state 88

    (85) forin -> FOR ID . IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> FOR ID . IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    IN              shift and go to state 142


state 89

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 90

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 143


state 91

    (38) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (42) lparametros -> . lparametros COMA lparame
    (43) lparametros -> . lparame
    (44) lparame -> . ID DOSPT tipo
    (45) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    PARDER          shift and go to state 146
    ID              shift and go to state 144

    lparametros                    shift and go to state 145
    lparame                        shift and go to state 147

state 92

    (54) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (35) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 148
    IGUAL           shift and go to state 149


state 93

    (56) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    VVEC            shift and go to state 151
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo                           shift and go to state 150

state 94

    (57) declaracion -> LET ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 152
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 95

    (58) asignacion -> ID IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 153
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 96

    (59) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 154
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 97

    (133) lindices -> lindices CORIZQ . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 155
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 98

    (46) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (48) largumentos -> largumentos . COMA largumento

    PARDER          shift and go to state 156
    COMA            shift and go to state 157


state 99

    (47) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 47 (llamada_funciones -> ID PARIZQ PARDER .)


state 100

    (49) largumentos -> largumento .

    PARDER          reduce using rule 49 (largumentos -> largumento .)
    COMA            reduce using rule 49 (largumentos -> largumento .)


state 101

    (50) largumento -> expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          reduce using rule 50 (largumento -> expresion .)
    COMA            reduce using rule 50 (largumento -> expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 102

    (51) largumento -> SIGNOI . MUT expresion
    (97) tipo -> SIGNOI . STR

    MUT             shift and go to state 158
    STR             shift and go to state 134


state 103

    (32) nativas_vector -> ID PTO PUSH . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 159


state 104

    (33) nativas_vector -> ID PTO INSERT . PARIZQ expresion COMA expresion PARDER PTCOMA

    PARIZQ          shift and go to state 160


state 105

    (34) nativas_vector -> ID PTO REMOVE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 161


state 106

    (134) lindices -> CORIZQ expresion . CORDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          shift and go to state 162
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 107

    (52) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 163
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 108

    (136) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 164
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 109

    (60) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (61) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (62) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (63) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 165
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 110

    (112) expresion -> expresion MAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 166
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 111

    (113) expresion -> expresion MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 167
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 112

    (114) expresion -> expresion POR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 168
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 113

    (115) expresion -> expresion DIVIDIDO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 169
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 114

    (116) expresion -> expresion MODULO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 170
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 115

    (119) expresion -> expresion IGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 171
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 116

    (120) expresion -> expresion NOIGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 172
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 117

    (121) expresion -> expresion MENORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 173
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 118

    (122) expresion -> expresion MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 174
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 119

    (123) expresion -> expresion MENORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 175
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 120

    (124) expresion -> expresion MAYORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 176
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 121

    (125) expresion -> expresion OR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 177
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 122

    (126) expresion -> expresion AND . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 178
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 123

    (26) expresion -> VEC NOT . CORIZQ expresiones CORDER

    CORIZQ          shift and go to state 179


state 124

    (128) expresion -> NOT expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 128 (expresion -> NOT expresion .)
    MAS             reduce using rule 128 (expresion -> NOT expresion .)
    MENOS           reduce using rule 128 (expresion -> NOT expresion .)
    POR             reduce using rule 128 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 128 (expresion -> NOT expresion .)
    MODULO          reduce using rule 128 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 128 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 128 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 128 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 128 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 128 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 128 (expresion -> NOT expresion .)
    OR              reduce using rule 128 (expresion -> NOT expresion .)
    AND             reduce using rule 128 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 128 (expresion -> NOT expresion .)
    PARDER          reduce using rule 128 (expresion -> NOT expresion .)
    COMA            reduce using rule 128 (expresion -> NOT expresion .)
    CORDER          reduce using rule 128 (expresion -> NOT expresion .)
    PTO             reduce using rule 128 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 128 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 128 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 128 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 125

    (131) expresion -> CORIZQ expresiones . CORDER
    (98) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 180
    COMA            shift and go to state 181


state 126

    (99) expresiones -> expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          reduce using rule 99 (expresiones -> expresion .)
    COMA            reduce using rule 99 (expresiones -> expresion .)
    PARDER          reduce using rule 99 (expresiones -> expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 127

    (27) expresion -> VVEC DOSPT . DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT . DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 182


state 128

    (129) expresion -> PARIZQ expresion . PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 183
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 129

    (31) expresion -> ID PTO . CAPACITY PARIZQ PARDER
    (30) nativas_vec -> ID PTO . LEN PARIZQ PARDER

    CAPACITY        shift and go to state 184
    LEN             shift and go to state 185


state 130

    (132) expresion -> ID lindices .
    (133) lindices -> lindices . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 132 (expresion -> ID lindices .)
    MAS             reduce using rule 132 (expresion -> ID lindices .)
    MENOS           reduce using rule 132 (expresion -> ID lindices .)
    POR             reduce using rule 132 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 132 (expresion -> ID lindices .)
    MODULO          reduce using rule 132 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 132 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 132 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 132 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 132 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 132 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 132 (expresion -> ID lindices .)
    OR              reduce using rule 132 (expresion -> ID lindices .)
    AND             reduce using rule 132 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 132 (expresion -> ID lindices .)
    PARDER          reduce using rule 132 (expresion -> ID lindices .)
    COMA            reduce using rule 132 (expresion -> ID lindices .)
    CORDER          reduce using rule 132 (expresion -> ID lindices .)
    PTO             reduce using rule 132 (expresion -> ID lindices .)
    IGUAL           reduce using rule 132 (expresion -> ID lindices .)
    BARRAS          reduce using rule 132 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 132 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 97


state 131

    (107) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (108) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 186
    TOOWNED         shift and go to state 187


state 132

    (127) expresion -> MENOS expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 127 (expresion -> MENOS expresion .)
    MAS             reduce using rule 127 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 127 (expresion -> MENOS expresion .)
    POR             reduce using rule 127 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 127 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 127 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 127 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 127 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 127 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 127 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 127 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 127 (expresion -> MENOS expresion .)
    OR              reduce using rule 127 (expresion -> MENOS expresion .)
    AND             reduce using rule 127 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 127 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 127 (expresion -> MENOS expresion .)
    COMA            reduce using rule 127 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 127 (expresion -> MENOS expresion .)
    PTO             reduce using rule 127 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 127 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 127 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 127 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 133

    (117) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 188


state 134

    (97) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 97 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 97 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 97 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 97 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 97 (tipo -> SIGNOI STR .)
    MAYORQUE        reduce using rule 97 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 97 (tipo -> SIGNOI STR .)


state 135

    (147) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 189
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 136

    (158) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 190
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 137

    (68) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (69) imatch -> . opmatch COMA dmatch
    (70) opmatch -> . opmatch COMA cmatch
    (71) opmatch -> . opmatch COMA rmatch
    (72) opmatch -> . cmatch
    (73) opmatch -> . rmatch
    (74) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (75) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (80) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (76) bloque_match -> . bloque_match BARRAS expresion
    (77) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 191
    imatch                         shift and go to state 192
    opmatch                        shift and go to state 193
    cmatch                         shift and go to state 194
    rmatch                         shift and go to state 195
    bloque_match                   shift and go to state 196
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 138

    (83) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 197
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 139

    (84) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 198
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 140

    (88) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    FOR             reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 88 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 88 (break -> BREAK expresion PTCOMA .)


state 141

    (90) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 90 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 90 (return -> RETURN expresion PTCOMA .)


state 142

    (85) forin -> FOR ID IN . expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> FOR ID IN . expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 199
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 143

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 200


state 144

    (44) lparame -> ID . DOSPT tipo
    (45) lparame -> ID . DOSPT SIGNOI MUT tipo_arreglo

    DOSPT           shift and go to state 201


state 145

    (38) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (42) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 202
    COMA            shift and go to state 203


state 146

    (39) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 204
    LLAVEIZQ        shift and go to state 205


state 147

    (43) lparametros -> lparame .

    PARDER          reduce using rule 43 (lparametros -> lparame .)
    COMA            reduce using rule 43 (lparametros -> lparame .)


state 148

    (54) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (35) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (36) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (37) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 208
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    CORIZQ          shift and go to state 209

    tipo                           shift and go to state 206
    tipo_arreglo                   shift and go to state 207

state 149

    (55) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 210
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 150

    (56) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 211


state 151

    (25) declaracion_vector -> LET ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 212


state 152

    (57) declaracion -> LET ID IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 213
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 153

    (58) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 58 (asignacion -> ID IGUAL expresion PTCOMA .)


state 154

    (59) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 214
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 155

    (133) lindices -> lindices CORIZQ expresion . CORDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          shift and go to state 215
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 156

    (46) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 46 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 157

    (48) largumentos -> largumentos COMA . largumento
    (50) largumento -> . expresion
    (51) largumento -> . SIGNOI MUT expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    SIGNOI          shift and go to state 102
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    largumento                     shift and go to state 216
    expresion                      shift and go to state 101
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 158

    (51) largumento -> SIGNOI MUT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 217
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 159

    (32) nativas_vector -> ID PTO PUSH PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 218
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 160

    (33) nativas_vector -> ID PTO INSERT PARIZQ . expresion COMA expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 219
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 161

    (34) nativas_vector -> ID PTO REMOVE PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 220
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 162

    (134) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 134 (lindices -> CORIZQ expresion CORDER .)


state 163

    (52) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (53) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    COMA            shift and go to state 221
    PARDER          shift and go to state 222
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 164

    (136) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (137) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (138) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (139) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (144) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (145) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 223
    bloque_expresion               shift and go to state 224
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 165

    (60) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (61) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (62) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (63) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 225
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 166

    (112) expresion -> expresion MAS expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 112 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 112 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 112 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 112 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 112 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 112 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 112 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 112 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 112 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 112 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 112 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 112 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 112 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 112 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 112 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 112 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 112 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 112 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 112 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! POR             [ reduce using rule 112 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 112 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 112 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 167

    (113) expresion -> expresion MENOS expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 113 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 113 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 113 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 113 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 113 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 113 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 113 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 113 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 113 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 113 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 113 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 113 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 113 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 113 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! POR             [ reduce using rule 113 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 113 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 113 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 168

    (114) expresion -> expresion POR expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 114 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 114 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 114 (expresion -> expresion POR expresion .)
    POR             reduce using rule 114 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 114 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 114 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 114 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 114 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 114 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 114 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 114 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 114 (expresion -> expresion POR expresion .)
    OR              reduce using rule 114 (expresion -> expresion POR expresion .)
    AND             reduce using rule 114 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 114 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 114 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 114 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 114 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 114 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 114 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 114 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 114 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 169

    (115) expresion -> expresion DIVIDIDO expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 115 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 170

    (116) expresion -> expresion MODULO expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 116 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 116 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 116 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 116 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 116 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 116 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 116 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 116 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 116 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 116 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 116 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 116 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 116 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 116 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 116 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 116 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 171

    (119) expresion -> expresion IGUALQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 119 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 119 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 119 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 119 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 119 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 119 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 172

    (120) expresion -> expresion NOIGUALQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 120 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 173

    (121) expresion -> expresion MENORQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 121 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 121 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 121 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 121 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 121 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 174

    (122) expresion -> expresion MAYORQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 122 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 122 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 122 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 122 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 122 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 122 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 175

    (123) expresion -> expresion MENORIQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 123 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 123 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 123 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 123 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 123 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 123 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 176

    (124) expresion -> expresion MAYORIQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 124 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NOIGUALQUE      [ shift and go to state 116 ]
  ! MENORQUE        [ shift and go to state 117 ]
  ! MAYORQUE        [ shift and go to state 118 ]
  ! MENORIQUE       [ shift and go to state 119 ]
  ! MAYORIQUE       [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 177

    (125) expresion -> expresion OR expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 125 (expresion -> expresion OR expresion .)
    OR              reduce using rule 125 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 125 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 125 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 125 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 125 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 125 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 125 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 125 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 125 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    AND             shift and go to state 122

  ! MAS             [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 125 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 121 ]


state 178

    (126) expresion -> expresion AND expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 126 (expresion -> expresion AND expresion .)
    OR              reduce using rule 126 (expresion -> expresion AND expresion .)
    AND             reduce using rule 126 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 126 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 126 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 126 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 126 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 126 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 126 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 126 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 126 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120

  ! MAS             [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 126 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 121 ]
  ! AND             [ shift and go to state 122 ]


state 179

    (26) expresion -> VEC NOT CORIZQ . expresiones CORDER
    (98) expresiones -> . expresiones COMA expresion
    (99) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresiones                    shift and go to state 226
    expresion                      shift and go to state 126
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 180

    (131) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 131 (expresion -> CORIZQ expresiones CORDER .)


state 181

    (98) expresiones -> expresiones COMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 227
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 182

    (27) expresion -> VVEC DOSPT DOSPT . NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT DOSPT . WITH_CAPACITY PARIZQ expresion PARDER

    NEW             shift and go to state 228
    WITH_CAPACITY   shift and go to state 229


state 183

    (129) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 129 (expresion -> PARIZQ expresion PARDER .)


state 184

    (31) expresion -> ID PTO CAPACITY . PARIZQ PARDER

    PARIZQ          shift and go to state 230


state 185

    (30) nativas_vec -> ID PTO LEN . PARIZQ PARDER

    PARIZQ          shift and go to state 231


state 186

    (107) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 232


state 187

    (108) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 233


state 188

    (117) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 234
    POWF            shift and go to state 235


state 189

    (147) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (148) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (151) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (152) opmatch_asig -> . cmatch_asig
    (153) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (155) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (156) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 236
    imatch_asig                    shift and go to state 237
    opmatch_asig                   shift and go to state 238
    cmatch_asig                    shift and go to state 239
    bloque_match_asig              shift and go to state 240
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 190

    (158) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 241
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 191

    (80) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (77) bloque_match -> expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTO             shift and go to state 242
    IGUAL           reduce using rule 77 (bloque_match -> expresion .)
    BARRAS          reduce using rule 77 (bloque_match -> expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 192

    (68) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 243


state 193

    (69) imatch -> opmatch . COMA dmatch
    (70) opmatch -> opmatch . COMA cmatch
    (71) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 244


state 194

    (72) opmatch -> cmatch .

    COMA            reduce using rule 72 (opmatch -> cmatch .)


state 195

    (73) opmatch -> rmatch .

    COMA            reduce using rule 73 (opmatch -> rmatch .)


state 196

    (74) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (75) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (76) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 245
    BARRAS          shift and go to state 246


state 197

    (83) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 83 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 198

    (84) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 247
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 199

    (85) forin -> FOR ID IN expresion . LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> FOR ID IN expresion . PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 248
    PTO             shift and go to state 249
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 200

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 250
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 201

    (44) lparame -> ID DOSPT . tipo
    (45) lparame -> ID DOSPT . SIGNOI MUT tipo_arreglo
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    SIGNOI          shift and go to state 252
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77

    tipo                           shift and go to state 251

state 202

    (38) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 253
    LLAVEIZQ        shift and go to state 254


state 203

    (42) lparametros -> lparametros COMA . lparame
    (44) lparame -> . ID DOSPT tipo
    (45) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    ID              shift and go to state 144

    lparame                        shift and go to state 255

state 204

    (39) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 256


state 205

    (41) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 257
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 206

    (54) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 258


state 207

    (35) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 259


state 208

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 260


state 209

    (36) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (37) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (36) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (37) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 209
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo_arreglo                   shift and go to state 261
    tipo                           shift and go to state 262

state 210

    (55) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 263
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 211

    (56) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 264
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 212

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo                           shift and go to state 265

state 213

    (57) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 57 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 214

    (59) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FOR             reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 59 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 215

    (133) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 133 (lindices -> lindices CORIZQ expresion CORDER .)


state 216

    (48) largumentos -> largumentos COMA largumento .

    PARDER          reduce using rule 48 (largumentos -> largumentos COMA largumento .)
    COMA            reduce using rule 48 (largumentos -> largumentos COMA largumento .)


state 217

    (51) largumento -> SIGNOI MUT expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          reduce using rule 51 (largumento -> SIGNOI MUT expresion .)
    COMA            reduce using rule 51 (largumento -> SIGNOI MUT expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 218

    (32) nativas_vector -> ID PTO PUSH PARIZQ expresion . PARDER PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 266
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 219

    (33) nativas_vector -> ID PTO INSERT PARIZQ expresion . COMA expresion PARDER PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    COMA            shift and go to state 267
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 220

    (34) nativas_vector -> ID PTO REMOVE PARIZQ expresion . PARDER PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 268
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 221

    (52) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (98) expresiones -> . expresiones COMA expresion
    (99) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 126
    expresiones                    shift and go to state 269
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 222

    (53) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 270


state 223

    (145) bloque_expresion -> expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 145 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 145 (bloque_expresion -> expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 224

    (136) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (137) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (138) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (144) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 271
    PTCOMA          shift and go to state 272


state 225

    (60) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (61) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (62) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (63) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (67) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (64) lelseif -> . lelseif elseif
    (65) lelseif -> . elseif
    (66) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 60 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 275

    else                           shift and go to state 273
    lelseif                        shift and go to state 274
    elseif                         shift and go to state 276

state 226

    (26) expresion -> VEC NOT CORIZQ expresiones . CORDER
    (98) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 277
    COMA            shift and go to state 181


state 227

    (98) expresiones -> expresiones COMA expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          reduce using rule 98 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 98 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 98 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 228

    (27) expresion -> VVEC DOSPT DOSPT NEW . PARIZQ PARDER

    PARIZQ          shift and go to state 278


state 229

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 279


state 230

    (31) expresion -> ID PTO CAPACITY PARIZQ . PARDER

    PARDER          shift and go to state 280


state 231

    (30) nativas_vec -> ID PTO LEN PARIZQ . PARDER

    PARDER          shift and go to state 281


state 232

    (107) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 282


state 233

    (108) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 283


state 234

    (117) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 284


state 235

    (118) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 285


state 236

    (156) bloque_match_asig -> expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 156 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 156 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 237

    (147) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 286


state 238

    (148) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (151) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 287


state 239

    (152) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 152 (opmatch_asig -> cmatch_asig .)


state 240

    (153) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (155) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 288
    BARRAS          shift and go to state 289


state 241

    (158) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 158 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 242

    (80) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 290


state 243

    (68) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FOR             reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 68 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 244

    (69) imatch -> opmatch COMA . dmatch
    (70) opmatch -> opmatch COMA . cmatch
    (71) opmatch -> opmatch COMA . rmatch
    (78) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (74) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (75) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (80) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (76) bloque_match -> . bloque_match BARRAS expresion
    (77) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 294
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    dmatch                         shift and go to state 291
    cmatch                         shift and go to state 292
    rmatch                         shift and go to state 293
    bloque_match                   shift and go to state 196
    expresion                      shift and go to state 191
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 245

    (74) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (75) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 295


state 246

    (76) bloque_match -> bloque_match BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 296
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 247

    (84) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 84 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 248

    (85) forin -> FOR ID IN expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 297
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 249

    (86) forin -> FOR ID IN expresion PTO . PTO expresion LLAVEIZQ instrucciones LLAVEDER

    PTO             shift and go to state 298


state 250

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 299
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 251

    (44) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 44 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 44 (lparame -> ID DOSPT tipo .)


state 252

    (45) lparame -> ID DOSPT SIGNOI . MUT tipo_arreglo
    (97) tipo -> SIGNOI . STR

    MUT             shift and go to state 300
    STR             shift and go to state 134


state 253

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 301


state 254

    (40) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 302
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 255

    (42) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 42 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 42 (lparametros -> lparametros COMA lparame .)


state 256

    (39) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo                           shift and go to state 303

state 257

    (41) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 304
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 258

    (54) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 305
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 259

    (35) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 306
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 260

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo                           shift and go to state 307

state 261

    (36) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 308


state 262

    (37) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 309


state 263

    (55) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 55 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 264

    (56) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 310
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 265

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 311


state 266

    (32) nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 312


state 267

    (33) nativas_vector -> ID PTO INSERT PARIZQ expresion COMA . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 313
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 268

    (34) nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 314


state 269

    (52) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (98) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 315
    COMA            shift and go to state 181


state 270

    (53) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 53 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 271

    (136) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (137) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (138) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (143) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (140) elseifa -> . elseifa lif
    (141) elseifa -> . lif
    (142) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 136 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 318

    elsea                          shift and go to state 316
    elseifa                        shift and go to state 317
    lif                            shift and go to state 319

state 272

    (144) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 320
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 273

    (61) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FOR             reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 61 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 274

    (62) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (63) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (64) lelseif -> lelseif . elseif
    (67) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (66) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FOR             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 275

    else                           shift and go to state 321
    elseif                         shift and go to state 322

state 275

    (67) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (66) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 323
    IF              shift and go to state 324


state 276

    (65) lelseif -> elseif .

    ELSE            reduce using rule 65 (lelseif -> elseif .)
    FN              reduce using rule 65 (lelseif -> elseif .)
    LET             reduce using rule 65 (lelseif -> elseif .)
    PRINTLN         reduce using rule 65 (lelseif -> elseif .)
    ID              reduce using rule 65 (lelseif -> elseif .)
    IF              reduce using rule 65 (lelseif -> elseif .)
    MATCH           reduce using rule 65 (lelseif -> elseif .)
    LOOP            reduce using rule 65 (lelseif -> elseif .)
    WHILE           reduce using rule 65 (lelseif -> elseif .)
    BREAK           reduce using rule 65 (lelseif -> elseif .)
    RETURN          reduce using rule 65 (lelseif -> elseif .)
    CONTINUE        reduce using rule 65 (lelseif -> elseif .)
    FOR             reduce using rule 65 (lelseif -> elseif .)
    $end            reduce using rule 65 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 65 (lelseif -> elseif .)
    COMA            reduce using rule 65 (lelseif -> elseif .)


state 277

    (26) expresion -> VEC NOT CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAS             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    POR             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    OR              reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AND             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    COMA            reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTO             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)


state 278

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ . PARDER

    PARDER          shift and go to state 325


state 279

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 326
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 280

    (31) expresion -> ID PTO CAPACITY PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MAS             reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MENOS           reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    POR             reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MODULO          reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    IGUALQUE        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MENORQUE        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MAYORQUE        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MENORIQUE       reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    OR              reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    AND             reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    PTCOMA          reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    PARDER          reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    COMA            reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    CORDER          reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    PTO             reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    IGUAL           reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    BARRAS          reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)
    LLAVEDER        reduce using rule 31 (expresion -> ID PTO CAPACITY PARIZQ PARDER .)


state 281

    (30) nativas_vec -> ID PTO LEN PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAS             reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENOS           reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    POR             reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MODULO          reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    IGUALQUE        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENORQUE        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAYORQUE        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MENORIQUE       reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    OR              reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    AND             reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PTCOMA          reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PARDER          reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    COMA            reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    CORDER          reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    PTO             reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    IGUAL           reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    BARRAS          reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 30 (nativas_vec -> ID PTO LEN PARIZQ PARDER .)


state 282

    (107) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 107 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 283

    (108) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 108 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 284

    (117) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 327
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 285

    (118) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 328
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 286

    (147) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 147 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 287

    (148) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (151) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (149) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (150) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (153) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (155) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (156) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 331
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    dmatch_asig                    shift and go to state 329
    cmatch_asig                    shift and go to state 330
    expresion                      shift and go to state 236
    bloque_match_asig              shift and go to state 240
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 288

    (153) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 332


state 289

    (155) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 333
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 290

    (80) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 334


state 291

    (69) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 69 (imatch -> opmatch COMA dmatch .)


state 292

    (70) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 70 (opmatch -> opmatch COMA cmatch .)


state 293

    (71) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 71 (opmatch -> opmatch COMA rmatch .)


state 294

    (78) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 335


state 295

    (74) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (75) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEIZQ        shift and go to state 336
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 337
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 296

    (76) bloque_match -> bloque_match BARRAS expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 76 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 76 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 297

    (85) forin -> FOR ID IN expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 338
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 298

    (86) forin -> FOR ID IN expresion PTO PTO . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 339
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 299

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 300

    (45) lparame -> ID DOSPT SIGNOI MUT . tipo_arreglo
    (36) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (37) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    CORIZQ          shift and go to state 209

    tipo_arreglo                   shift and go to state 340

state 301

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR

    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78

    tipo                           shift and go to state 341

state 302

    (40) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 342
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 303

    (39) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 343


state 304

    (41) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 305

    (54) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 344
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 306

    (35) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 345
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 307

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 346


state 308

    (36) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 347
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 309

    (37) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 348
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 310

    (56) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 56 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 311

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 349


state 312

    (32) nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 32 (nativas_vector -> ID PTO PUSH PARIZQ expresion PARDER PTCOMA .)


state 313

    (33) nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion . PARDER PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 350
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 314

    (34) nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 34 (nativas_vector -> ID PTO REMOVE PARIZQ expresion PARDER PTCOMA .)


state 315

    (52) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 351


state 316

    (137) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 137 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 317

    (138) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (140) elseifa -> elseifa . lif
    (143) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (142) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 318

    elsea                          shift and go to state 352
    lif                            shift and go to state 353

state 318

    (143) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (142) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 354
    IF              shift and go to state 355


state 319

    (141) elseifa -> lif .

    ELSE            reduce using rule 141 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 141 (elseifa -> lif .)
    MAS             reduce using rule 141 (elseifa -> lif .)
    MENOS           reduce using rule 141 (elseifa -> lif .)
    POR             reduce using rule 141 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 141 (elseifa -> lif .)
    MODULO          reduce using rule 141 (elseifa -> lif .)
    IGUALQUE        reduce using rule 141 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 141 (elseifa -> lif .)
    MENORQUE        reduce using rule 141 (elseifa -> lif .)
    MAYORQUE        reduce using rule 141 (elseifa -> lif .)
    MENORIQUE       reduce using rule 141 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 141 (elseifa -> lif .)
    OR              reduce using rule 141 (elseifa -> lif .)
    AND             reduce using rule 141 (elseifa -> lif .)
    PTCOMA          reduce using rule 141 (elseifa -> lif .)
    PARDER          reduce using rule 141 (elseifa -> lif .)
    COMA            reduce using rule 141 (elseifa -> lif .)
    CORDER          reduce using rule 141 (elseifa -> lif .)
    PTO             reduce using rule 141 (elseifa -> lif .)
    IGUAL           reduce using rule 141 (elseifa -> lif .)
    BARRAS          reduce using rule 141 (elseifa -> lif .)
    LLAVEDER        reduce using rule 141 (elseifa -> lif .)


state 320

    (144) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 144 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 144 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 321

    (63) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FOR             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 322

    (64) lelseif -> lelseif elseif .

    ELSE            reduce using rule 64 (lelseif -> lelseif elseif .)
    FN              reduce using rule 64 (lelseif -> lelseif elseif .)
    LET             reduce using rule 64 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 64 (lelseif -> lelseif elseif .)
    ID              reduce using rule 64 (lelseif -> lelseif elseif .)
    IF              reduce using rule 64 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 64 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 64 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 64 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 64 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 64 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 64 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 64 (lelseif -> lelseif elseif .)
    $end            reduce using rule 64 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 64 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 64 (lelseif -> lelseif elseif .)


state 323

    (67) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 356
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 324

    (66) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 357
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 325

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAS             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENOS           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    POR             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MODULO          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUALQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    OR              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AND             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTCOMA          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PARDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    COMA            reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    CORDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTO             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUAL           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    BARRAS          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEDER        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)


state 326

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion . PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 358
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 327

    (117) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    COMA            shift and go to state 359
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 328

    (118) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    COMA            shift and go to state 360
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 329

    (148) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 148 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 330

    (151) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 151 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 331

    (149) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (150) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 361


state 332

    (153) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (154) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 362
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 363
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 333

    (155) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 155 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 155 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 334

    (80) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 364
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 335

    (78) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 365


state 336

    (74) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 366
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 337

    (75) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 75 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 338

    (85) forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 85 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)


state 339

    (86) forin -> FOR ID IN expresion PTO PTO expresion . LLAVEIZQ instrucciones LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 367
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 340

    (45) lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .

    PARDER          reduce using rule 45 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)
    COMA            reduce using rule 45 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)


state 341

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 368


state 342

    (40) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 343

    (39) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 369
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 344

    (54) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 54 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 345

    (35) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 35 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 346

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 370


state 347

    (36) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          shift and go to state 371
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 348

    (37) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    CORDER          shift and go to state 372
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 349

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 373
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 350

    (33) nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 374


state 351

    (52) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 52 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 352

    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 353

    (140) elseifa -> elseifa lif .

    ELSE            reduce using rule 140 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 140 (elseifa -> elseifa lif .)
    MAS             reduce using rule 140 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 140 (elseifa -> elseifa lif .)
    POR             reduce using rule 140 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 140 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 140 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 140 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 140 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 140 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 140 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 140 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 140 (elseifa -> elseifa lif .)
    OR              reduce using rule 140 (elseifa -> elseifa lif .)
    AND             reduce using rule 140 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 140 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 140 (elseifa -> elseifa lif .)
    COMA            reduce using rule 140 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 140 (elseifa -> elseifa lif .)
    PTO             reduce using rule 140 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 140 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 140 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 140 (elseifa -> elseifa lif .)


state 354

    (143) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (144) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (145) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    bloque_expresion               shift and go to state 375
    expresion                      shift and go to state 223
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 355

    (142) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 376
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 356

    (67) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 377
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 357

    (66) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 378
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 358

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAS             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENOS           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    POR             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MODULO          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    OR              reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AND             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PARDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    COMA            reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    CORDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTO             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)


state 359

    (117) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 379
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 360

    (118) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 380
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 361

    (149) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (150) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 381


state 362

    (153) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (144) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (145) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    bloque_expresion               shift and go to state 382
    expresion                      shift and go to state 223
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 363

    (154) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    COMA            reduce using rule 154 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 364

    (80) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 383
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 365

    (78) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (79) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEIZQ        shift and go to state 384
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 385
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 366

    (74) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 386
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 367

    (86) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 387
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 368

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 388
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 369

    (39) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 389
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 370

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    tipo                           shift and go to state 67
    expresion                      shift and go to state 390
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 371

    (36) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 36 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 36 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 36 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    COMA            reduce using rule 36 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 372

    (37) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 37 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 37 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 37 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    COMA            reduce using rule 37 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 373

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 391
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 374

    (33) nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .

    FN              reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LET             reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    ID              reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    IF              reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    MATCH           reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LOOP            reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    WHILE           reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    BREAK           reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    RETURN          reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    FOR             reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    $end            reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    COMA            reduce using rule 33 (nativas_vector -> ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)


state 375

    (143) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (144) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 392
    PTCOMA          shift and go to state 272


state 376

    (142) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 393
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 377

    (67) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 67 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 378

    (66) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 394
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 379

    (117) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 395
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 380

    (118) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PARDER          shift and go to state 396
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 381

    (149) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (150) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 397
    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 398
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 382

    (153) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (144) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 399
    PTCOMA          shift and go to state 272


state 383

    (80) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 400


state 384

    (78) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 401
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 385

    (79) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 79 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 386

    (74) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 74 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 387

    (86) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 402
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 388

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 403
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 389

    (39) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 39 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 390

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 404
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 391

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 392

    (143) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 143 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 393

    (142) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (144) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (145) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    expresion                      shift and go to state 223
    bloque_expresion               shift and go to state 405
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 394

    (66) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 406
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 395

    (117) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 117 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 396

    (118) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 118 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 397

    (149) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (144) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (145) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . ID PTO CAPACITY PARIZQ PARDER
    (100) expresion -> . ID
    (101) expresion -> . ENTERO
    (102) expresion -> . DECIMAL
    (103) expresion -> . TRUE
    (104) expresion -> . FALSE
    (105) expresion -> . tostring
    (106) expresion -> . toowned
    (109) expresion -> . STR
    (110) expresion -> . CADENA
    (111) expresion -> . CARACTER
    (112) expresion -> . expresion MAS expresion
    (113) expresion -> . expresion MENOS expresion
    (114) expresion -> . expresion POR expresion
    (115) expresion -> . expresion DIVIDIDO expresion
    (116) expresion -> . expresion MODULO expresion
    (117) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (118) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (119) expresion -> . expresion IGUALQUE expresion
    (120) expresion -> . expresion NOIGUALQUE expresion
    (121) expresion -> . expresion MENORQUE expresion
    (122) expresion -> . expresion MAYORQUE expresion
    (123) expresion -> . expresion MENORIQUE expresion
    (124) expresion -> . expresion MAYORIQUE expresion
    (125) expresion -> . expresion OR expresion
    (126) expresion -> . expresion AND expresion
    (127) expresion -> . MENOS expresion
    (128) expresion -> . NOT expresion
    (129) expresion -> . PARIZQ expresion PARDER
    (130) expresion -> . llamada_funciones
    (131) expresion -> . CORIZQ expresiones CORDER
    (132) expresion -> . ID lindices
    (135) expresion -> . if_asig
    (146) expresion -> . match_asig
    (157) expresion -> . loop_asig
    (30) nativas_vec -> . ID PTO LEN PARIZQ PARDER
    (107) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (108) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (91) tipo -> . I64
    (92) tipo -> . F64
    (93) tipo -> . BOOL
    (94) tipo -> . CHAR
    (95) tipo -> . STRING
    (96) tipo -> . USIZE
    (97) tipo -> . SIGNOI STR
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (136) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (137) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (147) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (158) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    VEC             shift and go to state 50
    VVEC            shift and go to state 53
    ID              shift and go to state 56
    ENTERO          shift and go to state 57
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 59
    FALSE           shift and go to state 60
    STR             shift and go to state 63
    CADENA          shift and go to state 64
    CARACTER        shift and go to state 65
    MENOS           shift and go to state 66
    NOT             shift and go to state 51
    PARIZQ          shift and go to state 54
    CORIZQ          shift and go to state 52
    I64             shift and go to state 72
    F64             shift and go to state 73
    BOOL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    USIZE           shift and go to state 77
    SIGNOI          shift and go to state 78
    IF              shift and go to state 48
    MATCH           shift and go to state 79
    LOOP            shift and go to state 80

    bloque_expresion               shift and go to state 407
    expresion                      shift and go to state 223
    nativas_vec                    shift and go to state 55
    tostring                       shift and go to state 61
    toowned                        shift and go to state 62
    tipo                           shift and go to state 67
    llamada_funciones              shift and go to state 68
    if_asig                        shift and go to state 69
    match_asig                     shift and go to state 70
    loop_asig                      shift and go to state 71

state 398

    (150) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (112) expresion -> expresion . MAS expresion
    (113) expresion -> expresion . MENOS expresion
    (114) expresion -> expresion . POR expresion
    (115) expresion -> expresion . DIVIDIDO expresion
    (116) expresion -> expresion . MODULO expresion
    (119) expresion -> expresion . IGUALQUE expresion
    (120) expresion -> expresion . NOIGUALQUE expresion
    (121) expresion -> expresion . MENORQUE expresion
    (122) expresion -> expresion . MAYORQUE expresion
    (123) expresion -> expresion . MENORIQUE expresion
    (124) expresion -> expresion . MAYORIQUE expresion
    (125) expresion -> expresion . OR expresion
    (126) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 150 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NOIGUALQUE      shift and go to state 116
    MENORQUE        shift and go to state 117
    MAYORQUE        shift and go to state 118
    MENORIQUE       shift and go to state 119
    MAYORIQUE       shift and go to state 120
    OR              shift and go to state 121
    AND             shift and go to state 122


state 399

    (153) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 153 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 400

    (80) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (81) rrmatch -> . instruccion
    (82) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEIZQ        shift and go to state 410
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    rrmatch                        shift and go to state 408
    instruccion                    shift and go to state 409
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 401

    (78) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 411
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 402

    (86) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 86 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)


state 403

    (38) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 38 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 404

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 405

    (142) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (144) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 412
    PTCOMA          shift and go to state 272


state 406

    (66) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 66 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 407

    (149) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (144) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 413
    PTCOMA          shift and go to state 272


state 408

    (80) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 80 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 409

    (81) rrmatch -> instruccion .

    COMA            reduce using rule 81 (rrmatch -> instruccion .)


state 410

    (82) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instrucciones                  shift and go to state 414
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 411

    (78) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 78 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 412

    (142) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 142 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 413

    (149) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 149 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 414

    (82) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (54) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (55) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (56) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET ID IGUAL expresion PTCOMA
    (52) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (53) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (58) asignacion -> . ID IGUAL expresion PTCOMA
    (59) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (60) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (61) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (83) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (84) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (87) break -> . BREAK PTCOMA
    (88) break -> . BREAK expresion PTCOMA
    (90) return -> . RETURN expresion PTCOMA
    (89) continue -> . CONTINUE PTCOMA
    (38) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (39) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (47) llamada_funciones -> . ID PARIZQ PARDER
    (35) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (85) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (86) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . ID PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . ID PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . ID PTO REMOVE PARIZQ expresion PARDER PTCOMA

    LLAVEDER        shift and go to state 415
    LET             shift and go to state 22
    PRINTLN         shift and go to state 24
    ID              shift and go to state 23
    IF              shift and go to state 25
    MATCH           shift and go to state 26
    LOOP            shift and go to state 27
    WHILE           shift and go to state 28
    BREAK           shift and go to state 29
    RETURN          shift and go to state 30
    CONTINUE        shift and go to state 31
    FN              shift and go to state 36
    FOR             shift and go to state 32

    instruccion                    shift and go to state 34
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    declaracion_vector             shift and go to state 19
    forin                          shift and go to state 20
    nativas_vector                 shift and go to state 21

state 415

    (82) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 82 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 56 resolved as shift
WARNING: shift/reduce conflict for PTO in state 64 resolved as shift
