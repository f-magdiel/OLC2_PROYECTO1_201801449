Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    instruccion -> declaracion_vector
Rule 22    instruccion -> forin
Rule 23    instruccion -> nativas_vector
Rule 24    declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 25    declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 26    expresion -> VEC NOT CORIZQ expresiones CORDER
Rule 27    expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER
Rule 28    expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
Rule 29    expresion -> nativas_vec
Rule 30    nativas_vec -> expresion PTO LEN PARIZQ PARDER
Rule 31    expresion -> expresion PTO CAPACITY PARIZQ PARDER
Rule 32    nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
Rule 33    nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
Rule 34    nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
Rule 35    expresion -> expresion PTO REMOVE PARIZQ expresion PARDER
Rule 36    expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
Rule 37    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 38    declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 39    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 40    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 41    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 42    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 43    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 44    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 45    lparametros -> lparametros COMA lparame
Rule 46    lparametros -> lparame
Rule 47    lparame -> ID DOSPT tipo
Rule 48    lparame -> ID DOSPT SIGNOI MUT tipo_arreglo
Rule 49    lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE
Rule 50    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 51    llamada_funciones -> ID PARIZQ PARDER
Rule 52    largumentos -> largumentos COMA largumento
Rule 53    largumentos -> largumento
Rule 54    largumento -> expresion
Rule 55    largumento -> SIGNOI MUT expresion
Rule 56    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 57    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 58    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 59    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 60    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 61    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 62    asignacion -> ID IGUAL expresion PTCOMA
Rule 63    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 64    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 65    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 66    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 67    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 68    lelseif -> lelseif elseif
Rule 69    lelseif -> elseif
Rule 70    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 71    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 72    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 73    imatch -> opmatch COMA dmatch
Rule 74    opmatch -> opmatch COMA cmatch
Rule 75    opmatch -> opmatch COMA rmatch
Rule 76    opmatch -> cmatch
Rule 77    opmatch -> rmatch
Rule 78    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 79    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 80    bloque_match -> bloque_match BARRAS expresion
Rule 81    bloque_match -> expresion
Rule 82    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 83    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 84    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 85    rrmatch -> instruccion
Rule 86    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 87    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 88    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 89    forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
Rule 90    forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
Rule 91    break -> BREAK PTCOMA
Rule 92    break -> BREAK expresion PTCOMA
Rule 93    continue -> CONTINUE PTCOMA
Rule 94    return -> RETURN expresion PTCOMA
Rule 95    tipo -> I64
Rule 96    tipo -> F64
Rule 97    tipo -> BOOL
Rule 98    tipo -> CHAR
Rule 99    tipo -> STRING
Rule 100   tipo -> USIZE
Rule 101   tipo -> SIGNOI STR
Rule 102   expresiones -> expresiones COMA expresion
Rule 103   expresiones -> expresion
Rule 104   expresion -> ID
Rule 105   expresion -> ENTERO
Rule 106   expresion -> DECIMAL
Rule 107   expresion -> TRUE
Rule 108   expresion -> FALSE
Rule 109   expresion -> tostring
Rule 110   expresion -> toowned
Rule 111   tostring -> expresion PTO TOSTRING PARIZQ PARDER
Rule 112   toowned -> expresion PTO TOOWNED PARIZQ PARDER
Rule 113   expresion -> STR
Rule 114   expresion -> CADENA
Rule 115   expresion -> CARACTER
Rule 116   expresion -> expresion MAS expresion
Rule 117   expresion -> expresion MENOS expresion
Rule 118   expresion -> expresion POR expresion
Rule 119   expresion -> expresion DIVIDIDO expresion
Rule 120   expresion -> expresion MODULO expresion
Rule 121   expresion -> MENOS expresion
Rule 122   expresion -> NOT expresion
Rule 123   expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 124   expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 125   expresion -> expresion IGUALQUE expresion
Rule 126   expresion -> expresion NOIGUALQUE expresion
Rule 127   expresion -> expresion MENORQUE expresion
Rule 128   expresion -> expresion MAYORQUE expresion
Rule 129   expresion -> expresion MENORIQUE expresion
Rule 130   expresion -> expresion MAYORIQUE expresion
Rule 131   expresion -> expresion OR expresion
Rule 132   expresion -> expresion AND expresion
Rule 133   expresion -> PARIZQ expresion PARDER
Rule 134   expresion -> llamada_funciones
Rule 135   expresion -> CORIZQ expresiones CORDER
Rule 136   expresion -> ID lindices
Rule 137   lindices -> lindices CORIZQ expresion CORDER
Rule 138   lindices -> CORIZQ expresion CORDER
Rule 139   expresion -> if_asig
Rule 140   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 141   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 142   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 143   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 144   elseifa -> elseifa lif
Rule 145   elseifa -> lif
Rule 146   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 147   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 148   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 149   bloque_expresion -> expresion
Rule 150   expresion -> match_asig
Rule 151   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 152   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 153   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 154   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 155   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 156   opmatch_asig -> cmatch_asig
Rule 157   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 158   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 159   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 160   bloque_match_asig -> expresion
Rule 161   expresion -> loop_asig
Rule 162   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 163   expresion -> PARIZQ expresion AS tipo PARDER
Rule 164   expresion -> nativas_fun
Rule 165   nativas_fun -> expresion PTO ABS PARIZQ PARDER
Rule 166   nativas_fun -> expresion PTO SQRT PARIZQ PARDER
Rule 167   nativas_fun -> expresion PTO CLONE PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 165
AND                  : 132
AS                   : 163
BARRAS               : 80 159
BOOL                 : 97
BREAK                : 91 92
CADENA               : 114
CAPACITY             : 31
CARACTER             : 115
CHAR                 : 98
CLONE                : 167
COMA                 : 33 45 52 56 73 74 75 102 123 124 152 155
CONTAINS             : 36
CONTINUE             : 93
CORDER               : 26 39 40 135 137 138
CORIZQ               : 26 39 40 135 137 138
DECIMAL              : 106
DIVIDIDO             : 119
DOSPT                : 24 25 27 27 28 28 37 38 47 48 49 58 60 123 123 124 124
ELSE                 : 70 71 146 147
ENTERO               : 105
F64                  : 96
FALSE                : 108
FN                   : 5 41 42 43 44
FOR                  : 89 90
GUIONB               : 82 83 153 154
I64                  : 95
ID                   : 24 25 37 38 41 42 43 44 47 48 49 50 51 58 59 60 61 62 63 89 90 104 136
IF                   : 64 65 66 67 70 140 141 142 143 146
IGUAL                : 24 25 37 38 58 59 60 61 62 63 78 79 82 83 84 84 153 154 157 158
IGUALQUE             : 125
IN                   : 89 90
INSERT               : 33
LEN                  : 30
LET                  : 24 25 37 38 58 59 60 61
LLAVEDER             : 5 41 42 43 44 64 65 66 67 70 71 72 78 82 86 87 88 89 90 140 141 142 143 146 147 151 153 157 162
LLAVEIZQ             : 5 41 42 43 44 64 65 66 67 70 71 72 78 82 86 87 88 89 90 140 141 142 143 146 147 151 153 157 162
LOOP                 : 87 162
MAIN                 : 5
MAS                  : 116
MATCH                : 72 151
MAYORIQUE            : 130
MAYORQUE             : 24 25 41 42 49 78 79 82 83 84 128 153 154 157 158
MENORIQUE            : 129
MENORQUE             : 24 25 49 127
MENOS                : 41 42 117 121
MODULO               : 120
MUT                  : 24 37 48 49 55 58 59
NEW                  : 27
NOIGUALQUE           : 126
NOT                  : 26 56 57 122
OR                   : 131
PARDER               : 5 27 28 30 31 32 33 34 35 36 41 42 43 44 50 51 56 57 111 112 123 124 133 163 165 166 167
PARIZQ               : 5 27 28 30 31 32 33 34 35 36 41 42 43 44 50 51 56 57 111 112 123 124 133 163 165 166 167
POR                  : 118
POW                  : 123
POWF                 : 124
PRINTLN              : 56 57
PTCOMA               : 19 24 25 32 33 34 37 38 39 40 56 57 58 59 60 61 62 63 91 92 93 94 148
PTO                  : 30 31 32 33 34 35 36 84 84 90 90 111 112 165 166 167
PUSH                 : 32
REMOVE               : 34 35
RETURN               : 94
SIGNOI               : 36 48 49 55 101
SQRT                 : 166
STR                  : 101 113
STRING               : 99
TOOWNED              : 112
TOSTRING             : 111
TRUE                 : 107
USIZE                : 100
VEC                  : 26
VVEC                 : 24 25 27 28 49
WHILE                : 88
WITH_CAPACITY        : 28
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 140 141 142 143 146 147 148 153 157
bloque_match         : 78 79 80
bloque_match_asig    : 157 158 159
break                : 15
cmatch               : 74 76
cmatch_asig          : 155 156
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
declaracion_vector   : 21
dmatch               : 73
dmatch_asig          : 152
else                 : 65 67
elsea                : 141 143
elseif               : 68 69
elseifa              : 142 143 144
expresion            : 24 25 28 30 31 32 32 33 33 33 34 34 35 35 36 36 37 38 39 40 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 72 80 81 84 84 88 89 90 90 92 94 102 103 111 112 116 116 117 117 118 118 119 119 120 120 121 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 137 138 140 141 142 143 146 148 149 151 154 158 159 160 163 165 166 167
expresiones          : 26 56 102 135
forin                : 22
funciones            : 18
if                   : 11
if_asig              : 139
imatch               : 72
imatch_asig          : 151
imprimir             : 9
inicio               : 0
instruccion          : 6 7 79 83 85
instrucciones        : 1 1 2 3 5 6 41 42 43 44 64 65 66 67 70 71 78 82 86 87 88 89 90 162
largumento           : 52 53
largumentos          : 50 52
lelseif              : 66 67 68
lif                  : 144 145
lindices             : 63 136 137
llamada_funciones    : 19 134
loop                 : 13
loop_asig            : 161
lparame              : 45 46
lparametros          : 41 43 45
main                 : 1 2 3 4
match                : 12
match_asig           : 150
nativas_fun          : 164
nativas_vec          : 29
nativas_vector       : 23
opmatch              : 73 74 75
opmatch_asig         : 152 155
return               : 16
rmatch               : 75 77
rrmatch              : 84
tipo                 : 24 25 40 41 42 47 49 58 60 123 124 163
tipo_arreglo         : 37 38 39 48
toowned              : 110
tostring             : 109
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    main                           shift and go to state 62
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 64
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    FOR             reduce using rule 7 (instrucciones -> instruccion .)
    VEC             reduce using rule 7 (instrucciones -> instruccion .)
    VVEC            reduce using rule 7 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 7 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 7 (instrucciones -> instruccion .)
    TRUE            reduce using rule 7 (instrucciones -> instruccion .)
    FALSE           reduce using rule 7 (instrucciones -> instruccion .)
    STR             reduce using rule 7 (instrucciones -> instruccion .)
    CADENA          reduce using rule 7 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 7 (instrucciones -> instruccion .)
    MENOS           reduce using rule 7 (instrucciones -> instruccion .)
    NOT             reduce using rule 7 (instrucciones -> instruccion .)
    PARIZQ          reduce using rule 7 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 7 (instrucciones -> instruccion .)
    I64             reduce using rule 7 (instrucciones -> instruccion .)
    F64             reduce using rule 7 (instrucciones -> instruccion .)
    BOOL            reduce using rule 7 (instrucciones -> instruccion .)
    CHAR            reduce using rule 7 (instrucciones -> instruccion .)
    STRING          reduce using rule 7 (instrucciones -> instruccion .)
    USIZE           reduce using rule 7 (instrucciones -> instruccion .)
    SIGNOI          reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 66
    ID              shift and go to state 67


state 6

    (133) expresion -> PARIZQ . expresion PARDER
    (163) expresion -> PARIZQ . expresion AS tipo PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 68
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 7

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    FOR             reduce using rule 8 (instruccion -> declaracion .)
    VEC             reduce using rule 8 (instruccion -> declaracion .)
    VVEC            reduce using rule 8 (instruccion -> declaracion .)
    ENTERO          reduce using rule 8 (instruccion -> declaracion .)
    DECIMAL         reduce using rule 8 (instruccion -> declaracion .)
    TRUE            reduce using rule 8 (instruccion -> declaracion .)
    FALSE           reduce using rule 8 (instruccion -> declaracion .)
    STR             reduce using rule 8 (instruccion -> declaracion .)
    CADENA          reduce using rule 8 (instruccion -> declaracion .)
    CARACTER        reduce using rule 8 (instruccion -> declaracion .)
    MENOS           reduce using rule 8 (instruccion -> declaracion .)
    NOT             reduce using rule 8 (instruccion -> declaracion .)
    PARIZQ          reduce using rule 8 (instruccion -> declaracion .)
    CORIZQ          reduce using rule 8 (instruccion -> declaracion .)
    I64             reduce using rule 8 (instruccion -> declaracion .)
    F64             reduce using rule 8 (instruccion -> declaracion .)
    BOOL            reduce using rule 8 (instruccion -> declaracion .)
    CHAR            reduce using rule 8 (instruccion -> declaracion .)
    STRING          reduce using rule 8 (instruccion -> declaracion .)
    USIZE           reduce using rule 8 (instruccion -> declaracion .)
    SIGNOI          reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 8

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    FOR             reduce using rule 9 (instruccion -> imprimir .)
    VEC             reduce using rule 9 (instruccion -> imprimir .)
    VVEC            reduce using rule 9 (instruccion -> imprimir .)
    ENTERO          reduce using rule 9 (instruccion -> imprimir .)
    DECIMAL         reduce using rule 9 (instruccion -> imprimir .)
    TRUE            reduce using rule 9 (instruccion -> imprimir .)
    FALSE           reduce using rule 9 (instruccion -> imprimir .)
    STR             reduce using rule 9 (instruccion -> imprimir .)
    CADENA          reduce using rule 9 (instruccion -> imprimir .)
    CARACTER        reduce using rule 9 (instruccion -> imprimir .)
    MENOS           reduce using rule 9 (instruccion -> imprimir .)
    NOT             reduce using rule 9 (instruccion -> imprimir .)
    PARIZQ          reduce using rule 9 (instruccion -> imprimir .)
    CORIZQ          reduce using rule 9 (instruccion -> imprimir .)
    I64             reduce using rule 9 (instruccion -> imprimir .)
    F64             reduce using rule 9 (instruccion -> imprimir .)
    BOOL            reduce using rule 9 (instruccion -> imprimir .)
    CHAR            reduce using rule 9 (instruccion -> imprimir .)
    STRING          reduce using rule 9 (instruccion -> imprimir .)
    USIZE           reduce using rule 9 (instruccion -> imprimir .)
    SIGNOI          reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 9

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    FOR             reduce using rule 10 (instruccion -> asignacion .)
    VEC             reduce using rule 10 (instruccion -> asignacion .)
    VVEC            reduce using rule 10 (instruccion -> asignacion .)
    ENTERO          reduce using rule 10 (instruccion -> asignacion .)
    DECIMAL         reduce using rule 10 (instruccion -> asignacion .)
    TRUE            reduce using rule 10 (instruccion -> asignacion .)
    FALSE           reduce using rule 10 (instruccion -> asignacion .)
    STR             reduce using rule 10 (instruccion -> asignacion .)
    CADENA          reduce using rule 10 (instruccion -> asignacion .)
    CARACTER        reduce using rule 10 (instruccion -> asignacion .)
    MENOS           reduce using rule 10 (instruccion -> asignacion .)
    NOT             reduce using rule 10 (instruccion -> asignacion .)
    PARIZQ          reduce using rule 10 (instruccion -> asignacion .)
    CORIZQ          reduce using rule 10 (instruccion -> asignacion .)
    I64             reduce using rule 10 (instruccion -> asignacion .)
    F64             reduce using rule 10 (instruccion -> asignacion .)
    BOOL            reduce using rule 10 (instruccion -> asignacion .)
    CHAR            reduce using rule 10 (instruccion -> asignacion .)
    STRING          reduce using rule 10 (instruccion -> asignacion .)
    USIZE           reduce using rule 10 (instruccion -> asignacion .)
    SIGNOI          reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 10

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    FOR             reduce using rule 11 (instruccion -> if .)
    VEC             reduce using rule 11 (instruccion -> if .)
    VVEC            reduce using rule 11 (instruccion -> if .)
    ENTERO          reduce using rule 11 (instruccion -> if .)
    DECIMAL         reduce using rule 11 (instruccion -> if .)
    TRUE            reduce using rule 11 (instruccion -> if .)
    FALSE           reduce using rule 11 (instruccion -> if .)
    STR             reduce using rule 11 (instruccion -> if .)
    CADENA          reduce using rule 11 (instruccion -> if .)
    CARACTER        reduce using rule 11 (instruccion -> if .)
    MENOS           reduce using rule 11 (instruccion -> if .)
    NOT             reduce using rule 11 (instruccion -> if .)
    PARIZQ          reduce using rule 11 (instruccion -> if .)
    CORIZQ          reduce using rule 11 (instruccion -> if .)
    I64             reduce using rule 11 (instruccion -> if .)
    F64             reduce using rule 11 (instruccion -> if .)
    BOOL            reduce using rule 11 (instruccion -> if .)
    CHAR            reduce using rule 11 (instruccion -> if .)
    STRING          reduce using rule 11 (instruccion -> if .)
    USIZE           reduce using rule 11 (instruccion -> if .)
    SIGNOI          reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 11

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    FOR             reduce using rule 12 (instruccion -> match .)
    VEC             reduce using rule 12 (instruccion -> match .)
    VVEC            reduce using rule 12 (instruccion -> match .)
    ENTERO          reduce using rule 12 (instruccion -> match .)
    DECIMAL         reduce using rule 12 (instruccion -> match .)
    TRUE            reduce using rule 12 (instruccion -> match .)
    FALSE           reduce using rule 12 (instruccion -> match .)
    STR             reduce using rule 12 (instruccion -> match .)
    CADENA          reduce using rule 12 (instruccion -> match .)
    CARACTER        reduce using rule 12 (instruccion -> match .)
    MENOS           reduce using rule 12 (instruccion -> match .)
    NOT             reduce using rule 12 (instruccion -> match .)
    PARIZQ          reduce using rule 12 (instruccion -> match .)
    CORIZQ          reduce using rule 12 (instruccion -> match .)
    I64             reduce using rule 12 (instruccion -> match .)
    F64             reduce using rule 12 (instruccion -> match .)
    BOOL            reduce using rule 12 (instruccion -> match .)
    CHAR            reduce using rule 12 (instruccion -> match .)
    STRING          reduce using rule 12 (instruccion -> match .)
    USIZE           reduce using rule 12 (instruccion -> match .)
    SIGNOI          reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 12

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    FOR             reduce using rule 13 (instruccion -> loop .)
    VEC             reduce using rule 13 (instruccion -> loop .)
    VVEC            reduce using rule 13 (instruccion -> loop .)
    ENTERO          reduce using rule 13 (instruccion -> loop .)
    DECIMAL         reduce using rule 13 (instruccion -> loop .)
    TRUE            reduce using rule 13 (instruccion -> loop .)
    FALSE           reduce using rule 13 (instruccion -> loop .)
    STR             reduce using rule 13 (instruccion -> loop .)
    CADENA          reduce using rule 13 (instruccion -> loop .)
    CARACTER        reduce using rule 13 (instruccion -> loop .)
    MENOS           reduce using rule 13 (instruccion -> loop .)
    NOT             reduce using rule 13 (instruccion -> loop .)
    PARIZQ          reduce using rule 13 (instruccion -> loop .)
    CORIZQ          reduce using rule 13 (instruccion -> loop .)
    I64             reduce using rule 13 (instruccion -> loop .)
    F64             reduce using rule 13 (instruccion -> loop .)
    BOOL            reduce using rule 13 (instruccion -> loop .)
    CHAR            reduce using rule 13 (instruccion -> loop .)
    STRING          reduce using rule 13 (instruccion -> loop .)
    USIZE           reduce using rule 13 (instruccion -> loop .)
    SIGNOI          reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 13

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    FOR             reduce using rule 14 (instruccion -> while .)
    VEC             reduce using rule 14 (instruccion -> while .)
    VVEC            reduce using rule 14 (instruccion -> while .)
    ENTERO          reduce using rule 14 (instruccion -> while .)
    DECIMAL         reduce using rule 14 (instruccion -> while .)
    TRUE            reduce using rule 14 (instruccion -> while .)
    FALSE           reduce using rule 14 (instruccion -> while .)
    STR             reduce using rule 14 (instruccion -> while .)
    CADENA          reduce using rule 14 (instruccion -> while .)
    CARACTER        reduce using rule 14 (instruccion -> while .)
    MENOS           reduce using rule 14 (instruccion -> while .)
    NOT             reduce using rule 14 (instruccion -> while .)
    PARIZQ          reduce using rule 14 (instruccion -> while .)
    CORIZQ          reduce using rule 14 (instruccion -> while .)
    I64             reduce using rule 14 (instruccion -> while .)
    F64             reduce using rule 14 (instruccion -> while .)
    BOOL            reduce using rule 14 (instruccion -> while .)
    CHAR            reduce using rule 14 (instruccion -> while .)
    STRING          reduce using rule 14 (instruccion -> while .)
    USIZE           reduce using rule 14 (instruccion -> while .)
    SIGNOI          reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 14

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    FOR             reduce using rule 15 (instruccion -> break .)
    VEC             reduce using rule 15 (instruccion -> break .)
    VVEC            reduce using rule 15 (instruccion -> break .)
    ENTERO          reduce using rule 15 (instruccion -> break .)
    DECIMAL         reduce using rule 15 (instruccion -> break .)
    TRUE            reduce using rule 15 (instruccion -> break .)
    FALSE           reduce using rule 15 (instruccion -> break .)
    STR             reduce using rule 15 (instruccion -> break .)
    CADENA          reduce using rule 15 (instruccion -> break .)
    CARACTER        reduce using rule 15 (instruccion -> break .)
    MENOS           reduce using rule 15 (instruccion -> break .)
    NOT             reduce using rule 15 (instruccion -> break .)
    PARIZQ          reduce using rule 15 (instruccion -> break .)
    CORIZQ          reduce using rule 15 (instruccion -> break .)
    I64             reduce using rule 15 (instruccion -> break .)
    F64             reduce using rule 15 (instruccion -> break .)
    BOOL            reduce using rule 15 (instruccion -> break .)
    CHAR            reduce using rule 15 (instruccion -> break .)
    STRING          reduce using rule 15 (instruccion -> break .)
    USIZE           reduce using rule 15 (instruccion -> break .)
    SIGNOI          reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 15

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    FOR             reduce using rule 16 (instruccion -> return .)
    VEC             reduce using rule 16 (instruccion -> return .)
    VVEC            reduce using rule 16 (instruccion -> return .)
    ENTERO          reduce using rule 16 (instruccion -> return .)
    DECIMAL         reduce using rule 16 (instruccion -> return .)
    TRUE            reduce using rule 16 (instruccion -> return .)
    FALSE           reduce using rule 16 (instruccion -> return .)
    STR             reduce using rule 16 (instruccion -> return .)
    CADENA          reduce using rule 16 (instruccion -> return .)
    CARACTER        reduce using rule 16 (instruccion -> return .)
    MENOS           reduce using rule 16 (instruccion -> return .)
    NOT             reduce using rule 16 (instruccion -> return .)
    PARIZQ          reduce using rule 16 (instruccion -> return .)
    CORIZQ          reduce using rule 16 (instruccion -> return .)
    I64             reduce using rule 16 (instruccion -> return .)
    F64             reduce using rule 16 (instruccion -> return .)
    BOOL            reduce using rule 16 (instruccion -> return .)
    CHAR            reduce using rule 16 (instruccion -> return .)
    STRING          reduce using rule 16 (instruccion -> return .)
    USIZE           reduce using rule 16 (instruccion -> return .)
    SIGNOI          reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 16

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    FOR             reduce using rule 17 (instruccion -> continue .)
    VEC             reduce using rule 17 (instruccion -> continue .)
    VVEC            reduce using rule 17 (instruccion -> continue .)
    ENTERO          reduce using rule 17 (instruccion -> continue .)
    DECIMAL         reduce using rule 17 (instruccion -> continue .)
    TRUE            reduce using rule 17 (instruccion -> continue .)
    FALSE           reduce using rule 17 (instruccion -> continue .)
    STR             reduce using rule 17 (instruccion -> continue .)
    CADENA          reduce using rule 17 (instruccion -> continue .)
    CARACTER        reduce using rule 17 (instruccion -> continue .)
    MENOS           reduce using rule 17 (instruccion -> continue .)
    NOT             reduce using rule 17 (instruccion -> continue .)
    PARIZQ          reduce using rule 17 (instruccion -> continue .)
    CORIZQ          reduce using rule 17 (instruccion -> continue .)
    I64             reduce using rule 17 (instruccion -> continue .)
    F64             reduce using rule 17 (instruccion -> continue .)
    BOOL            reduce using rule 17 (instruccion -> continue .)
    CHAR            reduce using rule 17 (instruccion -> continue .)
    STRING          reduce using rule 17 (instruccion -> continue .)
    USIZE           reduce using rule 17 (instruccion -> continue .)
    SIGNOI          reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 17

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    FOR             reduce using rule 18 (instruccion -> funciones .)
    VEC             reduce using rule 18 (instruccion -> funciones .)
    VVEC            reduce using rule 18 (instruccion -> funciones .)
    ENTERO          reduce using rule 18 (instruccion -> funciones .)
    DECIMAL         reduce using rule 18 (instruccion -> funciones .)
    TRUE            reduce using rule 18 (instruccion -> funciones .)
    FALSE           reduce using rule 18 (instruccion -> funciones .)
    STR             reduce using rule 18 (instruccion -> funciones .)
    CADENA          reduce using rule 18 (instruccion -> funciones .)
    CARACTER        reduce using rule 18 (instruccion -> funciones .)
    MENOS           reduce using rule 18 (instruccion -> funciones .)
    NOT             reduce using rule 18 (instruccion -> funciones .)
    PARIZQ          reduce using rule 18 (instruccion -> funciones .)
    CORIZQ          reduce using rule 18 (instruccion -> funciones .)
    I64             reduce using rule 18 (instruccion -> funciones .)
    F64             reduce using rule 18 (instruccion -> funciones .)
    BOOL            reduce using rule 18 (instruccion -> funciones .)
    CHAR            reduce using rule 18 (instruccion -> funciones .)
    STRING          reduce using rule 18 (instruccion -> funciones .)
    USIZE           reduce using rule 18 (instruccion -> funciones .)
    SIGNOI          reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 18

    (19) instruccion -> llamada_funciones . PTCOMA
    (134) expresion -> llamada_funciones .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 74
    PTO             reduce using rule 134 (expresion -> llamada_funciones .)
    MAS             reduce using rule 134 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 134 (expresion -> llamada_funciones .)
    POR             reduce using rule 134 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 134 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 134 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 134 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 134 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 134 (expresion -> llamada_funciones .)
    OR              reduce using rule 134 (expresion -> llamada_funciones .)
    AND             reduce using rule 134 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 134 (expresion -> llamada_funciones .)

  ! PTCOMA          [ reduce using rule 134 (expresion -> llamada_funciones .) ]


state 19

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FOR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    VEC             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    VVEC            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ENTERO          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    DECIMAL         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    TRUE            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FALSE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    STR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CADENA          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CARACTER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MENOS           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    NOT             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PARIZQ          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CORIZQ          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    I64             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    F64             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BOOL            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CHAR            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    STRING          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    USIZE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    SIGNOI          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 20

    (21) instruccion -> declaracion_vector .

    FN              reduce using rule 21 (instruccion -> declaracion_vector .)
    LET             reduce using rule 21 (instruccion -> declaracion_vector .)
    PRINTLN         reduce using rule 21 (instruccion -> declaracion_vector .)
    ID              reduce using rule 21 (instruccion -> declaracion_vector .)
    IF              reduce using rule 21 (instruccion -> declaracion_vector .)
    MATCH           reduce using rule 21 (instruccion -> declaracion_vector .)
    LOOP            reduce using rule 21 (instruccion -> declaracion_vector .)
    WHILE           reduce using rule 21 (instruccion -> declaracion_vector .)
    BREAK           reduce using rule 21 (instruccion -> declaracion_vector .)
    RETURN          reduce using rule 21 (instruccion -> declaracion_vector .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion_vector .)
    FOR             reduce using rule 21 (instruccion -> declaracion_vector .)
    VEC             reduce using rule 21 (instruccion -> declaracion_vector .)
    VVEC            reduce using rule 21 (instruccion -> declaracion_vector .)
    ENTERO          reduce using rule 21 (instruccion -> declaracion_vector .)
    DECIMAL         reduce using rule 21 (instruccion -> declaracion_vector .)
    TRUE            reduce using rule 21 (instruccion -> declaracion_vector .)
    FALSE           reduce using rule 21 (instruccion -> declaracion_vector .)
    STR             reduce using rule 21 (instruccion -> declaracion_vector .)
    CADENA          reduce using rule 21 (instruccion -> declaracion_vector .)
    CARACTER        reduce using rule 21 (instruccion -> declaracion_vector .)
    MENOS           reduce using rule 21 (instruccion -> declaracion_vector .)
    NOT             reduce using rule 21 (instruccion -> declaracion_vector .)
    PARIZQ          reduce using rule 21 (instruccion -> declaracion_vector .)
    CORIZQ          reduce using rule 21 (instruccion -> declaracion_vector .)
    I64             reduce using rule 21 (instruccion -> declaracion_vector .)
    F64             reduce using rule 21 (instruccion -> declaracion_vector .)
    BOOL            reduce using rule 21 (instruccion -> declaracion_vector .)
    CHAR            reduce using rule 21 (instruccion -> declaracion_vector .)
    STRING          reduce using rule 21 (instruccion -> declaracion_vector .)
    USIZE           reduce using rule 21 (instruccion -> declaracion_vector .)
    SIGNOI          reduce using rule 21 (instruccion -> declaracion_vector .)
    $end            reduce using rule 21 (instruccion -> declaracion_vector .)
    LLAVEDER        reduce using rule 21 (instruccion -> declaracion_vector .)
    COMA            reduce using rule 21 (instruccion -> declaracion_vector .)


state 21

    (22) instruccion -> forin .

    FN              reduce using rule 22 (instruccion -> forin .)
    LET             reduce using rule 22 (instruccion -> forin .)
    PRINTLN         reduce using rule 22 (instruccion -> forin .)
    ID              reduce using rule 22 (instruccion -> forin .)
    IF              reduce using rule 22 (instruccion -> forin .)
    MATCH           reduce using rule 22 (instruccion -> forin .)
    LOOP            reduce using rule 22 (instruccion -> forin .)
    WHILE           reduce using rule 22 (instruccion -> forin .)
    BREAK           reduce using rule 22 (instruccion -> forin .)
    RETURN          reduce using rule 22 (instruccion -> forin .)
    CONTINUE        reduce using rule 22 (instruccion -> forin .)
    FOR             reduce using rule 22 (instruccion -> forin .)
    VEC             reduce using rule 22 (instruccion -> forin .)
    VVEC            reduce using rule 22 (instruccion -> forin .)
    ENTERO          reduce using rule 22 (instruccion -> forin .)
    DECIMAL         reduce using rule 22 (instruccion -> forin .)
    TRUE            reduce using rule 22 (instruccion -> forin .)
    FALSE           reduce using rule 22 (instruccion -> forin .)
    STR             reduce using rule 22 (instruccion -> forin .)
    CADENA          reduce using rule 22 (instruccion -> forin .)
    CARACTER        reduce using rule 22 (instruccion -> forin .)
    MENOS           reduce using rule 22 (instruccion -> forin .)
    NOT             reduce using rule 22 (instruccion -> forin .)
    PARIZQ          reduce using rule 22 (instruccion -> forin .)
    CORIZQ          reduce using rule 22 (instruccion -> forin .)
    I64             reduce using rule 22 (instruccion -> forin .)
    F64             reduce using rule 22 (instruccion -> forin .)
    BOOL            reduce using rule 22 (instruccion -> forin .)
    CHAR            reduce using rule 22 (instruccion -> forin .)
    STRING          reduce using rule 22 (instruccion -> forin .)
    USIZE           reduce using rule 22 (instruccion -> forin .)
    SIGNOI          reduce using rule 22 (instruccion -> forin .)
    $end            reduce using rule 22 (instruccion -> forin .)
    LLAVEDER        reduce using rule 22 (instruccion -> forin .)
    COMA            reduce using rule 22 (instruccion -> forin .)


state 22

    (23) instruccion -> nativas_vector .

    FN              reduce using rule 23 (instruccion -> nativas_vector .)
    LET             reduce using rule 23 (instruccion -> nativas_vector .)
    PRINTLN         reduce using rule 23 (instruccion -> nativas_vector .)
    ID              reduce using rule 23 (instruccion -> nativas_vector .)
    IF              reduce using rule 23 (instruccion -> nativas_vector .)
    MATCH           reduce using rule 23 (instruccion -> nativas_vector .)
    LOOP            reduce using rule 23 (instruccion -> nativas_vector .)
    WHILE           reduce using rule 23 (instruccion -> nativas_vector .)
    BREAK           reduce using rule 23 (instruccion -> nativas_vector .)
    RETURN          reduce using rule 23 (instruccion -> nativas_vector .)
    CONTINUE        reduce using rule 23 (instruccion -> nativas_vector .)
    FOR             reduce using rule 23 (instruccion -> nativas_vector .)
    VEC             reduce using rule 23 (instruccion -> nativas_vector .)
    VVEC            reduce using rule 23 (instruccion -> nativas_vector .)
    ENTERO          reduce using rule 23 (instruccion -> nativas_vector .)
    DECIMAL         reduce using rule 23 (instruccion -> nativas_vector .)
    TRUE            reduce using rule 23 (instruccion -> nativas_vector .)
    FALSE           reduce using rule 23 (instruccion -> nativas_vector .)
    STR             reduce using rule 23 (instruccion -> nativas_vector .)
    CADENA          reduce using rule 23 (instruccion -> nativas_vector .)
    CARACTER        reduce using rule 23 (instruccion -> nativas_vector .)
    MENOS           reduce using rule 23 (instruccion -> nativas_vector .)
    NOT             reduce using rule 23 (instruccion -> nativas_vector .)
    PARIZQ          reduce using rule 23 (instruccion -> nativas_vector .)
    CORIZQ          reduce using rule 23 (instruccion -> nativas_vector .)
    I64             reduce using rule 23 (instruccion -> nativas_vector .)
    F64             reduce using rule 23 (instruccion -> nativas_vector .)
    BOOL            reduce using rule 23 (instruccion -> nativas_vector .)
    CHAR            reduce using rule 23 (instruccion -> nativas_vector .)
    STRING          reduce using rule 23 (instruccion -> nativas_vector .)
    USIZE           reduce using rule 23 (instruccion -> nativas_vector .)
    SIGNOI          reduce using rule 23 (instruccion -> nativas_vector .)
    $end            reduce using rule 23 (instruccion -> nativas_vector .)
    LLAVEDER        reduce using rule 23 (instruccion -> nativas_vector .)
    COMA            reduce using rule 23 (instruccion -> nativas_vector .)


state 23

    (58) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> LET . ID IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> LET . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET . MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MUT             shift and go to state 75
    ID              shift and go to state 76


state 24

    (62) asignacion -> ID . IGUAL expresion PTCOMA
    (63) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (50) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (51) llamada_funciones -> ID . PARIZQ PARDER
    (104) expresion -> ID .
    (136) expresion -> ID . lindices
    (137) lindices -> . lindices CORIZQ expresion CORDER
    (138) lindices -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 77
    PARIZQ          shift and go to state 79
    PTO             reduce using rule 104 (expresion -> ID .)
    MAS             reduce using rule 104 (expresion -> ID .)
    MENOS           reduce using rule 104 (expresion -> ID .)
    POR             reduce using rule 104 (expresion -> ID .)
    DIVIDIDO        reduce using rule 104 (expresion -> ID .)
    MODULO          reduce using rule 104 (expresion -> ID .)
    IGUALQUE        reduce using rule 104 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 104 (expresion -> ID .)
    MENORQUE        reduce using rule 104 (expresion -> ID .)
    MAYORQUE        reduce using rule 104 (expresion -> ID .)
    MENORIQUE       reduce using rule 104 (expresion -> ID .)
    MAYORIQUE       reduce using rule 104 (expresion -> ID .)
    OR              reduce using rule 104 (expresion -> ID .)
    AND             reduce using rule 104 (expresion -> ID .)
    CORIZQ          shift and go to state 80

    lindices                       shift and go to state 78

state 25

    (123) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 81


state 26

    (32) nativas_vector -> expresion . PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion . PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion . PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             shift and go to state 82
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 27

    (56) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 96


state 28

    (122) expresion -> NOT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 97
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 29

    (64) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (140) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 98
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 30

    (72) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (151) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 99
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 31

    (87) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER
    (162) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 100


state 32

    (88) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 101
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 33

    (91) break -> BREAK . PTCOMA
    (92) break -> BREAK . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 102
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 103
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 34

    (94) return -> RETURN . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 104
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 35

    (93) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 105


state 36

    (121) expresion -> MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 106
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 37

    (27) expresion -> VVEC . DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC . DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 107


state 38

    (89) forin -> FOR . ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> FOR . ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 108


state 39

    (26) expresion -> VEC . NOT CORIZQ expresiones CORDER

    NOT             shift and go to state 109


state 40

    (135) expresion -> CORIZQ . expresiones CORDER
    (102) expresiones -> . expresiones COMA expresion
    (103) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresiones                    shift and go to state 110
    expresion                      shift and go to state 111
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 41

    (29) expresion -> nativas_vec .

    PTO             reduce using rule 29 (expresion -> nativas_vec .)
    MAS             reduce using rule 29 (expresion -> nativas_vec .)
    MENOS           reduce using rule 29 (expresion -> nativas_vec .)
    POR             reduce using rule 29 (expresion -> nativas_vec .)
    DIVIDIDO        reduce using rule 29 (expresion -> nativas_vec .)
    MODULO          reduce using rule 29 (expresion -> nativas_vec .)
    IGUALQUE        reduce using rule 29 (expresion -> nativas_vec .)
    NOIGUALQUE      reduce using rule 29 (expresion -> nativas_vec .)
    MENORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MAYORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MENORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    MAYORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    OR              reduce using rule 29 (expresion -> nativas_vec .)
    AND             reduce using rule 29 (expresion -> nativas_vec .)
    PARDER          reduce using rule 29 (expresion -> nativas_vec .)
    AS              reduce using rule 29 (expresion -> nativas_vec .)
    LLAVEIZQ        reduce using rule 29 (expresion -> nativas_vec .)
    PTCOMA          reduce using rule 29 (expresion -> nativas_vec .)
    CORDER          reduce using rule 29 (expresion -> nativas_vec .)
    COMA            reduce using rule 29 (expresion -> nativas_vec .)
    LLAVEDER        reduce using rule 29 (expresion -> nativas_vec .)
    IGUAL           reduce using rule 29 (expresion -> nativas_vec .)
    BARRAS          reduce using rule 29 (expresion -> nativas_vec .)


state 42

    (101) tipo -> SIGNOI . STR

    STR             shift and go to state 112


state 43

    (105) expresion -> ENTERO .

    PTO             reduce using rule 105 (expresion -> ENTERO .)
    MAS             reduce using rule 105 (expresion -> ENTERO .)
    MENOS           reduce using rule 105 (expresion -> ENTERO .)
    POR             reduce using rule 105 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 105 (expresion -> ENTERO .)
    MODULO          reduce using rule 105 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 105 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 105 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 105 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 105 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 105 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 105 (expresion -> ENTERO .)
    OR              reduce using rule 105 (expresion -> ENTERO .)
    AND             reduce using rule 105 (expresion -> ENTERO .)
    PARDER          reduce using rule 105 (expresion -> ENTERO .)
    AS              reduce using rule 105 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 105 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 105 (expresion -> ENTERO .)
    CORDER          reduce using rule 105 (expresion -> ENTERO .)
    COMA            reduce using rule 105 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 105 (expresion -> ENTERO .)
    IGUAL           reduce using rule 105 (expresion -> ENTERO .)
    BARRAS          reduce using rule 105 (expresion -> ENTERO .)


state 44

    (106) expresion -> DECIMAL .

    PTO             reduce using rule 106 (expresion -> DECIMAL .)
    MAS             reduce using rule 106 (expresion -> DECIMAL .)
    MENOS           reduce using rule 106 (expresion -> DECIMAL .)
    POR             reduce using rule 106 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 106 (expresion -> DECIMAL .)
    MODULO          reduce using rule 106 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 106 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 106 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 106 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 106 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 106 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 106 (expresion -> DECIMAL .)
    OR              reduce using rule 106 (expresion -> DECIMAL .)
    AND             reduce using rule 106 (expresion -> DECIMAL .)
    PARDER          reduce using rule 106 (expresion -> DECIMAL .)
    AS              reduce using rule 106 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 106 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 106 (expresion -> DECIMAL .)
    CORDER          reduce using rule 106 (expresion -> DECIMAL .)
    COMA            reduce using rule 106 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 106 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 106 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 106 (expresion -> DECIMAL .)


state 45

    (107) expresion -> TRUE .

    PTO             reduce using rule 107 (expresion -> TRUE .)
    MAS             reduce using rule 107 (expresion -> TRUE .)
    MENOS           reduce using rule 107 (expresion -> TRUE .)
    POR             reduce using rule 107 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 107 (expresion -> TRUE .)
    MODULO          reduce using rule 107 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 107 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 107 (expresion -> TRUE .)
    MENORQUE        reduce using rule 107 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 107 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 107 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 107 (expresion -> TRUE .)
    OR              reduce using rule 107 (expresion -> TRUE .)
    AND             reduce using rule 107 (expresion -> TRUE .)
    PARDER          reduce using rule 107 (expresion -> TRUE .)
    AS              reduce using rule 107 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 107 (expresion -> TRUE .)
    PTCOMA          reduce using rule 107 (expresion -> TRUE .)
    CORDER          reduce using rule 107 (expresion -> TRUE .)
    COMA            reduce using rule 107 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 107 (expresion -> TRUE .)
    IGUAL           reduce using rule 107 (expresion -> TRUE .)
    BARRAS          reduce using rule 107 (expresion -> TRUE .)


state 46

    (108) expresion -> FALSE .

    PTO             reduce using rule 108 (expresion -> FALSE .)
    MAS             reduce using rule 108 (expresion -> FALSE .)
    MENOS           reduce using rule 108 (expresion -> FALSE .)
    POR             reduce using rule 108 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 108 (expresion -> FALSE .)
    MODULO          reduce using rule 108 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 108 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 108 (expresion -> FALSE .)
    MENORQUE        reduce using rule 108 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 108 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 108 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 108 (expresion -> FALSE .)
    OR              reduce using rule 108 (expresion -> FALSE .)
    AND             reduce using rule 108 (expresion -> FALSE .)
    PARDER          reduce using rule 108 (expresion -> FALSE .)
    AS              reduce using rule 108 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 108 (expresion -> FALSE .)
    PTCOMA          reduce using rule 108 (expresion -> FALSE .)
    CORDER          reduce using rule 108 (expresion -> FALSE .)
    COMA            reduce using rule 108 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 108 (expresion -> FALSE .)
    IGUAL           reduce using rule 108 (expresion -> FALSE .)
    BARRAS          reduce using rule 108 (expresion -> FALSE .)


state 47

    (109) expresion -> tostring .

    PTO             reduce using rule 109 (expresion -> tostring .)
    MAS             reduce using rule 109 (expresion -> tostring .)
    MENOS           reduce using rule 109 (expresion -> tostring .)
    POR             reduce using rule 109 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 109 (expresion -> tostring .)
    MODULO          reduce using rule 109 (expresion -> tostring .)
    IGUALQUE        reduce using rule 109 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 109 (expresion -> tostring .)
    MENORQUE        reduce using rule 109 (expresion -> tostring .)
    MAYORQUE        reduce using rule 109 (expresion -> tostring .)
    MENORIQUE       reduce using rule 109 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 109 (expresion -> tostring .)
    OR              reduce using rule 109 (expresion -> tostring .)
    AND             reduce using rule 109 (expresion -> tostring .)
    PARDER          reduce using rule 109 (expresion -> tostring .)
    AS              reduce using rule 109 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 109 (expresion -> tostring .)
    PTCOMA          reduce using rule 109 (expresion -> tostring .)
    CORDER          reduce using rule 109 (expresion -> tostring .)
    COMA            reduce using rule 109 (expresion -> tostring .)
    LLAVEDER        reduce using rule 109 (expresion -> tostring .)
    IGUAL           reduce using rule 109 (expresion -> tostring .)
    BARRAS          reduce using rule 109 (expresion -> tostring .)


state 48

    (110) expresion -> toowned .

    PTO             reduce using rule 110 (expresion -> toowned .)
    MAS             reduce using rule 110 (expresion -> toowned .)
    MENOS           reduce using rule 110 (expresion -> toowned .)
    POR             reduce using rule 110 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 110 (expresion -> toowned .)
    MODULO          reduce using rule 110 (expresion -> toowned .)
    IGUALQUE        reduce using rule 110 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 110 (expresion -> toowned .)
    MENORQUE        reduce using rule 110 (expresion -> toowned .)
    MAYORQUE        reduce using rule 110 (expresion -> toowned .)
    MENORIQUE       reduce using rule 110 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 110 (expresion -> toowned .)
    OR              reduce using rule 110 (expresion -> toowned .)
    AND             reduce using rule 110 (expresion -> toowned .)
    PARDER          reduce using rule 110 (expresion -> toowned .)
    AS              reduce using rule 110 (expresion -> toowned .)
    LLAVEIZQ        reduce using rule 110 (expresion -> toowned .)
    PTCOMA          reduce using rule 110 (expresion -> toowned .)
    CORDER          reduce using rule 110 (expresion -> toowned .)
    COMA            reduce using rule 110 (expresion -> toowned .)
    LLAVEDER        reduce using rule 110 (expresion -> toowned .)
    IGUAL           reduce using rule 110 (expresion -> toowned .)
    BARRAS          reduce using rule 110 (expresion -> toowned .)


state 49

    (113) expresion -> STR .

    PTO             reduce using rule 113 (expresion -> STR .)
    MAS             reduce using rule 113 (expresion -> STR .)
    MENOS           reduce using rule 113 (expresion -> STR .)
    POR             reduce using rule 113 (expresion -> STR .)
    DIVIDIDO        reduce using rule 113 (expresion -> STR .)
    MODULO          reduce using rule 113 (expresion -> STR .)
    IGUALQUE        reduce using rule 113 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 113 (expresion -> STR .)
    MENORQUE        reduce using rule 113 (expresion -> STR .)
    MAYORQUE        reduce using rule 113 (expresion -> STR .)
    MENORIQUE       reduce using rule 113 (expresion -> STR .)
    MAYORIQUE       reduce using rule 113 (expresion -> STR .)
    OR              reduce using rule 113 (expresion -> STR .)
    AND             reduce using rule 113 (expresion -> STR .)
    PARDER          reduce using rule 113 (expresion -> STR .)
    AS              reduce using rule 113 (expresion -> STR .)
    LLAVEIZQ        reduce using rule 113 (expresion -> STR .)
    PTCOMA          reduce using rule 113 (expresion -> STR .)
    CORDER          reduce using rule 113 (expresion -> STR .)
    COMA            reduce using rule 113 (expresion -> STR .)
    LLAVEDER        reduce using rule 113 (expresion -> STR .)
    IGUAL           reduce using rule 113 (expresion -> STR .)
    BARRAS          reduce using rule 113 (expresion -> STR .)


state 50

    (114) expresion -> CADENA .

    PTO             reduce using rule 114 (expresion -> CADENA .)
    MAS             reduce using rule 114 (expresion -> CADENA .)
    MENOS           reduce using rule 114 (expresion -> CADENA .)
    POR             reduce using rule 114 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 114 (expresion -> CADENA .)
    MODULO          reduce using rule 114 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 114 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 114 (expresion -> CADENA .)
    MENORQUE        reduce using rule 114 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 114 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 114 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 114 (expresion -> CADENA .)
    OR              reduce using rule 114 (expresion -> CADENA .)
    AND             reduce using rule 114 (expresion -> CADENA .)
    PARDER          reduce using rule 114 (expresion -> CADENA .)
    AS              reduce using rule 114 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 114 (expresion -> CADENA .)
    PTCOMA          reduce using rule 114 (expresion -> CADENA .)
    CORDER          reduce using rule 114 (expresion -> CADENA .)
    COMA            reduce using rule 114 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 114 (expresion -> CADENA .)
    IGUAL           reduce using rule 114 (expresion -> CADENA .)
    BARRAS          reduce using rule 114 (expresion -> CADENA .)


state 51

    (115) expresion -> CARACTER .

    PTO             reduce using rule 115 (expresion -> CARACTER .)
    MAS             reduce using rule 115 (expresion -> CARACTER .)
    MENOS           reduce using rule 115 (expresion -> CARACTER .)
    POR             reduce using rule 115 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 115 (expresion -> CARACTER .)
    MODULO          reduce using rule 115 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 115 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 115 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 115 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 115 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 115 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 115 (expresion -> CARACTER .)
    OR              reduce using rule 115 (expresion -> CARACTER .)
    AND             reduce using rule 115 (expresion -> CARACTER .)
    PARDER          reduce using rule 115 (expresion -> CARACTER .)
    AS              reduce using rule 115 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 115 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 115 (expresion -> CARACTER .)
    CORDER          reduce using rule 115 (expresion -> CARACTER .)
    COMA            reduce using rule 115 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 115 (expresion -> CARACTER .)
    IGUAL           reduce using rule 115 (expresion -> CARACTER .)
    BARRAS          reduce using rule 115 (expresion -> CARACTER .)


state 52

    (139) expresion -> if_asig .

    PTO             reduce using rule 139 (expresion -> if_asig .)
    MAS             reduce using rule 139 (expresion -> if_asig .)
    MENOS           reduce using rule 139 (expresion -> if_asig .)
    POR             reduce using rule 139 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 139 (expresion -> if_asig .)
    MODULO          reduce using rule 139 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 139 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 139 (expresion -> if_asig .)
    MENORQUE        reduce using rule 139 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 139 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 139 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 139 (expresion -> if_asig .)
    OR              reduce using rule 139 (expresion -> if_asig .)
    AND             reduce using rule 139 (expresion -> if_asig .)
    PARDER          reduce using rule 139 (expresion -> if_asig .)
    AS              reduce using rule 139 (expresion -> if_asig .)
    LLAVEIZQ        reduce using rule 139 (expresion -> if_asig .)
    PTCOMA          reduce using rule 139 (expresion -> if_asig .)
    CORDER          reduce using rule 139 (expresion -> if_asig .)
    COMA            reduce using rule 139 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 139 (expresion -> if_asig .)
    IGUAL           reduce using rule 139 (expresion -> if_asig .)
    BARRAS          reduce using rule 139 (expresion -> if_asig .)


state 53

    (150) expresion -> match_asig .

    PTO             reduce using rule 150 (expresion -> match_asig .)
    MAS             reduce using rule 150 (expresion -> match_asig .)
    MENOS           reduce using rule 150 (expresion -> match_asig .)
    POR             reduce using rule 150 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 150 (expresion -> match_asig .)
    MODULO          reduce using rule 150 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 150 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 150 (expresion -> match_asig .)
    MENORQUE        reduce using rule 150 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 150 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 150 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 150 (expresion -> match_asig .)
    OR              reduce using rule 150 (expresion -> match_asig .)
    AND             reduce using rule 150 (expresion -> match_asig .)
    PARDER          reduce using rule 150 (expresion -> match_asig .)
    AS              reduce using rule 150 (expresion -> match_asig .)
    LLAVEIZQ        reduce using rule 150 (expresion -> match_asig .)
    PTCOMA          reduce using rule 150 (expresion -> match_asig .)
    CORDER          reduce using rule 150 (expresion -> match_asig .)
    COMA            reduce using rule 150 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 150 (expresion -> match_asig .)
    IGUAL           reduce using rule 150 (expresion -> match_asig .)
    BARRAS          reduce using rule 150 (expresion -> match_asig .)


state 54

    (161) expresion -> loop_asig .

    PTO             reduce using rule 161 (expresion -> loop_asig .)
    MAS             reduce using rule 161 (expresion -> loop_asig .)
    MENOS           reduce using rule 161 (expresion -> loop_asig .)
    POR             reduce using rule 161 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 161 (expresion -> loop_asig .)
    MODULO          reduce using rule 161 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 161 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 161 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 161 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 161 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 161 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 161 (expresion -> loop_asig .)
    OR              reduce using rule 161 (expresion -> loop_asig .)
    AND             reduce using rule 161 (expresion -> loop_asig .)
    PARDER          reduce using rule 161 (expresion -> loop_asig .)
    AS              reduce using rule 161 (expresion -> loop_asig .)
    LLAVEIZQ        reduce using rule 161 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 161 (expresion -> loop_asig .)
    CORDER          reduce using rule 161 (expresion -> loop_asig .)
    COMA            reduce using rule 161 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 161 (expresion -> loop_asig .)
    IGUAL           reduce using rule 161 (expresion -> loop_asig .)
    BARRAS          reduce using rule 161 (expresion -> loop_asig .)


state 55

    (164) expresion -> nativas_fun .

    PTO             reduce using rule 164 (expresion -> nativas_fun .)
    MAS             reduce using rule 164 (expresion -> nativas_fun .)
    MENOS           reduce using rule 164 (expresion -> nativas_fun .)
    POR             reduce using rule 164 (expresion -> nativas_fun .)
    DIVIDIDO        reduce using rule 164 (expresion -> nativas_fun .)
    MODULO          reduce using rule 164 (expresion -> nativas_fun .)
    IGUALQUE        reduce using rule 164 (expresion -> nativas_fun .)
    NOIGUALQUE      reduce using rule 164 (expresion -> nativas_fun .)
    MENORQUE        reduce using rule 164 (expresion -> nativas_fun .)
    MAYORQUE        reduce using rule 164 (expresion -> nativas_fun .)
    MENORIQUE       reduce using rule 164 (expresion -> nativas_fun .)
    MAYORIQUE       reduce using rule 164 (expresion -> nativas_fun .)
    OR              reduce using rule 164 (expresion -> nativas_fun .)
    AND             reduce using rule 164 (expresion -> nativas_fun .)
    PARDER          reduce using rule 164 (expresion -> nativas_fun .)
    AS              reduce using rule 164 (expresion -> nativas_fun .)
    LLAVEIZQ        reduce using rule 164 (expresion -> nativas_fun .)
    PTCOMA          reduce using rule 164 (expresion -> nativas_fun .)
    CORDER          reduce using rule 164 (expresion -> nativas_fun .)
    COMA            reduce using rule 164 (expresion -> nativas_fun .)
    LLAVEDER        reduce using rule 164 (expresion -> nativas_fun .)
    IGUAL           reduce using rule 164 (expresion -> nativas_fun .)
    BARRAS          reduce using rule 164 (expresion -> nativas_fun .)


state 56

    (95) tipo -> I64 .

    DOSPT           reduce using rule 95 (tipo -> I64 .)
    PARDER          reduce using rule 95 (tipo -> I64 .)
    IGUAL           reduce using rule 95 (tipo -> I64 .)
    PTCOMA          reduce using rule 95 (tipo -> I64 .)
    COMA            reduce using rule 95 (tipo -> I64 .)
    MAYORQUE        reduce using rule 95 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 95 (tipo -> I64 .)


state 57

    (96) tipo -> F64 .

    DOSPT           reduce using rule 96 (tipo -> F64 .)
    PARDER          reduce using rule 96 (tipo -> F64 .)
    IGUAL           reduce using rule 96 (tipo -> F64 .)
    PTCOMA          reduce using rule 96 (tipo -> F64 .)
    COMA            reduce using rule 96 (tipo -> F64 .)
    MAYORQUE        reduce using rule 96 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 96 (tipo -> F64 .)


state 58

    (97) tipo -> BOOL .

    DOSPT           reduce using rule 97 (tipo -> BOOL .)
    PARDER          reduce using rule 97 (tipo -> BOOL .)
    IGUAL           reduce using rule 97 (tipo -> BOOL .)
    PTCOMA          reduce using rule 97 (tipo -> BOOL .)
    COMA            reduce using rule 97 (tipo -> BOOL .)
    MAYORQUE        reduce using rule 97 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 97 (tipo -> BOOL .)


state 59

    (98) tipo -> CHAR .

    DOSPT           reduce using rule 98 (tipo -> CHAR .)
    PARDER          reduce using rule 98 (tipo -> CHAR .)
    IGUAL           reduce using rule 98 (tipo -> CHAR .)
    PTCOMA          reduce using rule 98 (tipo -> CHAR .)
    COMA            reduce using rule 98 (tipo -> CHAR .)
    MAYORQUE        reduce using rule 98 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 98 (tipo -> CHAR .)


state 60

    (99) tipo -> STRING .

    DOSPT           reduce using rule 99 (tipo -> STRING .)
    PARDER          reduce using rule 99 (tipo -> STRING .)
    IGUAL           reduce using rule 99 (tipo -> STRING .)
    PTCOMA          reduce using rule 99 (tipo -> STRING .)
    COMA            reduce using rule 99 (tipo -> STRING .)
    MAYORQUE        reduce using rule 99 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 99 (tipo -> STRING .)


state 61

    (100) tipo -> USIZE .

    DOSPT           reduce using rule 100 (tipo -> USIZE .)
    PARDER          reduce using rule 100 (tipo -> USIZE .)
    IGUAL           reduce using rule 100 (tipo -> USIZE .)
    PTCOMA          reduce using rule 100 (tipo -> USIZE .)
    COMA            reduce using rule 100 (tipo -> USIZE .)
    MAYORQUE        reduce using rule 100 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 100 (tipo -> USIZE .)


state 62

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 113
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 63

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    VEC             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    VVEC            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    STR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PARIZQ          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    F64             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BOOL            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    USIZE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    SIGNOI          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 64

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 65

    (41) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 67


state 66

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 114


state 67

    (41) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 115


state 68

    (133) expresion -> PARIZQ expresion . PARDER
    (163) expresion -> PARIZQ expresion . AS tipo PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 116
    AS              shift and go to state 117
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 69

    (104) expresion -> ID .
    (136) expresion -> ID . lindices
    (50) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (51) llamada_funciones -> ID . PARIZQ PARDER
    (137) lindices -> . lindices CORIZQ expresion CORDER
    (138) lindices -> . CORIZQ expresion CORDER

    PARDER          reduce using rule 104 (expresion -> ID .)
    AS              reduce using rule 104 (expresion -> ID .)
    PTO             reduce using rule 104 (expresion -> ID .)
    MAS             reduce using rule 104 (expresion -> ID .)
    MENOS           reduce using rule 104 (expresion -> ID .)
    POR             reduce using rule 104 (expresion -> ID .)
    DIVIDIDO        reduce using rule 104 (expresion -> ID .)
    MODULO          reduce using rule 104 (expresion -> ID .)
    IGUALQUE        reduce using rule 104 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 104 (expresion -> ID .)
    MENORQUE        reduce using rule 104 (expresion -> ID .)
    MAYORQUE        reduce using rule 104 (expresion -> ID .)
    MENORIQUE       reduce using rule 104 (expresion -> ID .)
    MAYORIQUE       reduce using rule 104 (expresion -> ID .)
    OR              reduce using rule 104 (expresion -> ID .)
    AND             reduce using rule 104 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 104 (expresion -> ID .)
    PTCOMA          reduce using rule 104 (expresion -> ID .)
    CORDER          reduce using rule 104 (expresion -> ID .)
    COMA            reduce using rule 104 (expresion -> ID .)
    LLAVEDER        reduce using rule 104 (expresion -> ID .)
    IGUAL           reduce using rule 104 (expresion -> ID .)
    BARRAS          reduce using rule 104 (expresion -> ID .)
    PARIZQ          shift and go to state 79
    CORIZQ          shift and go to state 80

    lindices                       shift and go to state 119

state 70

    (134) expresion -> llamada_funciones .

    PARDER          reduce using rule 134 (expresion -> llamada_funciones .)
    AS              reduce using rule 134 (expresion -> llamada_funciones .)
    PTO             reduce using rule 134 (expresion -> llamada_funciones .)
    MAS             reduce using rule 134 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 134 (expresion -> llamada_funciones .)
    POR             reduce using rule 134 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 134 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 134 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 134 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 134 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 134 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 134 (expresion -> llamada_funciones .)
    OR              reduce using rule 134 (expresion -> llamada_funciones .)
    AND             reduce using rule 134 (expresion -> llamada_funciones .)
    LLAVEIZQ        reduce using rule 134 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 134 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 134 (expresion -> llamada_funciones .)
    COMA            reduce using rule 134 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 134 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 134 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 134 (expresion -> llamada_funciones .)


state 71

    (140) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 120
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 72

    (151) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 121
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 73

    (162) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 122


state 74

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    VEC             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    VVEC            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ENTERO          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    DECIMAL         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    TRUE            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FALSE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    STR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CADENA          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CARACTER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MENOS           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    NOT             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PARIZQ          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CORIZQ          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    I64             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    F64             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BOOL            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CHAR            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    STRING          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    USIZE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    SIGNOI          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 75

    (58) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    ID              shift and go to state 123


state 76

    (60) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> LET ID . IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> LET ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 124
    IGUAL           shift and go to state 125


state 77

    (62) asignacion -> ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 126
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 78

    (63) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (136) expresion -> ID lindices .
    (137) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 127
    PTO             reduce using rule 136 (expresion -> ID lindices .)
    MAS             reduce using rule 136 (expresion -> ID lindices .)
    MENOS           reduce using rule 136 (expresion -> ID lindices .)
    POR             reduce using rule 136 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 136 (expresion -> ID lindices .)
    MODULO          reduce using rule 136 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 136 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 136 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    OR              reduce using rule 136 (expresion -> ID lindices .)
    AND             reduce using rule 136 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 128


state 79

    (50) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (51) llamada_funciones -> ID PARIZQ . PARDER
    (52) largumentos -> . largumentos COMA largumento
    (53) largumentos -> . largumento
    (54) largumento -> . expresion
    (55) largumento -> . SIGNOI MUT expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 130
    SIGNOI          shift and go to state 133
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    largumentos                    shift and go to state 129
    largumento                     shift and go to state 131
    expresion                      shift and go to state 132
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 80

    (138) lindices -> CORIZQ . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 134
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 81

    (123) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 135


state 82

    (32) nativas_vector -> expresion PTO . PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion PTO . INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion PTO . REMOVE PARIZQ expresion PARDER PTCOMA
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion PTO . CONTAINS PARIZQ SIGNOI expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (111) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (112) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (166) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PUSH            shift and go to state 136
    INSERT          shift and go to state 137
    REMOVE          shift and go to state 138
    CAPACITY        shift and go to state 139
    CONTAINS        shift and go to state 140
    LEN             shift and go to state 141
    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143
    ABS             shift and go to state 144
    SQRT            shift and go to state 145
    CLONE           shift and go to state 146


state 83

    (116) expresion -> expresion MAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 147
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 84

    (117) expresion -> expresion MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 148
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 85

    (118) expresion -> expresion POR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 149
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 86

    (119) expresion -> expresion DIVIDIDO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 150
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 87

    (120) expresion -> expresion MODULO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 151
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 88

    (125) expresion -> expresion IGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 152
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 89

    (126) expresion -> expresion NOIGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 153
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 90

    (127) expresion -> expresion MENORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 154
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 91

    (128) expresion -> expresion MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 155
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 92

    (129) expresion -> expresion MENORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 156
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 93

    (130) expresion -> expresion MAYORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 157
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 94

    (131) expresion -> expresion OR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 158
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 95

    (132) expresion -> expresion AND . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 159
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 96

    (56) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 160


state 97

    (122) expresion -> NOT expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 122 (expresion -> NOT expresion .)
    MENOS           reduce using rule 122 (expresion -> NOT expresion .)
    POR             reduce using rule 122 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 122 (expresion -> NOT expresion .)
    MODULO          reduce using rule 122 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 122 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 122 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 122 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 122 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 122 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 122 (expresion -> NOT expresion .)
    OR              reduce using rule 122 (expresion -> NOT expresion .)
    AND             reduce using rule 122 (expresion -> NOT expresion .)
    PARDER          reduce using rule 122 (expresion -> NOT expresion .)
    AS              reduce using rule 122 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 122 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 122 (expresion -> NOT expresion .)
    CORDER          reduce using rule 122 (expresion -> NOT expresion .)
    COMA            reduce using rule 122 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 122 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 122 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 122 (expresion -> NOT expresion .)
    PTO             shift and go to state 118

  ! PTO             [ reduce using rule 122 (expresion -> NOT expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIVIDIDO        [ shift and go to state 86 ]
  ! MODULO          [ shift and go to state 87 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 98

    (64) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (65) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (140) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 161
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 99

    (72) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (151) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 162
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 100

    (87) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (162) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 163
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 101

    (88) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 164
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 102

    (91) break -> BREAK PTCOMA .

    FN              reduce using rule 91 (break -> BREAK PTCOMA .)
    LET             reduce using rule 91 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 91 (break -> BREAK PTCOMA .)
    ID              reduce using rule 91 (break -> BREAK PTCOMA .)
    IF              reduce using rule 91 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 91 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 91 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 91 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 91 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 91 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 91 (break -> BREAK PTCOMA .)
    FOR             reduce using rule 91 (break -> BREAK PTCOMA .)
    VEC             reduce using rule 91 (break -> BREAK PTCOMA .)
    VVEC            reduce using rule 91 (break -> BREAK PTCOMA .)
    ENTERO          reduce using rule 91 (break -> BREAK PTCOMA .)
    DECIMAL         reduce using rule 91 (break -> BREAK PTCOMA .)
    TRUE            reduce using rule 91 (break -> BREAK PTCOMA .)
    FALSE           reduce using rule 91 (break -> BREAK PTCOMA .)
    STR             reduce using rule 91 (break -> BREAK PTCOMA .)
    CADENA          reduce using rule 91 (break -> BREAK PTCOMA .)
    CARACTER        reduce using rule 91 (break -> BREAK PTCOMA .)
    MENOS           reduce using rule 91 (break -> BREAK PTCOMA .)
    NOT             reduce using rule 91 (break -> BREAK PTCOMA .)
    PARIZQ          reduce using rule 91 (break -> BREAK PTCOMA .)
    CORIZQ          reduce using rule 91 (break -> BREAK PTCOMA .)
    I64             reduce using rule 91 (break -> BREAK PTCOMA .)
    F64             reduce using rule 91 (break -> BREAK PTCOMA .)
    BOOL            reduce using rule 91 (break -> BREAK PTCOMA .)
    CHAR            reduce using rule 91 (break -> BREAK PTCOMA .)
    STRING          reduce using rule 91 (break -> BREAK PTCOMA .)
    USIZE           reduce using rule 91 (break -> BREAK PTCOMA .)
    SIGNOI          reduce using rule 91 (break -> BREAK PTCOMA .)
    $end            reduce using rule 91 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 91 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 91 (break -> BREAK PTCOMA .)


state 103

    (92) break -> BREAK expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 165
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 104

    (94) return -> RETURN expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 166
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 105

    (93) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    VEC             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    VVEC            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    ENTERO          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    TRUE            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    FALSE           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    STR             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    CADENA          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    CARACTER        reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    MENOS           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    NOT             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    CORIZQ          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    I64             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    F64             reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    BOOL            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    STRING          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    USIZE           reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    SIGNOI          reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 93 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 93 (continue -> CONTINUE PTCOMA .)


state 106

    (121) expresion -> MENOS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 121 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 121 (expresion -> MENOS expresion .)
    POR             reduce using rule 121 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 121 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 121 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 121 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 121 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 121 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 121 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 121 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 121 (expresion -> MENOS expresion .)
    OR              reduce using rule 121 (expresion -> MENOS expresion .)
    AND             reduce using rule 121 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 121 (expresion -> MENOS expresion .)
    AS              reduce using rule 121 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 121 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 121 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 121 (expresion -> MENOS expresion .)
    COMA            reduce using rule 121 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 121 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 121 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 121 (expresion -> MENOS expresion .)
    PTO             shift and go to state 118

  ! PTO             [ reduce using rule 121 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIVIDIDO        [ shift and go to state 86 ]
  ! MODULO          [ shift and go to state 87 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 107

    (27) expresion -> VVEC DOSPT . DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT . DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 167


state 108

    (89) forin -> FOR ID . IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> FOR ID . IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    IN              shift and go to state 168


state 109

    (26) expresion -> VEC NOT . CORIZQ expresiones CORDER

    CORIZQ          shift and go to state 169


state 110

    (135) expresion -> CORIZQ expresiones . CORDER
    (102) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 170
    COMA            shift and go to state 171


state 111

    (103) expresiones -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 103 (expresiones -> expresion .)
    COMA            reduce using rule 103 (expresiones -> expresion .)
    PARDER          reduce using rule 103 (expresiones -> expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 112

    (101) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 101 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 101 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 101 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 101 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 101 (tipo -> SIGNOI STR .)
    MAYORQUE        reduce using rule 101 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 101 (tipo -> SIGNOI STR .)


state 113

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 114

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 172


state 115

    (41) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (45) lparametros -> . lparametros COMA lparame
    (46) lparametros -> . lparame
    (47) lparame -> . ID DOSPT tipo
    (48) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo
    (49) lparame -> . ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE

    PARDER          shift and go to state 175
    ID              shift and go to state 173

    lparametros                    shift and go to state 174
    lparame                        shift and go to state 176

state 116

    (133) expresion -> PARIZQ expresion PARDER .

    PTO             reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    AS              reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 133 (expresion -> PARIZQ expresion PARDER .)


state 117

    (163) expresion -> PARIZQ expresion AS . tipo PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 177

state 118

    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion PTO . CONTAINS PARIZQ SIGNOI expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (111) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (112) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (166) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    CAPACITY        shift and go to state 139
    REMOVE          shift and go to state 178
    CONTAINS        shift and go to state 140
    LEN             shift and go to state 141
    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143
    ABS             shift and go to state 144
    SQRT            shift and go to state 145
    CLONE           shift and go to state 146


state 119

    (136) expresion -> ID lindices .
    (137) lindices -> lindices . CORIZQ expresion CORDER

    PARDER          reduce using rule 136 (expresion -> ID lindices .)
    AS              reduce using rule 136 (expresion -> ID lindices .)
    PTO             reduce using rule 136 (expresion -> ID lindices .)
    MAS             reduce using rule 136 (expresion -> ID lindices .)
    MENOS           reduce using rule 136 (expresion -> ID lindices .)
    POR             reduce using rule 136 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 136 (expresion -> ID lindices .)
    MODULO          reduce using rule 136 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 136 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 136 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    OR              reduce using rule 136 (expresion -> ID lindices .)
    AND             reduce using rule 136 (expresion -> ID lindices .)
    LLAVEIZQ        reduce using rule 136 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 136 (expresion -> ID lindices .)
    CORDER          reduce using rule 136 (expresion -> ID lindices .)
    COMA            reduce using rule 136 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 136 (expresion -> ID lindices .)
    IGUAL           reduce using rule 136 (expresion -> ID lindices .)
    BARRAS          reduce using rule 136 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 128


state 120

    (140) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 179
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 121

    (151) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 180
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 122

    (162) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 181
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 123

    (58) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 182
    IGUAL           shift and go to state 183


state 124

    (60) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> LET ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (39) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (40) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 186
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    CORIZQ          shift and go to state 187

    tipo                           shift and go to state 184
    tipo_arreglo                   shift and go to state 185

state 125

    (61) declaracion -> LET ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 188
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 126

    (62) asignacion -> ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 189
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 127

    (63) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 190
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 128

    (137) lindices -> lindices CORIZQ . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 191
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 129

    (50) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (52) largumentos -> largumentos . COMA largumento

    PARDER          shift and go to state 192
    COMA            shift and go to state 193


state 130

    (51) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    AS              reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 51 (llamada_funciones -> ID PARIZQ PARDER .)


state 131

    (53) largumentos -> largumento .

    PARDER          reduce using rule 53 (largumentos -> largumento .)
    COMA            reduce using rule 53 (largumentos -> largumento .)


state 132

    (54) largumento -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 54 (largumento -> expresion .)
    COMA            reduce using rule 54 (largumento -> expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 133

    (55) largumento -> SIGNOI . MUT expresion
    (101) tipo -> SIGNOI . STR

    MUT             shift and go to state 194
    STR             shift and go to state 112


state 134

    (138) lindices -> CORIZQ expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 195
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 135

    (123) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 196
    POWF            shift and go to state 197


state 136

    (32) nativas_vector -> expresion PTO PUSH . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 198


state 137

    (33) nativas_vector -> expresion PTO INSERT . PARIZQ expresion COMA expresion PARDER PTCOMA

    PARIZQ          shift and go to state 199


state 138

    (34) nativas_vector -> expresion PTO REMOVE . PARIZQ expresion PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 200


state 139

    (31) expresion -> expresion PTO CAPACITY . PARIZQ PARDER

    PARIZQ          shift and go to state 201


state 140

    (36) expresion -> expresion PTO CONTAINS . PARIZQ SIGNOI expresion PARDER

    PARIZQ          shift and go to state 202


state 141

    (30) nativas_vec -> expresion PTO LEN . PARIZQ PARDER

    PARIZQ          shift and go to state 203


state 142

    (111) tostring -> expresion PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 204


state 143

    (112) toowned -> expresion PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 205


state 144

    (165) nativas_fun -> expresion PTO ABS . PARIZQ PARDER

    PARIZQ          shift and go to state 206


state 145

    (166) nativas_fun -> expresion PTO SQRT . PARIZQ PARDER

    PARIZQ          shift and go to state 207


state 146

    (167) nativas_fun -> expresion PTO CLONE . PARIZQ PARDER

    PARIZQ          shift and go to state 208


state 147

    (116) expresion -> expresion MAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 116 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 116 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 116 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 116 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 116 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 116 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 116 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 116 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 116 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 116 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 116 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 116 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 116 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 116 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 116 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 116 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 116 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 116 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 116 (expresion -> expresion MAS expresion .)
    PTO             shift and go to state 118
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 116 (expresion -> expresion MAS expresion .) ]
  ! POR             [ reduce using rule 116 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 116 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 116 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 148

    (117) expresion -> expresion MENOS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 117 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 117 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 117 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 117 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 117 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 117 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 117 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 117 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 117 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 117 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 117 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 117 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 117 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 117 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 117 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 117 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 117 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 117 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 117 (expresion -> expresion MENOS expresion .)
    PTO             shift and go to state 118
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 117 (expresion -> expresion MENOS expresion .) ]
  ! POR             [ reduce using rule 117 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 117 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 117 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 149

    (118) expresion -> expresion POR expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 118 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 118 (expresion -> expresion POR expresion .)
    POR             reduce using rule 118 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 118 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 118 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 118 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 118 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 118 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 118 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 118 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 118 (expresion -> expresion POR expresion .)
    OR              reduce using rule 118 (expresion -> expresion POR expresion .)
    AND             reduce using rule 118 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 118 (expresion -> expresion POR expresion .)
    AS              reduce using rule 118 (expresion -> expresion POR expresion .)
    LLAVEIZQ        reduce using rule 118 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 118 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 118 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 118 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 118 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 118 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 118 (expresion -> expresion POR expresion .)
    PTO             shift and go to state 118

  ! PTO             [ reduce using rule 118 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIVIDIDO        [ shift and go to state 86 ]
  ! MODULO          [ shift and go to state 87 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 150

    (119) expresion -> expresion DIVIDIDO expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    AS              reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEIZQ        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .)
    PTO             shift and go to state 118

  ! PTO             [ reduce using rule 119 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIVIDIDO        [ shift and go to state 86 ]
  ! MODULO          [ shift and go to state 87 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 151

    (120) expresion -> expresion MODULO expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    MAS             reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 120 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 120 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 120 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 120 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 120 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 120 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 120 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 120 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 120 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 120 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 120 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 120 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 120 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 120 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 120 (expresion -> expresion MODULO expresion .)
    PTO             shift and go to state 118

  ! PTO             [ reduce using rule 120 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 83 ]
  ! MENOS           [ shift and go to state 84 ]
  ! POR             [ shift and go to state 85 ]
  ! DIVIDIDO        [ shift and go to state 86 ]
  ! MODULO          [ shift and go to state 87 ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 152

    (125) expresion -> expresion IGUALQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    AS              reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    LLAVEIZQ        reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 125 (expresion -> expresion IGUALQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 125 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 153

    (126) expresion -> expresion NOIGUALQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    AS              reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEIZQ        reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 126 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 154

    (127) expresion -> expresion MENORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    AS              reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    LLAVEIZQ        reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 127 (expresion -> expresion MENORQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! MAS             [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 127 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 155

    (128) expresion -> expresion MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    AS              reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    LLAVEIZQ        reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 128 (expresion -> expresion MAYORQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! MAS             [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 128 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 156

    (129) expresion -> expresion MENORIQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    AS              reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    LLAVEIZQ        reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 129 (expresion -> expresion MENORIQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! MAS             [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 129 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 157

    (130) expresion -> expresion MAYORIQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUALQUE        reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    AS              reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEIZQ        reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87

  ! PTO             [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MAS             [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 130 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 88 ]
  ! NOIGUALQUE      [ shift and go to state 89 ]
  ! MENORQUE        [ shift and go to state 90 ]
  ! MAYORQUE        [ shift and go to state 91 ]
  ! MENORIQUE       [ shift and go to state 92 ]
  ! MAYORIQUE       [ shift and go to state 93 ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 158

    (131) expresion -> expresion OR expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    OR              reduce using rule 131 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 131 (expresion -> expresion OR expresion .)
    AS              reduce using rule 131 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 131 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 131 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 131 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 131 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 131 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 131 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 131 (expresion -> expresion OR expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    AND             shift and go to state 95

  ! PTO             [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 131 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 94 ]


state 159

    (132) expresion -> expresion AND expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    OR              reduce using rule 132 (expresion -> expresion AND expresion .)
    AND             reduce using rule 132 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 132 (expresion -> expresion AND expresion .)
    AS              reduce using rule 132 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 132 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 132 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 132 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 132 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 132 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 132 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 132 (expresion -> expresion AND expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93

  ! PTO             [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 132 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 94 ]
  ! AND             [ shift and go to state 95 ]


state 160

    (56) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 209
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 161

    (64) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (65) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (66) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (67) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (140) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (141) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 213
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 210
    instrucciones                  shift and go to state 211
    bloque_expresion               shift and go to state 212
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 162

    (72) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (151) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (73) imatch -> . opmatch COMA dmatch
    (152) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (74) opmatch -> . opmatch COMA cmatch
    (75) opmatch -> . opmatch COMA rmatch
    (76) opmatch -> . cmatch
    (77) opmatch -> . rmatch
    (155) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (156) opmatch_asig -> . cmatch_asig
    (78) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (84) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (157) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (80) bloque_match -> . bloque_match BARRAS expresion
    (81) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (159) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (160) bloque_match_asig -> . expresion
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 214
    imatch                         shift and go to state 215
    imatch_asig                    shift and go to state 216
    opmatch                        shift and go to state 217
    opmatch_asig                   shift and go to state 218
    cmatch                         shift and go to state 219
    rmatch                         shift and go to state 220
    cmatch_asig                    shift and go to state 221
    bloque_match                   shift and go to state 222
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 163

    (87) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (162) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 224
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 164

    (88) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 225
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 165

    (92) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    FOR             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    VEC             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    VVEC            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    ENTERO          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    DECIMAL         reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    TRUE            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    FALSE           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    STR             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    CADENA          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    CARACTER        reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    MENOS           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    NOT             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    PARIZQ          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    CORIZQ          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    I64             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    F64             reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    BOOL            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    CHAR            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    STRING          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    USIZE           reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    SIGNOI          reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 92 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 92 (break -> BREAK expresion PTCOMA .)


state 166

    (94) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    VEC             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    VVEC            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    ENTERO          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    DECIMAL         reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    TRUE            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    FALSE           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    STR             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    CADENA          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    CARACTER        reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    MENOS           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    NOT             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    PARIZQ          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    CORIZQ          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    I64             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    F64             reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    BOOL            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    CHAR            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    STRING          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    USIZE           reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    SIGNOI          reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 94 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 94 (return -> RETURN expresion PTCOMA .)


state 167

    (27) expresion -> VVEC DOSPT DOSPT . NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT DOSPT . WITH_CAPACITY PARIZQ expresion PARDER

    NEW             shift and go to state 226
    WITH_CAPACITY   shift and go to state 227


state 168

    (89) forin -> FOR ID IN . expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> FOR ID IN . expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 228
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 169

    (26) expresion -> VEC NOT CORIZQ . expresiones CORDER
    (102) expresiones -> . expresiones COMA expresion
    (103) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresiones                    shift and go to state 229
    expresion                      shift and go to state 111
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 170

    (135) expresion -> CORIZQ expresiones CORDER .

    PTO             reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    AS              reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEIZQ        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 135 (expresion -> CORIZQ expresiones CORDER .)


state 171

    (102) expresiones -> expresiones COMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 230
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 172

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 231


state 173

    (47) lparame -> ID . DOSPT tipo
    (48) lparame -> ID . DOSPT SIGNOI MUT tipo_arreglo
    (49) lparame -> ID . DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE

    DOSPT           shift and go to state 232


state 174

    (41) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (45) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 233
    COMA            shift and go to state 234


state 175

    (42) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 235
    LLAVEIZQ        shift and go to state 236


state 176

    (46) lparametros -> lparame .

    PARDER          reduce using rule 46 (lparametros -> lparame .)
    COMA            reduce using rule 46 (lparametros -> lparame .)


state 177

    (163) expresion -> PARIZQ expresion AS tipo . PARDER

    PARDER          shift and go to state 237


state 178

    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 238


state 179

    (140) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (141) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (142) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (143) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 239
    bloque_expresion               shift and go to state 212
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 180

    (151) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (152) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (155) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (156) opmatch_asig -> . cmatch_asig
    (157) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (159) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (160) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 240
    imatch_asig                    shift and go to state 216
    opmatch_asig                   shift and go to state 218
    cmatch_asig                    shift and go to state 221
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 181

    (162) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 241
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 182

    (58) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (39) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (40) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 244
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    CORIZQ          shift and go to state 187

    tipo                           shift and go to state 242
    tipo_arreglo                   shift and go to state 243

state 183

    (59) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 245
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 184

    (60) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 246


state 185

    (38) declaracion_arreglos -> LET ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 247


state 186

    (25) declaracion_vector -> LET ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 248


state 187

    (39) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (40) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (39) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (40) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 187
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo_arreglo                   shift and go to state 249
    tipo                           shift and go to state 250

state 188

    (61) declaracion -> LET ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 251
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 189

    (62) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 62 (asignacion -> ID IGUAL expresion PTCOMA .)


state 190

    (63) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 252
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 191

    (137) lindices -> lindices CORIZQ expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 253
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 192

    (50) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AS              reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 50 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 193

    (52) largumentos -> largumentos COMA . largumento
    (54) largumento -> . expresion
    (55) largumento -> . SIGNOI MUT expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    SIGNOI          shift and go to state 133
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    largumento                     shift and go to state 254
    expresion                      shift and go to state 132
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 194

    (55) largumento -> SIGNOI MUT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 255
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 195

    (138) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    AS              reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 138 (lindices -> CORIZQ expresion CORDER .)


state 196

    (123) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 256


state 197

    (124) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 257


state 198

    (32) nativas_vector -> expresion PTO PUSH PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 258
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 199

    (33) nativas_vector -> expresion PTO INSERT PARIZQ . expresion COMA expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 259
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 200

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ . expresion PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 260
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 201

    (31) expresion -> expresion PTO CAPACITY PARIZQ . PARDER

    PARDER          shift and go to state 261


state 202

    (36) expresion -> expresion PTO CONTAINS PARIZQ . SIGNOI expresion PARDER

    SIGNOI          shift and go to state 262


state 203

    (30) nativas_vec -> expresion PTO LEN PARIZQ . PARDER

    PARDER          shift and go to state 263


state 204

    (111) tostring -> expresion PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 264


state 205

    (112) toowned -> expresion PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 265


state 206

    (165) nativas_fun -> expresion PTO ABS PARIZQ . PARDER

    PARDER          shift and go to state 266


state 207

    (166) nativas_fun -> expresion PTO SQRT PARIZQ . PARDER

    PARDER          shift and go to state 267


state 208

    (167) nativas_fun -> expresion PTO CLONE PARIZQ . PARDER

    PARDER          shift and go to state 268


state 209

    (56) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (57) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 269
    PARDER          shift and go to state 270
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 210

    (149) bloque_expresion -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (32) nativas_vector -> expresion . PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion . PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion . PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 149 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 149 (bloque_expresion -> expresion .)
    PTO             shift and go to state 271
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 211

    (64) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (65) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (66) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (67) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 272
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 212

    (140) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (142) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (143) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (148) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 273
    PTCOMA          shift and go to state 274


state 213

    (104) expresion -> ID .
    (136) expresion -> ID . lindices
    (62) asignacion -> ID . IGUAL expresion PTCOMA
    (63) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (50) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (51) llamada_funciones -> ID . PARIZQ PARDER
    (137) lindices -> . lindices CORIZQ expresion CORDER
    (138) lindices -> . CORIZQ expresion CORDER

    PTO             reduce using rule 104 (expresion -> ID .)
    MAS             reduce using rule 104 (expresion -> ID .)
    MENOS           reduce using rule 104 (expresion -> ID .)
    POR             reduce using rule 104 (expresion -> ID .)
    DIVIDIDO        reduce using rule 104 (expresion -> ID .)
    MODULO          reduce using rule 104 (expresion -> ID .)
    IGUALQUE        reduce using rule 104 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 104 (expresion -> ID .)
    MENORQUE        reduce using rule 104 (expresion -> ID .)
    MAYORQUE        reduce using rule 104 (expresion -> ID .)
    MENORIQUE       reduce using rule 104 (expresion -> ID .)
    MAYORIQUE       reduce using rule 104 (expresion -> ID .)
    OR              reduce using rule 104 (expresion -> ID .)
    AND             reduce using rule 104 (expresion -> ID .)
    LLAVEDER        reduce using rule 104 (expresion -> ID .)
    PTCOMA          reduce using rule 104 (expresion -> ID .)
    IGUAL           shift and go to state 77
    PARIZQ          shift and go to state 79
    CORIZQ          shift and go to state 80

    lindices                       shift and go to state 275

state 214

    (84) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (81) bloque_match -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (160) bloque_match_asig -> expresion .
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

  ! reduce/reduce conflict for IGUAL resolved using rule 81 (bloque_match -> expresion .)
  ! reduce/reduce conflict for BARRAS resolved using rule 81 (bloque_match -> expresion .)
    PTO             shift and go to state 276
    IGUAL           reduce using rule 81 (bloque_match -> expresion .)
    BARRAS          reduce using rule 81 (bloque_match -> expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95

  ! IGUAL           [ reduce using rule 160 (bloque_match_asig -> expresion .) ]
  ! BARRAS          [ reduce using rule 160 (bloque_match_asig -> expresion .) ]


state 215

    (72) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 277


state 216

    (151) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 278


state 217

    (73) imatch -> opmatch . COMA dmatch
    (74) opmatch -> opmatch . COMA cmatch
    (75) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 279


state 218

    (152) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (155) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 280


state 219

    (76) opmatch -> cmatch .

    COMA            reduce using rule 76 (opmatch -> cmatch .)


state 220

    (77) opmatch -> rmatch .

    COMA            reduce using rule 77 (opmatch -> rmatch .)


state 221

    (156) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 156 (opmatch_asig -> cmatch_asig .)


state 222

    (78) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (80) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 281
    BARRAS          shift and go to state 282


state 223

    (157) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (159) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 283
    BARRAS          shift and go to state 284


state 224

    (87) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .
    (162) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

  ! reduce/reduce conflict for MENOS resolved using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 87 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)

  ! MENOS           [ reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .) ]
  ! LLAVEDER        [ reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .) ]


state 225

    (88) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 285
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 226

    (27) expresion -> VVEC DOSPT DOSPT NEW . PARIZQ PARDER

    PARIZQ          shift and go to state 286


state 227

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 287


state 228

    (89) forin -> FOR ID IN expresion . LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> FOR ID IN expresion . PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 288
    PTO             shift and go to state 289
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 229

    (26) expresion -> VEC NOT CORIZQ expresiones . CORDER
    (102) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 290
    COMA            shift and go to state 171


state 230

    (102) expresiones -> expresiones COMA expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 102 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 102 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 102 (expresiones -> expresiones COMA expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 231

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 291
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 232

    (47) lparame -> ID DOSPT . tipo
    (48) lparame -> ID DOSPT . SIGNOI MUT tipo_arreglo
    (49) lparame -> ID DOSPT . SIGNOI MUT VVEC MENORQUE tipo MAYORQUE
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    SIGNOI          shift and go to state 293
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61

    tipo                           shift and go to state 292

state 233

    (41) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 294
    LLAVEIZQ        shift and go to state 295


state 234

    (45) lparametros -> lparametros COMA . lparame
    (47) lparame -> . ID DOSPT tipo
    (48) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo
    (49) lparame -> . ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE

    ID              shift and go to state 173

    lparame                        shift and go to state 296

state 235

    (42) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 297


state 236

    (44) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 298
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 237

    (163) expresion -> PARIZQ expresion AS tipo PARDER .

    PTO             reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAS             reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENOS           reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    POR             reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    DIVIDIDO        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MODULO          reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUALQUE        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    NOIGUALQUE      reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORQUE        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORQUE        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORIQUE       reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORIQUE       reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    OR              reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AND             reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PARDER          reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AS              reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    LLAVEIZQ        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PTCOMA          reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    CORDER          reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    COMA            reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    LLAVEDER        reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUAL           reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)
    BARRAS          reduce using rule 163 (expresion -> PARIZQ expresion AS tipo PARDER .)


state 238

    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 299
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 239

    (149) bloque_expresion -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 149 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 149 (bloque_expresion -> expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 240

    (160) bloque_match_asig -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 160 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 160 (bloque_match_asig -> expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 241

    (162) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    PARDER          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 162 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 242

    (58) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 300


state 243

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 301


state 244

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 302


state 245

    (59) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 303
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 246

    (60) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 304
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 247

    (38) declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 305
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 248

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 306

state 249

    (39) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 307


state 250

    (40) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 308


state 251

    (61) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 61 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 252

    (63) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FOR             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    VEC             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    STR             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    NOT             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    I64             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    F64             reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    STRING          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 63 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 253

    (137) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    AS              reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 137 (lindices -> lindices CORIZQ expresion CORDER .)


state 254

    (52) largumentos -> largumentos COMA largumento .

    PARDER          reduce using rule 52 (largumentos -> largumentos COMA largumento .)
    COMA            reduce using rule 52 (largumentos -> largumentos COMA largumento .)


state 255

    (55) largumento -> SIGNOI MUT expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 55 (largumento -> SIGNOI MUT expresion .)
    COMA            reduce using rule 55 (largumento -> SIGNOI MUT expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 256

    (123) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 309
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 257

    (124) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 310
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 258

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 311
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 259

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion . COMA expresion PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 312
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 260

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion . PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 313
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 261

    (31) expresion -> expresion PTO CAPACITY PARIZQ PARDER .

    PTO             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAS             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENOS           reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    POR             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MODULO          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    IGUALQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENORQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAYORQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENORIQUE       reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    OR              reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    AND             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    PARDER          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    AS              reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    PTCOMA          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    CORDER          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    COMA            reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    LLAVEDER        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    IGUAL           reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    BARRAS          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)


state 262

    (36) expresion -> expresion PTO CONTAINS PARIZQ SIGNOI . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 314
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 263

    (30) nativas_vec -> expresion PTO LEN PARIZQ PARDER .

    PTO             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAS             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENOS           reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    POR             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MODULO          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    IGUALQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENORQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAYORQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENORIQUE       reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    OR              reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    AND             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    PARDER          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    AS              reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    PTCOMA          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    CORDER          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    COMA            reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    IGUAL           reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    BARRAS          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)


state 264

    (111) tostring -> expresion PTO TOSTRING PARIZQ PARDER .

    PTO             reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AS              reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 111 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)


state 265

    (112) toowned -> expresion PTO TOOWNED PARIZQ PARDER .

    PTO             reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AS              reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 112 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)


state 266

    (165) nativas_fun -> expresion PTO ABS PARIZQ PARDER .

    PTO             reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAS             reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENOS           reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    POR             reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MODULO          reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUALQUE        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORQUE        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORQUE        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORIQUE       reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    OR              reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AND             reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PARDER          reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AS              reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PTCOMA          reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    CORDER          reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    COMA            reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    LLAVEDER        reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUAL           reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    BARRAS          reduce using rule 165 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)


state 267

    (166) nativas_fun -> expresion PTO SQRT PARIZQ PARDER .

    PTO             reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAS             reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENOS           reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    POR             reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MODULO          reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUALQUE        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORQUE        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORQUE        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORIQUE       reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    OR              reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AND             reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PARDER          reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AS              reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PTCOMA          reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    CORDER          reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    COMA            reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    LLAVEDER        reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUAL           reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    BARRAS          reduce using rule 166 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)


state 268

    (167) nativas_fun -> expresion PTO CLONE PARIZQ PARDER .

    PTO             reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAS             reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENOS           reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    POR             reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MODULO          reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUALQUE        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORQUE        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORIQUE       reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    OR              reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AND             reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PARDER          reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AS              reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PTCOMA          reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    CORDER          reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    COMA            reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUAL           reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    BARRAS          reduce using rule 167 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)


state 269

    (56) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (102) expresiones -> . expresiones COMA expresion
    (103) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 111
    expresiones                    shift and go to state 315
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 270

    (57) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 316


state 271

    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion PTO . CONTAINS PARIZQ SIGNOI expresion PARDER
    (32) nativas_vector -> expresion PTO . PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion PTO . INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion PTO . REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (111) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (112) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (166) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    CAPACITY        shift and go to state 139
    REMOVE          shift and go to state 317
    CONTAINS        shift and go to state 140
    PUSH            shift and go to state 136
    INSERT          shift and go to state 137
    LEN             shift and go to state 141
    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143
    ABS             shift and go to state 144
    SQRT            shift and go to state 145
    CLONE           shift and go to state 146


state 272

    (64) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (65) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (66) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (67) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (71) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (68) lelseif -> . lelseif elseif
    (69) lelseif -> . elseif
    (70) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 320

    else                           shift and go to state 318
    lelseif                        shift and go to state 319
    elseif                         shift and go to state 321

state 273

    (140) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (142) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (143) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (147) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (144) elseifa -> . elseifa lif
    (145) elseifa -> . lif
    (146) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    PTO             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 324

    elsea                          shift and go to state 322
    elseifa                        shift and go to state 323
    lif                            shift and go to state 325

state 274

    (148) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 326
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 275

    (136) expresion -> ID lindices .
    (63) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (137) lindices -> lindices . CORIZQ expresion CORDER

    PTO             reduce using rule 136 (expresion -> ID lindices .)
    MAS             reduce using rule 136 (expresion -> ID lindices .)
    MENOS           reduce using rule 136 (expresion -> ID lindices .)
    POR             reduce using rule 136 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 136 (expresion -> ID lindices .)
    MODULO          reduce using rule 136 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 136 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 136 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 136 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 136 (expresion -> ID lindices .)
    OR              reduce using rule 136 (expresion -> ID lindices .)
    AND             reduce using rule 136 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 136 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 136 (expresion -> ID lindices .)
    IGUAL           shift and go to state 127
    CORIZQ          shift and go to state 128


state 276

    (84) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion PTO . CONTAINS PARIZQ SIGNOI expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (111) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (112) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (166) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PTO             shift and go to state 327
    CAPACITY        shift and go to state 139
    REMOVE          shift and go to state 178
    CONTAINS        shift and go to state 140
    LEN             shift and go to state 141
    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143
    ABS             shift and go to state 144
    SQRT            shift and go to state 145
    CLONE           shift and go to state 146


state 277

    (72) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FOR             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    VEC             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    VVEC            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ENTERO          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    DECIMAL         reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    TRUE            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FALSE           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    STR             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CADENA          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CARACTER        reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MENOS           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    NOT             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PARIZQ          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CORIZQ          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    I64             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    F64             reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BOOL            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CHAR            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    STRING          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    USIZE           reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    SIGNOI          reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 72 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 278

    (151) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    PTO             reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AS              reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEIZQ        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 151 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 279

    (73) imatch -> opmatch COMA . dmatch
    (74) opmatch -> opmatch COMA . cmatch
    (75) opmatch -> opmatch COMA . rmatch
    (82) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (83) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (78) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (84) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (80) bloque_match -> . bloque_match BARRAS expresion
    (81) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 331
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    dmatch                         shift and go to state 328
    cmatch                         shift and go to state 329
    rmatch                         shift and go to state 330
    bloque_match                   shift and go to state 222
    expresion                      shift and go to state 332
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 280

    (152) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (155) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (153) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (157) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (159) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (160) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 335
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    dmatch_asig                    shift and go to state 333
    cmatch_asig                    shift and go to state 334
    expresion                      shift and go to state 240
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 281

    (78) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (79) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 336


state 282

    (80) bloque_match -> bloque_match BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 337
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 283

    (157) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 338


state 284

    (159) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 339
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 285

    (88) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 88 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 286

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ . PARDER

    PARDER          shift and go to state 340


state 287

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 341
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 288

    (89) forin -> FOR ID IN expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 342
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 289

    (90) forin -> FOR ID IN expresion PTO . PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion PTO . CONTAINS PARIZQ SIGNOI expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (111) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (112) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (166) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PTO             shift and go to state 343
    CAPACITY        shift and go to state 139
    REMOVE          shift and go to state 178
    CONTAINS        shift and go to state 140
    LEN             shift and go to state 141
    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143
    ABS             shift and go to state 144
    SQRT            shift and go to state 145
    CLONE           shift and go to state 146


state 290

    (26) expresion -> VEC NOT CORIZQ expresiones CORDER .

    PTO             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAS             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    POR             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    OR              reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AND             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AS              reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEIZQ        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    COMA            reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)


state 291

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 344
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 292

    (47) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 47 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 47 (lparame -> ID DOSPT tipo .)


state 293

    (48) lparame -> ID DOSPT SIGNOI . MUT tipo_arreglo
    (49) lparame -> ID DOSPT SIGNOI . MUT VVEC MENORQUE tipo MAYORQUE
    (101) tipo -> SIGNOI . STR

    MUT             shift and go to state 345
    STR             shift and go to state 112


state 294

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 346


state 295

    (43) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 347
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 296

    (45) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 45 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 45 (lparametros -> lparametros COMA lparame .)


state 297

    (42) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 348

state 298

    (44) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 349
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 299

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 350
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 300

    (58) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 351
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 301

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 352
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 302

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 353

state 303

    (59) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 59 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 304

    (60) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 354
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 305

    (38) declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 355
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 306

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 356


state 307

    (39) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 357
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 308

    (40) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 358
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 309

    (123) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 359
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 310

    (124) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 360
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 311

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 361


state 312

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 362
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 313

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER . PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .

    PTCOMA          shift and go to state 363
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)


state 314

    (36) expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 364
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 315

    (56) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (102) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 365
    COMA            shift and go to state 171


state 316

    (57) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 57 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 317

    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER
    (34) nativas_vector -> expresion PTO REMOVE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 366


state 318

    (65) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FOR             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    VEC             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    VVEC            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ENTERO          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    DECIMAL         reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    TRUE            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FALSE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    STR             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CADENA          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CARACTER        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MENOS           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    NOT             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PARIZQ          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CORIZQ          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    I64             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    F64             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BOOL            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CHAR            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    STRING          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    USIZE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    SIGNOI          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 319

    (66) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (67) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (68) lelseif -> lelseif . elseif
    (71) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (70) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FOR             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    VEC             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    VVEC            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ENTERO          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    DECIMAL         reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    TRUE            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FALSE           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    STR             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CADENA          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CARACTER        reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MENOS           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    NOT             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PARIZQ          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CORIZQ          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    I64             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    F64             reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BOOL            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CHAR            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    STRING          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    USIZE           reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    SIGNOI          reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 66 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 320

    else                           shift and go to state 367
    elseif                         shift and go to state 368

state 320

    (71) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (70) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 369
    IF              shift and go to state 370


state 321

    (69) lelseif -> elseif .

    ELSE            reduce using rule 69 (lelseif -> elseif .)
    FN              reduce using rule 69 (lelseif -> elseif .)
    LET             reduce using rule 69 (lelseif -> elseif .)
    PRINTLN         reduce using rule 69 (lelseif -> elseif .)
    ID              reduce using rule 69 (lelseif -> elseif .)
    IF              reduce using rule 69 (lelseif -> elseif .)
    MATCH           reduce using rule 69 (lelseif -> elseif .)
    LOOP            reduce using rule 69 (lelseif -> elseif .)
    WHILE           reduce using rule 69 (lelseif -> elseif .)
    BREAK           reduce using rule 69 (lelseif -> elseif .)
    RETURN          reduce using rule 69 (lelseif -> elseif .)
    CONTINUE        reduce using rule 69 (lelseif -> elseif .)
    FOR             reduce using rule 69 (lelseif -> elseif .)
    VEC             reduce using rule 69 (lelseif -> elseif .)
    VVEC            reduce using rule 69 (lelseif -> elseif .)
    ENTERO          reduce using rule 69 (lelseif -> elseif .)
    DECIMAL         reduce using rule 69 (lelseif -> elseif .)
    TRUE            reduce using rule 69 (lelseif -> elseif .)
    FALSE           reduce using rule 69 (lelseif -> elseif .)
    STR             reduce using rule 69 (lelseif -> elseif .)
    CADENA          reduce using rule 69 (lelseif -> elseif .)
    CARACTER        reduce using rule 69 (lelseif -> elseif .)
    MENOS           reduce using rule 69 (lelseif -> elseif .)
    NOT             reduce using rule 69 (lelseif -> elseif .)
    PARIZQ          reduce using rule 69 (lelseif -> elseif .)
    CORIZQ          reduce using rule 69 (lelseif -> elseif .)
    I64             reduce using rule 69 (lelseif -> elseif .)
    F64             reduce using rule 69 (lelseif -> elseif .)
    BOOL            reduce using rule 69 (lelseif -> elseif .)
    CHAR            reduce using rule 69 (lelseif -> elseif .)
    STRING          reduce using rule 69 (lelseif -> elseif .)
    USIZE           reduce using rule 69 (lelseif -> elseif .)
    SIGNOI          reduce using rule 69 (lelseif -> elseif .)
    $end            reduce using rule 69 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 69 (lelseif -> elseif .)
    COMA            reduce using rule 69 (lelseif -> elseif .)


state 322

    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    PTO             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AS              reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEIZQ        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 323

    (142) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (143) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (144) elseifa -> elseifa . lif
    (147) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (146) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    PTO             reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AS              reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEIZQ        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 142 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 324

    elsea                          shift and go to state 371
    lif                            shift and go to state 372

state 324

    (147) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (146) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 373
    IF              shift and go to state 374


state 325

    (145) elseifa -> lif .

    ELSE            reduce using rule 145 (elseifa -> lif .)
    PTO             reduce using rule 145 (elseifa -> lif .)
    MAS             reduce using rule 145 (elseifa -> lif .)
    MENOS           reduce using rule 145 (elseifa -> lif .)
    POR             reduce using rule 145 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 145 (elseifa -> lif .)
    MODULO          reduce using rule 145 (elseifa -> lif .)
    IGUALQUE        reduce using rule 145 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 145 (elseifa -> lif .)
    MENORQUE        reduce using rule 145 (elseifa -> lif .)
    MAYORQUE        reduce using rule 145 (elseifa -> lif .)
    MENORIQUE       reduce using rule 145 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 145 (elseifa -> lif .)
    OR              reduce using rule 145 (elseifa -> lif .)
    AND             reduce using rule 145 (elseifa -> lif .)
    PARDER          reduce using rule 145 (elseifa -> lif .)
    AS              reduce using rule 145 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 145 (elseifa -> lif .)
    PTCOMA          reduce using rule 145 (elseifa -> lif .)
    CORDER          reduce using rule 145 (elseifa -> lif .)
    COMA            reduce using rule 145 (elseifa -> lif .)
    LLAVEDER        reduce using rule 145 (elseifa -> lif .)
    IGUAL           reduce using rule 145 (elseifa -> lif .)
    BARRAS          reduce using rule 145 (elseifa -> lif .)


state 326

    (148) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 148 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 148 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 327

    (84) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 375


state 328

    (73) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 73 (imatch -> opmatch COMA dmatch .)


state 329

    (74) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 74 (opmatch -> opmatch COMA cmatch .)


state 330

    (75) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 75 (opmatch -> opmatch COMA rmatch .)


state 331

    (82) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (83) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 376


state 332

    (84) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (81) bloque_match -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             shift and go to state 276
    IGUAL           reduce using rule 81 (bloque_match -> expresion .)
    BARRAS          reduce using rule 81 (bloque_match -> expresion .)
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 333

    (152) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 152 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 334

    (155) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 155 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 335

    (153) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 377


state 336

    (78) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (79) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 378
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 379
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 337

    (80) bloque_match -> bloque_match BARRAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 80 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 80 (bloque_match -> bloque_match BARRAS expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 338

    (157) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (158) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 380
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 381
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 339

    (159) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 159 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 159 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 340

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .

    PTO             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAS             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENOS           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    POR             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MODULO          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUALQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    OR              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AND             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PARDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AS              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTCOMA          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    CORDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    COMA            reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEDER        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUAL           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    BARRAS          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)


state 341

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 382
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 342

    (89) forin -> FOR ID IN expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 383
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 343

    (90) forin -> FOR ID IN expresion PTO PTO . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 384
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 344

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 345

    (48) lparame -> ID DOSPT SIGNOI MUT . tipo_arreglo
    (49) lparame -> ID DOSPT SIGNOI MUT . VVEC MENORQUE tipo MAYORQUE
    (39) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (40) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 386
    CORIZQ          shift and go to state 187

    tipo_arreglo                   shift and go to state 385

state 346

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 387

state 347

    (43) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 388
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 348

    (42) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 389


state 349

    (44) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 44 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 350

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .

    PARDER          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AS              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    COMA            reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)


state 351

    (58) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 390
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 352

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 391
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 353

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 392


state 354

    (60) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    STR             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    I64             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    F64             reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 60 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 355

    (38) declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STR             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    I64             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    F64             reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 38 (declaracion_arreglos -> LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 356

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 393


state 357

    (39) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 394
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 358

    (40) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 395
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 359

    (123) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 396
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 360

    (124) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 397
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 361

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)


state 362

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 398
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 363

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)


state 364

    (36) expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .

    PTO             reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAS             reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENOS           reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    POR             reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    DIVIDIDO        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MODULO          reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    IGUALQUE        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    NOIGUALQUE      reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENORQUE        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAYORQUE        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENORIQUE       reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAYORIQUE       reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    OR              reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    AND             reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    PARDER          reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    AS              reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    LLAVEIZQ        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    PTCOMA          reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    CORDER          reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    COMA            reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    LLAVEDER        reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    IGUAL           reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)
    BARRAS          reduce using rule 36 (expresion -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER .)


state 365

    (56) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 399


state 366

    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 400
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 367

    (67) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FOR             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    VEC             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    VVEC            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ENTERO          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    DECIMAL         reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    TRUE            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FALSE           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    STR             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CADENA          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CARACTER        reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MENOS           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    NOT             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PARIZQ          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CORIZQ          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    I64             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    F64             reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BOOL            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CHAR            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    STRING          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    USIZE           reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    SIGNOI          reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 67 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 368

    (68) lelseif -> lelseif elseif .

    ELSE            reduce using rule 68 (lelseif -> lelseif elseif .)
    FN              reduce using rule 68 (lelseif -> lelseif elseif .)
    LET             reduce using rule 68 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 68 (lelseif -> lelseif elseif .)
    ID              reduce using rule 68 (lelseif -> lelseif elseif .)
    IF              reduce using rule 68 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 68 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 68 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 68 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 68 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 68 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 68 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 68 (lelseif -> lelseif elseif .)
    VEC             reduce using rule 68 (lelseif -> lelseif elseif .)
    VVEC            reduce using rule 68 (lelseif -> lelseif elseif .)
    ENTERO          reduce using rule 68 (lelseif -> lelseif elseif .)
    DECIMAL         reduce using rule 68 (lelseif -> lelseif elseif .)
    TRUE            reduce using rule 68 (lelseif -> lelseif elseif .)
    FALSE           reduce using rule 68 (lelseif -> lelseif elseif .)
    STR             reduce using rule 68 (lelseif -> lelseif elseif .)
    CADENA          reduce using rule 68 (lelseif -> lelseif elseif .)
    CARACTER        reduce using rule 68 (lelseif -> lelseif elseif .)
    MENOS           reduce using rule 68 (lelseif -> lelseif elseif .)
    NOT             reduce using rule 68 (lelseif -> lelseif elseif .)
    PARIZQ          reduce using rule 68 (lelseif -> lelseif elseif .)
    CORIZQ          reduce using rule 68 (lelseif -> lelseif elseif .)
    I64             reduce using rule 68 (lelseif -> lelseif elseif .)
    F64             reduce using rule 68 (lelseif -> lelseif elseif .)
    BOOL            reduce using rule 68 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 68 (lelseif -> lelseif elseif .)
    STRING          reduce using rule 68 (lelseif -> lelseif elseif .)
    USIZE           reduce using rule 68 (lelseif -> lelseif elseif .)
    SIGNOI          reduce using rule 68 (lelseif -> lelseif elseif .)
    $end            reduce using rule 68 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 68 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 68 (lelseif -> lelseif elseif .)


state 369

    (71) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 401
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 370

    (70) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 402
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 371

    (143) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    PTO             reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AS              reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEIZQ        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 143 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 372

    (144) elseifa -> elseifa lif .

    ELSE            reduce using rule 144 (elseifa -> elseifa lif .)
    PTO             reduce using rule 144 (elseifa -> elseifa lif .)
    MAS             reduce using rule 144 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 144 (elseifa -> elseifa lif .)
    POR             reduce using rule 144 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 144 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 144 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 144 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 144 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 144 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 144 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 144 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 144 (elseifa -> elseifa lif .)
    OR              reduce using rule 144 (elseifa -> elseifa lif .)
    AND             reduce using rule 144 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 144 (elseifa -> elseifa lif .)
    AS              reduce using rule 144 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 144 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 144 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 144 (elseifa -> elseifa lif .)
    COMA            reduce using rule 144 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 144 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 144 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 144 (elseifa -> elseifa lif .)


state 373

    (147) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 403
    expresion                      shift and go to state 239
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 374

    (146) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 404
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 375

    (84) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 405
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 376

    (82) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (83) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 406


state 377

    (153) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (154) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 407


state 378

    (78) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 408
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 379

    (79) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 79 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 380

    (157) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 409
    expresion                      shift and go to state 239
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 381

    (158) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            reduce using rule 158 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 382

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .

    PTO             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAS             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENOS           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    POR             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MODULO          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    OR              reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AND             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PARDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AS              reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    CORDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    COMA            reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)


state 383

    (89) forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 89 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)


state 384

    (90) forin -> FOR ID IN expresion PTO PTO expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 410
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 385

    (48) lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .

    PARDER          reduce using rule 48 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)
    COMA            reduce using rule 48 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)


state 386

    (49) lparame -> ID DOSPT SIGNOI MUT VVEC . MENORQUE tipo MAYORQUE

    MENORQUE        shift and go to state 411


state 387

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 412


state 388

    (43) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 43 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 389

    (42) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instrucciones                  shift and go to state 413
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 390

    (58) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    STR             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    I64             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    F64             reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 58 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 391

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STR             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    I64             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    F64             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 392

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 414


state 393

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 415
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 394

    (39) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 39 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 39 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 39 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    COMA            reduce using rule 39 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 395

    (40) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 40 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 40 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 40 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    COMA            reduce using rule 40 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 396

    (123) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 416
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 397

    (124) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 417
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 398

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 418


state 399

    (56) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    VEC             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    VVEC            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ENTERO          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    DECIMAL         reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    TRUE            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FALSE           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    STR             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CADENA          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CARACTER        reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MENOS           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    NOT             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PARIZQ          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CORIZQ          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    I64             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    F64             reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BOOL            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    STRING          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    USIZE           reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    SIGNOI          reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 56 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 400

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 419
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 401

    (71) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 420
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 402

    (70) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 421
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 403

    (147) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (148) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 422
    PTCOMA          shift and go to state 274


state 404

    (146) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 423
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 405

    (84) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           shift and go to state 424
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 406

    (82) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (83) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 425
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 426
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 407

    (153) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (154) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 427
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 428
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 408

    (78) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 429
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 409

    (157) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (148) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 430
    PTCOMA          shift and go to state 274


state 410

    (90) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 431
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 411

    (49) lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE . tipo MAYORQUE
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 432

state 412

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instrucciones                  shift and go to state 433
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 413

    (42) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 434
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 414

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 435
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 415

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 436
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 416

    (123) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    PTO             reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEIZQ        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 123 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 417

    (124) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    PTO             reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEIZQ        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 124 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 418

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .

    FN              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LET             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    ID              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    IF              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    MATCH           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LOOP            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    WHILE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    BREAK           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    RETURN          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    FOR             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    VEC             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    VVEC            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    TRUE            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    FALSE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    STR             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CADENA          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    MENOS           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    NOT             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    I64             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    F64             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    BOOL            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CHAR            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    STRING          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    USIZE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    $end            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    COMA            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)


state 419

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER . PTCOMA

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTCOMA          shift and go to state 363

  ! PTCOMA          [ reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .) ]


state 420

    (71) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 71 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 421

    (70) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 437
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 422

    (147) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    PTO             reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 147 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 423

    (146) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 239
    bloque_expresion               shift and go to state 438
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 424

    (84) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 439


state 425

    (82) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 440
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 426

    (83) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 83 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 427

    (153) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (148) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (149) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 441
    expresion                      shift and go to state 239
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 428

    (154) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 154 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 429

    (78) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 78 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 430

    (157) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 157 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 431

    (90) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 442
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 432

    (49) lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE tipo . MAYORQUE

    MAYORQUE        shift and go to state 443


state 433

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 444
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 434

    (42) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 42 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 435

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> expresion . PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (116) expresion -> expresion . MAS expresion
    (117) expresion -> expresion . MENOS expresion
    (118) expresion -> expresion . POR expresion
    (119) expresion -> expresion . DIVIDIDO expresion
    (120) expresion -> expresion . MODULO expresion
    (125) expresion -> expresion . IGUALQUE expresion
    (126) expresion -> expresion . NOIGUALQUE expresion
    (127) expresion -> expresion . MENORQUE expresion
    (128) expresion -> expresion . MAYORQUE expresion
    (129) expresion -> expresion . MENORIQUE expresion
    (130) expresion -> expresion . MAYORIQUE expresion
    (131) expresion -> expresion . OR expresion
    (132) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (111) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (112) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (166) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 445
    PTO             shift and go to state 118
    MAS             shift and go to state 83
    MENOS           shift and go to state 84
    POR             shift and go to state 85
    DIVIDIDO        shift and go to state 86
    MODULO          shift and go to state 87
    IGUALQUE        shift and go to state 88
    NOIGUALQUE      shift and go to state 89
    MENORQUE        shift and go to state 90
    MAYORQUE        shift and go to state 91
    MENORIQUE       shift and go to state 92
    MAYORIQUE       shift and go to state 93
    OR              shift and go to state 94
    AND             shift and go to state 95


state 436

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VEC             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STR             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    NOT             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    I64             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    F64             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STRING          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 437

    (70) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 446
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 438

    (146) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (148) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 447
    PTCOMA          shift and go to state 274


state 439

    (84) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (85) rrmatch -> . instruccion
    (86) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 450
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    rrmatch                        shift and go to state 448
    instruccion                    shift and go to state 449
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 440

    (82) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 451
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 441

    (153) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (148) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 452
    PTCOMA          shift and go to state 274


state 442

    (90) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 90 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)


state 443

    (49) lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE .

    PARDER          reduce using rule 49 (lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE .)
    COMA            reduce using rule 49 (lparame -> ID DOSPT SIGNOI MUT VVEC MENORQUE tipo MAYORQUE .)


state 444

    (41) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 41 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 445

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VEC             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STR             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    NOT             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    I64             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    F64             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STRING          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 446

    (70) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 70 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 447

    (146) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 146 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 448

    (84) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 84 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 449

    (85) rrmatch -> instruccion .

    COMA            reduce using rule 85 (rrmatch -> instruccion .)


state 450

    (86) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 453
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 451

    (82) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 82 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 452

    (153) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 153 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 453

    (86) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (58) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (60) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (61) declaracion -> . LET ID IGUAL expresion PTCOMA
    (56) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (57) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (62) asignacion -> . ID IGUAL expresion PTCOMA
    (63) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (66) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (67) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (87) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (88) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (91) break -> . BREAK PTCOMA
    (92) break -> . BREAK expresion PTCOMA
    (94) return -> . RETURN expresion PTCOMA
    (93) continue -> . CONTINUE PTCOMA
    (41) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (50) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (51) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (38) declaracion_arreglos -> . LET ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (89) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (90) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER
    (104) expresion -> . ID
    (105) expresion -> . ENTERO
    (106) expresion -> . DECIMAL
    (107) expresion -> . TRUE
    (108) expresion -> . FALSE
    (109) expresion -> . tostring
    (110) expresion -> . toowned
    (113) expresion -> . STR
    (114) expresion -> . CADENA
    (115) expresion -> . CARACTER
    (116) expresion -> . expresion MAS expresion
    (117) expresion -> . expresion MENOS expresion
    (118) expresion -> . expresion POR expresion
    (119) expresion -> . expresion DIVIDIDO expresion
    (120) expresion -> . expresion MODULO expresion
    (121) expresion -> . MENOS expresion
    (122) expresion -> . NOT expresion
    (123) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (124) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (125) expresion -> . expresion IGUALQUE expresion
    (126) expresion -> . expresion NOIGUALQUE expresion
    (127) expresion -> . expresion MENORQUE expresion
    (128) expresion -> . expresion MAYORQUE expresion
    (129) expresion -> . expresion MENORIQUE expresion
    (130) expresion -> . expresion MAYORIQUE expresion
    (131) expresion -> . expresion OR expresion
    (132) expresion -> . expresion AND expresion
    (133) expresion -> . PARIZQ expresion PARDER
    (134) expresion -> . llamada_funciones
    (135) expresion -> . CORIZQ expresiones CORDER
    (136) expresion -> . ID lindices
    (139) expresion -> . if_asig
    (150) expresion -> . match_asig
    (161) expresion -> . loop_asig
    (163) expresion -> . PARIZQ expresion AS tipo PARDER
    (164) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (111) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (112) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (95) tipo -> . I64
    (96) tipo -> . F64
    (97) tipo -> . BOOL
    (98) tipo -> . CHAR
    (99) tipo -> . STRING
    (100) tipo -> . USIZE
    (101) tipo -> . SIGNOI STR
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (142) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (143) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (151) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (162) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (165) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (166) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (167) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 454
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 454

    (86) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 86 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 419 resolved as shift
WARNING: reduce/reduce conflict in state 214 resolved using rule (bloque_match -> expresion)
WARNING: rejected rule (bloque_match_asig -> expresion) in state 214
WARNING: reduce/reduce conflict in state 224 resolved using rule (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER)
WARNING: rejected rule (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER) in state 224
