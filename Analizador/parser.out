Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 10    imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA
Rule 11    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 12    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 13    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 14    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 15    asignacion -> ID IGUAL expresion PTCOMA
Rule 16    tipo -> I64
Rule 17    tipo -> F64
Rule 18    tipo -> BOOL
Rule 19    tipo -> CHAR
Rule 20    tipo -> STRING
Rule 21    tipo -> SIGNOI STR
Rule 22    expresiones -> expresiones COMA expresion
Rule 23    expresiones -> expresion
Rule 24    expresion -> ID
Rule 25    expresion -> ENTERO
Rule 26    expresion -> DECIMAL
Rule 27    expresion -> TRUE
Rule 28    expresion -> FALSE
Rule 29    expresion -> tostring
Rule 30    expresion -> toowned
Rule 31    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 32    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 33    expresion -> STR
Rule 34    expresion -> CADENA
Rule 35    expresion -> CARACTER

Terminals, with rules where they appear

BOOL                 : 18
CADENA               : 31 32 34
CARACTER             : 35
CHAR                 : 19
COMA                 : 9 22
DECIMAL              : 26
DOSPT                : 11 13
ENTERO               : 25
EX                   : 9 10
F64                  : 17
FALSE                : 28
FN                   : 3
I64                  : 16
ID                   : 11 12 13 14 15 24
IGUAL                : 11 12 13 14 15
LET                  : 11 12 13 14
LLAVEDER             : 3
LLAVEIZQ             : 3
MAIN                 : 3
MUT                  : 11 12
PARDER               : 3 9 10 31 32
PARIZQ               : 3 9 10 31 32
PRINTLN              : 9 10
PTCOMA               : 9 10 11 12 13 14 15
PTO                  : 31 32
SIGNOI               : 21
STR                  : 21 33
STRING               : 20
TOOWNED              : 32
TOSTRING             : 31
TRUE                 : 27
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
declaracion          : 6
expresion            : 9 10 11 12 13 14 15 22 23
expresiones          : 9 22
imprimir             : 7
inicio               : 0
instruccion          : 4 5
instrucciones        : 1 3 4
main                 : 1 2
tipo                 : 11 13
toowned              : 30
tostring             : 29

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (11) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID IGUAL expresion PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA
    (15) asignacion -> . ID IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 9
    PRINTLN         shift and go to state 11
    ID              shift and go to state 10

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (11) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID IGUAL expresion PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA
    (15) asignacion -> . ID IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 9
    PRINTLN         shift and go to state 11
    ID              shift and go to state 10

    main                           shift and go to state 12
    instruccion                    shift and go to state 13
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 14


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)


state 9

    (11) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (13) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 15
    ID              shift and go to state 16


state 10

    (15) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 17


state 11

    (9) imprimir -> PRINTLN . EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> PRINTLN . EX PARIZQ expresion PARDER PTCOMA

    EX              shift and go to state 18


state 12

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 13

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 14

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 19


state 15

    (11) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 20


state 16

    (13) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 21
    IGUAL           shift and go to state 22


state 17

    (15) asignacion -> ID IGUAL . expresion PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 24
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 18

    (9) imprimir -> PRINTLN EX . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> PRINTLN EX . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 34


state 19

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 35


state 20

    (11) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 36
    IGUAL           shift and go to state 37


state 21

    (13) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (16) tipo -> . I64
    (17) tipo -> . F64
    (18) tipo -> . BOOL
    (19) tipo -> . CHAR
    (20) tipo -> . STRING
    (21) tipo -> . SIGNOI STR

    I64             shift and go to state 39
    F64             shift and go to state 40
    BOOL            shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    SIGNOI          shift and go to state 44

    tipo                           shift and go to state 38

state 22

    (14) declaracion -> LET ID IGUAL . expresion PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 45
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 23

    (24) expresion -> ID .

    PTCOMA          reduce using rule 24 (expresion -> ID .)
    COMA            reduce using rule 24 (expresion -> ID .)
    PARDER          reduce using rule 24 (expresion -> ID .)


state 24

    (15) asignacion -> ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 46


state 25

    (25) expresion -> ENTERO .

    PTCOMA          reduce using rule 25 (expresion -> ENTERO .)
    COMA            reduce using rule 25 (expresion -> ENTERO .)
    PARDER          reduce using rule 25 (expresion -> ENTERO .)


state 26

    (26) expresion -> DECIMAL .

    PTCOMA          reduce using rule 26 (expresion -> DECIMAL .)
    COMA            reduce using rule 26 (expresion -> DECIMAL .)
    PARDER          reduce using rule 26 (expresion -> DECIMAL .)


state 27

    (27) expresion -> TRUE .

    PTCOMA          reduce using rule 27 (expresion -> TRUE .)
    COMA            reduce using rule 27 (expresion -> TRUE .)
    PARDER          reduce using rule 27 (expresion -> TRUE .)


state 28

    (28) expresion -> FALSE .

    PTCOMA          reduce using rule 28 (expresion -> FALSE .)
    COMA            reduce using rule 28 (expresion -> FALSE .)
    PARDER          reduce using rule 28 (expresion -> FALSE .)


state 29

    (29) expresion -> tostring .

    PTCOMA          reduce using rule 29 (expresion -> tostring .)
    COMA            reduce using rule 29 (expresion -> tostring .)
    PARDER          reduce using rule 29 (expresion -> tostring .)


state 30

    (30) expresion -> toowned .

    PTCOMA          reduce using rule 30 (expresion -> toowned .)
    COMA            reduce using rule 30 (expresion -> toowned .)
    PARDER          reduce using rule 30 (expresion -> toowned .)


state 31

    (33) expresion -> STR .

    PTCOMA          reduce using rule 33 (expresion -> STR .)
    COMA            reduce using rule 33 (expresion -> STR .)
    PARDER          reduce using rule 33 (expresion -> STR .)


state 32

    (34) expresion -> CADENA .
    (31) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

    PTCOMA          reduce using rule 34 (expresion -> CADENA .)
    COMA            reduce using rule 34 (expresion -> CADENA .)
    PARDER          reduce using rule 34 (expresion -> CADENA .)
    PTO             shift and go to state 47


state 33

    (35) expresion -> CARACTER .

    PTCOMA          reduce using rule 35 (expresion -> CARACTER .)
    COMA            reduce using rule 35 (expresion -> CARACTER .)
    PARDER          reduce using rule 35 (expresion -> CARACTER .)


state 34

    (9) imprimir -> PRINTLN EX PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> PRINTLN EX PARIZQ . expresion PARDER PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 48
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 35

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 49


state 36

    (11) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (16) tipo -> . I64
    (17) tipo -> . F64
    (18) tipo -> . BOOL
    (19) tipo -> . CHAR
    (20) tipo -> . STRING
    (21) tipo -> . SIGNOI STR

    I64             shift and go to state 39
    F64             shift and go to state 40
    BOOL            shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    SIGNOI          shift and go to state 44

    tipo                           shift and go to state 50

state 37

    (12) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 51
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 38

    (13) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 52


state 39

    (16) tipo -> I64 .

    IGUAL           reduce using rule 16 (tipo -> I64 .)


state 40

    (17) tipo -> F64 .

    IGUAL           reduce using rule 17 (tipo -> F64 .)


state 41

    (18) tipo -> BOOL .

    IGUAL           reduce using rule 18 (tipo -> BOOL .)


state 42

    (19) tipo -> CHAR .

    IGUAL           reduce using rule 19 (tipo -> CHAR .)


state 43

    (20) tipo -> STRING .

    IGUAL           reduce using rule 20 (tipo -> STRING .)


state 44

    (21) tipo -> SIGNOI . STR

    STR             shift and go to state 53


state 45

    (14) declaracion -> LET ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 54


state 46

    (15) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 15 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 15 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 15 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 15 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 15 (asignacion -> ID IGUAL expresion PTCOMA .)


state 47

    (31) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (32) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 55
    TOOWNED         shift and go to state 56


state 48

    (9) imprimir -> PRINTLN EX PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (10) imprimir -> PRINTLN EX PARIZQ expresion . PARDER PTCOMA

    COMA            shift and go to state 57
    PARDER          shift and go to state 58


state 49

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (11) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID IGUAL expresion PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA
    (15) asignacion -> . ID IGUAL expresion PTCOMA

    LET             shift and go to state 9
    PRINTLN         shift and go to state 11
    ID              shift and go to state 10

    instrucciones                  shift and go to state 59
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8

state 50

    (11) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 60


state 51

    (12) declaracion -> LET MUT ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 61


state 52

    (13) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 62
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 53

    (21) tipo -> SIGNOI STR .

    IGUAL           reduce using rule 21 (tipo -> SIGNOI STR .)


state 54

    (14) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 14 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 14 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 14 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 14 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 14 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 55

    (31) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 63


state 56

    (32) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 64


state 57

    (9) imprimir -> PRINTLN EX PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (22) expresiones -> . expresiones COMA expresion
    (23) expresiones -> . expresion
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 65
    expresiones                    shift and go to state 66
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 58

    (10) imprimir -> PRINTLN EX PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 67


state 59

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (11) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (12) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (13) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET ID IGUAL expresion PTCOMA
    (9) imprimir -> . PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA
    (10) imprimir -> . PRINTLN EX PARIZQ expresion PARDER PTCOMA
    (15) asignacion -> . ID IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 68
    LET             shift and go to state 9
    PRINTLN         shift and go to state 11
    ID              shift and go to state 10

    instruccion                    shift and go to state 13
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8

state 60

    (11) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 69
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 61

    (12) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 12 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 12 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 12 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 12 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 12 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 62

    (13) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 70


state 63

    (31) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 71


state 64

    (32) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 72


state 65

    (23) expresiones -> expresion .

    PARDER          reduce using rule 23 (expresiones -> expresion .)
    COMA            reduce using rule 23 (expresiones -> expresion .)


state 66

    (9) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (22) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 74
    COMA            shift and go to state 73


state 67

    (10) imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 10 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 10 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 10 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 10 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 10 (imprimir -> PRINTLN EX PARIZQ expresion PARDER PTCOMA .)


state 68

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 69

    (11) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 75


state 70

    (13) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 13 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 13 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 13 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 13 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 13 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 71

    (31) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    PTCOMA          reduce using rule 31 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 31 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 31 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 72

    (32) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    PTCOMA          reduce using rule 32 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 32 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 32 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 73

    (22) expresiones -> expresiones COMA . expresion
    (24) expresion -> . ID
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . STR
    (34) expresion -> . CADENA
    (35) expresion -> . CARACTER
    (31) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER

    ID              shift and go to state 23
    ENTERO          shift and go to state 25
    DECIMAL         shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    STR             shift and go to state 31
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33

    expresion                      shift and go to state 76
    tostring                       shift and go to state 29
    toowned                        shift and go to state 30

state 74

    (9) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 77


state 75

    (11) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 11 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 11 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 11 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 11 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 11 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 76

    (22) expresiones -> expresiones COMA expresion .

    PARDER          reduce using rule 22 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 22 (expresiones -> expresiones COMA expresion .)


state 77

    (9) imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 9 (imprimir -> PRINTLN EX PARIZQ expresion COMA expresiones PARDER PTCOMA .)

