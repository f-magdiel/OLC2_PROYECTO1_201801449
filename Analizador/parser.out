Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    instruccion -> match
Rule 11    instruccion -> loop
Rule 12    instruccion -> while
Rule 13    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 14    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 15    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 16    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 17    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 18    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 19    asignacion -> ID IGUAL expresion PTCOMA
Rule 20    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 21    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 22    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 23    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 24    lelseif -> lelseif elseif
Rule 25    lelseif -> elseif
Rule 26    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 27    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 28    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 29    imatch -> opmatch COMA dmatch
Rule 30    opmatch -> opmatch COMA cmatch
Rule 31    opmatch -> opmatch COMA rmatch
Rule 32    opmatch -> cmatch
Rule 33    opmatch -> rmatch
Rule 34    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 35    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 36    bloque_match -> bloque_match BARRAS expresion
Rule 37    bloque_match -> expresion
Rule 38    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 39    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 40    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 41    rrmatch -> instruccion
Rule 42    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 43    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 44    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 45    tipo -> I64
Rule 46    tipo -> F64
Rule 47    tipo -> BOOL
Rule 48    tipo -> CHAR
Rule 49    tipo -> STRING
Rule 50    tipo -> SIGNOI STR
Rule 51    expresiones -> expresiones COMA expresion
Rule 52    expresiones -> expresion
Rule 53    expresion -> ID
Rule 54    expresion -> ENTERO
Rule 55    expresion -> DECIMAL
Rule 56    expresion -> TRUE
Rule 57    expresion -> FALSE
Rule 58    expresion -> tostring
Rule 59    expresion -> toowned
Rule 60    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 61    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 62    expresion -> STR
Rule 63    expresion -> CADENA
Rule 64    expresion -> CARACTER
Rule 65    expresion -> expresion MAS expresion
Rule 66    expresion -> expresion MENOS expresion
Rule 67    expresion -> expresion POR expresion
Rule 68    expresion -> expresion DIVIDIDO expresion
Rule 69    expresion -> expresion MODULO expresion
Rule 70    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 71    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 72    expresion -> expresion IGUALQUE expresion
Rule 73    expresion -> expresion NOIGUALQUE expresion
Rule 74    expresion -> expresion MENORQUE expresion
Rule 75    expresion -> expresion MAYORQUE expresion
Rule 76    expresion -> expresion MENORIQUE expresion
Rule 77    expresion -> expresion MAYORIQUE expresion
Rule 78    expresion -> expresion OR expresion
Rule 79    expresion -> expresion AND expresion
Rule 80    expresion -> MENOS expresion
Rule 81    expresion -> NOT expresion
Rule 82    expresion -> PARIZQ expresion PARDER
Rule 83    expresion -> if_asig
Rule 84    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 85    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
Rule 86    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
Rule 87    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
Rule 88    elseif -> elseif lif
Rule 89    elseif -> lif
Rule 90    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 91    else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 92    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 93    bloque_expresion -> expresion
Rule 94    expresion -> match_asig
Rule 95    match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 96    imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 97    dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 98    dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 99    opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 100   opmatch_asig -> cmatch_asig
Rule 101   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 102   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 103   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 104   bloque_match_asig -> expresion

Terminals, with rules where they appear

AND                  : 79
AS                   : 
BARRAS               : 36 103
BOOL                 : 47
CADENA               : 60 61 63
CARACTER             : 64
CHAR                 : 48
COMA                 : 13 29 30 31 51 70 71 96 99
DECIMAL              : 55
DIVIDIDO             : 68
DOSPT                : 15 17 70 70 71 71
ELSE                 : 26 27 90 91
ENTERO               : 54
F64                  : 46
FALSE                : 57
FN                   : 3
GUIONB               : 38 39 97 98
I64                  : 45
ID                   : 15 16 17 18 19 53
IF                   : 20 21 22 23 26 84 85 86 87 90
IGUAL                : 15 16 17 18 19 34 35 38 39 40 40 97 98 101 102
IGUALQUE             : 72
LET                  : 15 16 17 18
LLAVEDER             : 3 20 21 22 23 26 27 28 34 38 42 43 44 84 85 86 87 90 91 95 97 101
LLAVEIZQ             : 3 20 21 22 23 26 27 28 34 38 42 43 44 84 85 86 87 90 91 95 97 101
LOOP                 : 43
MAIN                 : 3
MAS                  : 65
MATCH                : 28 95
MAYORIQUE            : 77
MAYORQUE             : 34 35 38 39 40 75 97 98 101 102
MENORIQUE            : 76
MENORQUE             : 74
MENOS                : 66 80
MODULO               : 69
MUT                  : 15 16
NOIGUALQUE           : 73
NOT                  : 13 14 81
OR                   : 78
PARDER               : 3 13 14 60 61 70 71 82
PARIZQ               : 3 13 14 60 61 70 71 82
POR                  : 67
POW                  : 70
POWF                 : 71
PRINTLN              : 13 14
PTCOMA               : 13 14 15 16 17 18 19 92
PTO                  : 40 40 60 61
SIGNOI               : 50
STR                  : 50 62
STRING               : 49
TOOWNED              : 61
TOSTRING             : 60
TRUE                 : 56
WHILE                : 44
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 84 85 86 87 90 91 92 97 101
bloque_match         : 34 35 36
bloque_match_asig    : 101 102 103
cmatch               : 30 32
cmatch_asig          : 99 100
declaracion          : 6
dmatch               : 29
dmatch_asig          : 96
else                 : 21 23 85 87
elseif               : 24 25 86 87 88
expresion            : 13 14 15 16 17 18 19 20 21 22 23 26 28 36 37 40 40 44 51 52 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 81 82 84 85 86 87 90 92 93 95 98 102 103 104
expresiones          : 13 51
if                   : 9
if_asig              : 83
imatch               : 28
imatch_asig          : 95
imprimir             : 7
inicio               : 0
instruccion          : 4 5 35 39 41
instrucciones        : 1 3 4 20 21 22 23 26 27 34 38 42 43 44
lelseif              : 22 23 24
lif                  : 88 89
loop                 : 11
main                 : 1 2
match                : 10
match_asig           : 94
opmatch              : 29 30 31
opmatch_asig         : 96 99
rmatch               : 31 33
rrmatch              : 40
tipo                 : 15 17 70 71
toowned              : 59
tostring             : 58
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    main                           shift and go to state 20
    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    MATCH           reduce using rule 5 (instrucciones -> instruccion .)
    LOOP            reduce using rule 5 (instrucciones -> instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 22


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    MATCH           reduce using rule 6 (instruccion -> declaracion .)
    LOOP            reduce using rule 6 (instruccion -> declaracion .)
    WHILE           reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)
    COMA            reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    MATCH           reduce using rule 7 (instruccion -> imprimir .)
    LOOP            reduce using rule 7 (instruccion -> imprimir .)
    WHILE           reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)
    COMA            reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    MATCH           reduce using rule 8 (instruccion -> asignacion .)
    LOOP            reduce using rule 8 (instruccion -> asignacion .)
    WHILE           reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)
    COMA            reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    MATCH           reduce using rule 9 (instruccion -> if .)
    LOOP            reduce using rule 9 (instruccion -> if .)
    WHILE           reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)
    COMA            reduce using rule 9 (instruccion -> if .)


state 10

    (10) instruccion -> match .

    FN              reduce using rule 10 (instruccion -> match .)
    LET             reduce using rule 10 (instruccion -> match .)
    PRINTLN         reduce using rule 10 (instruccion -> match .)
    ID              reduce using rule 10 (instruccion -> match .)
    IF              reduce using rule 10 (instruccion -> match .)
    MATCH           reduce using rule 10 (instruccion -> match .)
    LOOP            reduce using rule 10 (instruccion -> match .)
    WHILE           reduce using rule 10 (instruccion -> match .)
    LLAVEDER        reduce using rule 10 (instruccion -> match .)
    COMA            reduce using rule 10 (instruccion -> match .)


state 11

    (11) instruccion -> loop .

    FN              reduce using rule 11 (instruccion -> loop .)
    LET             reduce using rule 11 (instruccion -> loop .)
    PRINTLN         reduce using rule 11 (instruccion -> loop .)
    ID              reduce using rule 11 (instruccion -> loop .)
    IF              reduce using rule 11 (instruccion -> loop .)
    MATCH           reduce using rule 11 (instruccion -> loop .)
    LOOP            reduce using rule 11 (instruccion -> loop .)
    WHILE           reduce using rule 11 (instruccion -> loop .)
    LLAVEDER        reduce using rule 11 (instruccion -> loop .)
    COMA            reduce using rule 11 (instruccion -> loop .)


state 12

    (12) instruccion -> while .

    FN              reduce using rule 12 (instruccion -> while .)
    LET             reduce using rule 12 (instruccion -> while .)
    PRINTLN         reduce using rule 12 (instruccion -> while .)
    ID              reduce using rule 12 (instruccion -> while .)
    IF              reduce using rule 12 (instruccion -> while .)
    MATCH           reduce using rule 12 (instruccion -> while .)
    LOOP            reduce using rule 12 (instruccion -> while .)
    WHILE           reduce using rule 12 (instruccion -> while .)
    LLAVEDER        reduce using rule 12 (instruccion -> while .)
    COMA            reduce using rule 12 (instruccion -> while .)


state 13

    (15) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 23
    ID              shift and go to state 24


state 14

    (19) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 25


state 15

    (13) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 26


state 16

    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 28
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 17

    (28) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 52
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 18

    (43) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 53


state 19

    (44) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 54
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 20

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 21

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 22

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 55


state 23

    (15) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 56


state 24

    (17) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 57
    IGUAL           shift and go to state 58


state 25

    (19) asignacion -> ID IGUAL . expresion PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 59
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 26

    (13) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 60


state 27

    (84) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 61
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 28

    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 29

    (53) expresion -> ID .

    LLAVEIZQ        reduce using rule 53 (expresion -> ID .)
    MAS             reduce using rule 53 (expresion -> ID .)
    MENOS           reduce using rule 53 (expresion -> ID .)
    POR             reduce using rule 53 (expresion -> ID .)
    DIVIDIDO        reduce using rule 53 (expresion -> ID .)
    MODULO          reduce using rule 53 (expresion -> ID .)
    IGUALQUE        reduce using rule 53 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 53 (expresion -> ID .)
    MENORQUE        reduce using rule 53 (expresion -> ID .)
    MAYORQUE        reduce using rule 53 (expresion -> ID .)
    MENORIQUE       reduce using rule 53 (expresion -> ID .)
    MAYORIQUE       reduce using rule 53 (expresion -> ID .)
    OR              reduce using rule 53 (expresion -> ID .)
    AND             reduce using rule 53 (expresion -> ID .)
    PTCOMA          reduce using rule 53 (expresion -> ID .)
    PARDER          reduce using rule 53 (expresion -> ID .)
    COMA            reduce using rule 53 (expresion -> ID .)
    PTO             reduce using rule 53 (expresion -> ID .)
    IGUAL           reduce using rule 53 (expresion -> ID .)
    BARRAS          reduce using rule 53 (expresion -> ID .)
    LLAVEDER        reduce using rule 53 (expresion -> ID .)


state 30

    (54) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 54 (expresion -> ENTERO .)
    MAS             reduce using rule 54 (expresion -> ENTERO .)
    MENOS           reduce using rule 54 (expresion -> ENTERO .)
    POR             reduce using rule 54 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 54 (expresion -> ENTERO .)
    MODULO          reduce using rule 54 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 54 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 54 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 54 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 54 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 54 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 54 (expresion -> ENTERO .)
    OR              reduce using rule 54 (expresion -> ENTERO .)
    AND             reduce using rule 54 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 54 (expresion -> ENTERO .)
    PARDER          reduce using rule 54 (expresion -> ENTERO .)
    COMA            reduce using rule 54 (expresion -> ENTERO .)
    PTO             reduce using rule 54 (expresion -> ENTERO .)
    IGUAL           reduce using rule 54 (expresion -> ENTERO .)
    BARRAS          reduce using rule 54 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 54 (expresion -> ENTERO .)


state 31

    (55) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 55 (expresion -> DECIMAL .)
    MAS             reduce using rule 55 (expresion -> DECIMAL .)
    MENOS           reduce using rule 55 (expresion -> DECIMAL .)
    POR             reduce using rule 55 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 55 (expresion -> DECIMAL .)
    MODULO          reduce using rule 55 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 55 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 55 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 55 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 55 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 55 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 55 (expresion -> DECIMAL .)
    OR              reduce using rule 55 (expresion -> DECIMAL .)
    AND             reduce using rule 55 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 55 (expresion -> DECIMAL .)
    PARDER          reduce using rule 55 (expresion -> DECIMAL .)
    COMA            reduce using rule 55 (expresion -> DECIMAL .)
    PTO             reduce using rule 55 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 55 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 55 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 55 (expresion -> DECIMAL .)


state 32

    (56) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 56 (expresion -> TRUE .)
    MAS             reduce using rule 56 (expresion -> TRUE .)
    MENOS           reduce using rule 56 (expresion -> TRUE .)
    POR             reduce using rule 56 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 56 (expresion -> TRUE .)
    MODULO          reduce using rule 56 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 56 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 56 (expresion -> TRUE .)
    MENORQUE        reduce using rule 56 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 56 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 56 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 56 (expresion -> TRUE .)
    OR              reduce using rule 56 (expresion -> TRUE .)
    AND             reduce using rule 56 (expresion -> TRUE .)
    PTCOMA          reduce using rule 56 (expresion -> TRUE .)
    PARDER          reduce using rule 56 (expresion -> TRUE .)
    COMA            reduce using rule 56 (expresion -> TRUE .)
    PTO             reduce using rule 56 (expresion -> TRUE .)
    IGUAL           reduce using rule 56 (expresion -> TRUE .)
    BARRAS          reduce using rule 56 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 56 (expresion -> TRUE .)


state 33

    (57) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 57 (expresion -> FALSE .)
    MAS             reduce using rule 57 (expresion -> FALSE .)
    MENOS           reduce using rule 57 (expresion -> FALSE .)
    POR             reduce using rule 57 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 57 (expresion -> FALSE .)
    MODULO          reduce using rule 57 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 57 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 57 (expresion -> FALSE .)
    MENORQUE        reduce using rule 57 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 57 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 57 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 57 (expresion -> FALSE .)
    OR              reduce using rule 57 (expresion -> FALSE .)
    AND             reduce using rule 57 (expresion -> FALSE .)
    PTCOMA          reduce using rule 57 (expresion -> FALSE .)
    PARDER          reduce using rule 57 (expresion -> FALSE .)
    COMA            reduce using rule 57 (expresion -> FALSE .)
    PTO             reduce using rule 57 (expresion -> FALSE .)
    IGUAL           reduce using rule 57 (expresion -> FALSE .)
    BARRAS          reduce using rule 57 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 57 (expresion -> FALSE .)


state 34

    (58) expresion -> tostring .

    LLAVEIZQ        reduce using rule 58 (expresion -> tostring .)
    MAS             reduce using rule 58 (expresion -> tostring .)
    MENOS           reduce using rule 58 (expresion -> tostring .)
    POR             reduce using rule 58 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 58 (expresion -> tostring .)
    MODULO          reduce using rule 58 (expresion -> tostring .)
    IGUALQUE        reduce using rule 58 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 58 (expresion -> tostring .)
    MENORQUE        reduce using rule 58 (expresion -> tostring .)
    MAYORQUE        reduce using rule 58 (expresion -> tostring .)
    MENORIQUE       reduce using rule 58 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 58 (expresion -> tostring .)
    OR              reduce using rule 58 (expresion -> tostring .)
    AND             reduce using rule 58 (expresion -> tostring .)
    PTCOMA          reduce using rule 58 (expresion -> tostring .)
    PARDER          reduce using rule 58 (expresion -> tostring .)
    COMA            reduce using rule 58 (expresion -> tostring .)
    PTO             reduce using rule 58 (expresion -> tostring .)
    IGUAL           reduce using rule 58 (expresion -> tostring .)
    BARRAS          reduce using rule 58 (expresion -> tostring .)
    LLAVEDER        reduce using rule 58 (expresion -> tostring .)


state 35

    (59) expresion -> toowned .

    LLAVEIZQ        reduce using rule 59 (expresion -> toowned .)
    MAS             reduce using rule 59 (expresion -> toowned .)
    MENOS           reduce using rule 59 (expresion -> toowned .)
    POR             reduce using rule 59 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 59 (expresion -> toowned .)
    MODULO          reduce using rule 59 (expresion -> toowned .)
    IGUALQUE        reduce using rule 59 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 59 (expresion -> toowned .)
    MENORQUE        reduce using rule 59 (expresion -> toowned .)
    MAYORQUE        reduce using rule 59 (expresion -> toowned .)
    MENORIQUE       reduce using rule 59 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 59 (expresion -> toowned .)
    OR              reduce using rule 59 (expresion -> toowned .)
    AND             reduce using rule 59 (expresion -> toowned .)
    PTCOMA          reduce using rule 59 (expresion -> toowned .)
    PARDER          reduce using rule 59 (expresion -> toowned .)
    COMA            reduce using rule 59 (expresion -> toowned .)
    PTO             reduce using rule 59 (expresion -> toowned .)
    IGUAL           reduce using rule 59 (expresion -> toowned .)
    BARRAS          reduce using rule 59 (expresion -> toowned .)
    LLAVEDER        reduce using rule 59 (expresion -> toowned .)


state 36

    (62) expresion -> STR .

    LLAVEIZQ        reduce using rule 62 (expresion -> STR .)
    MAS             reduce using rule 62 (expresion -> STR .)
    MENOS           reduce using rule 62 (expresion -> STR .)
    POR             reduce using rule 62 (expresion -> STR .)
    DIVIDIDO        reduce using rule 62 (expresion -> STR .)
    MODULO          reduce using rule 62 (expresion -> STR .)
    IGUALQUE        reduce using rule 62 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 62 (expresion -> STR .)
    MENORQUE        reduce using rule 62 (expresion -> STR .)
    MAYORQUE        reduce using rule 62 (expresion -> STR .)
    MENORIQUE       reduce using rule 62 (expresion -> STR .)
    MAYORIQUE       reduce using rule 62 (expresion -> STR .)
    OR              reduce using rule 62 (expresion -> STR .)
    AND             reduce using rule 62 (expresion -> STR .)
    PTCOMA          reduce using rule 62 (expresion -> STR .)
    PARDER          reduce using rule 62 (expresion -> STR .)
    COMA            reduce using rule 62 (expresion -> STR .)
    PTO             reduce using rule 62 (expresion -> STR .)
    IGUAL           reduce using rule 62 (expresion -> STR .)
    BARRAS          reduce using rule 62 (expresion -> STR .)
    LLAVEDER        reduce using rule 62 (expresion -> STR .)


state 37

    (63) expresion -> CADENA .
    (60) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (61) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 63 (expresion -> CADENA .)
    MAS             reduce using rule 63 (expresion -> CADENA .)
    MENOS           reduce using rule 63 (expresion -> CADENA .)
    POR             reduce using rule 63 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 63 (expresion -> CADENA .)
    MODULO          reduce using rule 63 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 63 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 63 (expresion -> CADENA .)
    MENORQUE        reduce using rule 63 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 63 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 63 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 63 (expresion -> CADENA .)
    OR              reduce using rule 63 (expresion -> CADENA .)
    AND             reduce using rule 63 (expresion -> CADENA .)
    PTCOMA          reduce using rule 63 (expresion -> CADENA .)
    PARDER          reduce using rule 63 (expresion -> CADENA .)
    COMA            reduce using rule 63 (expresion -> CADENA .)
    IGUAL           reduce using rule 63 (expresion -> CADENA .)
    BARRAS          reduce using rule 63 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 63 (expresion -> CADENA .)
    PTO             shift and go to state 76

  ! PTO             [ reduce using rule 63 (expresion -> CADENA .) ]


state 38

    (64) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 64 (expresion -> CARACTER .)
    MAS             reduce using rule 64 (expresion -> CARACTER .)
    MENOS           reduce using rule 64 (expresion -> CARACTER .)
    POR             reduce using rule 64 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 64 (expresion -> CARACTER .)
    MODULO          reduce using rule 64 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 64 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 64 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 64 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 64 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 64 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 64 (expresion -> CARACTER .)
    OR              reduce using rule 64 (expresion -> CARACTER .)
    AND             reduce using rule 64 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 64 (expresion -> CARACTER .)
    PARDER          reduce using rule 64 (expresion -> CARACTER .)
    COMA            reduce using rule 64 (expresion -> CARACTER .)
    PTO             reduce using rule 64 (expresion -> CARACTER .)
    IGUAL           reduce using rule 64 (expresion -> CARACTER .)
    BARRAS          reduce using rule 64 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 64 (expresion -> CARACTER .)


state 39

    (80) expresion -> MENOS . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 77
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 40

    (70) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 78


state 41

    (82) expresion -> PARIZQ . expresion PARDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 79
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 42

    (81) expresion -> NOT . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 80
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 43

    (83) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 83 (expresion -> if_asig .)
    MAS             reduce using rule 83 (expresion -> if_asig .)
    MENOS           reduce using rule 83 (expresion -> if_asig .)
    POR             reduce using rule 83 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 83 (expresion -> if_asig .)
    MODULO          reduce using rule 83 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 83 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 83 (expresion -> if_asig .)
    MENORQUE        reduce using rule 83 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 83 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 83 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 83 (expresion -> if_asig .)
    OR              reduce using rule 83 (expresion -> if_asig .)
    AND             reduce using rule 83 (expresion -> if_asig .)
    PTCOMA          reduce using rule 83 (expresion -> if_asig .)
    PARDER          reduce using rule 83 (expresion -> if_asig .)
    COMA            reduce using rule 83 (expresion -> if_asig .)
    PTO             reduce using rule 83 (expresion -> if_asig .)
    IGUAL           reduce using rule 83 (expresion -> if_asig .)
    BARRAS          reduce using rule 83 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 83 (expresion -> if_asig .)


state 44

    (94) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 94 (expresion -> match_asig .)
    MAS             reduce using rule 94 (expresion -> match_asig .)
    MENOS           reduce using rule 94 (expresion -> match_asig .)
    POR             reduce using rule 94 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 94 (expresion -> match_asig .)
    MODULO          reduce using rule 94 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 94 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 94 (expresion -> match_asig .)
    MENORQUE        reduce using rule 94 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 94 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 94 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 94 (expresion -> match_asig .)
    OR              reduce using rule 94 (expresion -> match_asig .)
    AND             reduce using rule 94 (expresion -> match_asig .)
    PTCOMA          reduce using rule 94 (expresion -> match_asig .)
    PARDER          reduce using rule 94 (expresion -> match_asig .)
    COMA            reduce using rule 94 (expresion -> match_asig .)
    PTO             reduce using rule 94 (expresion -> match_asig .)
    IGUAL           reduce using rule 94 (expresion -> match_asig .)
    BARRAS          reduce using rule 94 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 94 (expresion -> match_asig .)


state 45

    (45) tipo -> I64 .

    DOSPT           reduce using rule 45 (tipo -> I64 .)
    IGUAL           reduce using rule 45 (tipo -> I64 .)


state 46

    (46) tipo -> F64 .

    DOSPT           reduce using rule 46 (tipo -> F64 .)
    IGUAL           reduce using rule 46 (tipo -> F64 .)


state 47

    (47) tipo -> BOOL .

    DOSPT           reduce using rule 47 (tipo -> BOOL .)
    IGUAL           reduce using rule 47 (tipo -> BOOL .)


state 48

    (48) tipo -> CHAR .

    DOSPT           reduce using rule 48 (tipo -> CHAR .)
    IGUAL           reduce using rule 48 (tipo -> CHAR .)


state 49

    (49) tipo -> STRING .

    DOSPT           reduce using rule 49 (tipo -> STRING .)
    IGUAL           reduce using rule 49 (tipo -> STRING .)


state 50

    (50) tipo -> SIGNOI . STR

    STR             shift and go to state 81


state 51

    (95) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 82
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 52

    (28) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 83
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 53

    (43) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 84
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 54

    (44) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 85
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 55

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 86


state 56

    (15) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 87
    IGUAL           shift and go to state 88


state 57

    (17) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR

    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50

    tipo                           shift and go to state 89

state 58

    (18) declaracion -> LET ID IGUAL . expresion PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 90
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 59

    (19) asignacion -> ID IGUAL expresion . PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 91
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 60

    (13) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 92
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 61

    (84) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 93
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 62

    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (23) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 94
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 63

    (65) expresion -> expresion MAS . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 95
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 64

    (66) expresion -> expresion MENOS . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 96
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 65

    (67) expresion -> expresion POR . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 97
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 66

    (68) expresion -> expresion DIVIDIDO . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 98
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 67

    (69) expresion -> expresion MODULO . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 99
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 68

    (72) expresion -> expresion IGUALQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 100
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 69

    (73) expresion -> expresion NOIGUALQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 101
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 70

    (74) expresion -> expresion MENORQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 102
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 71

    (75) expresion -> expresion MAYORQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 103
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 72

    (76) expresion -> expresion MENORIQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 104
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 73

    (77) expresion -> expresion MAYORIQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 105
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 74

    (78) expresion -> expresion OR . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 106
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 75

    (79) expresion -> expresion AND . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 107
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 76

    (60) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (61) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 108
    TOOWNED         shift and go to state 109


state 77

    (80) expresion -> MENOS expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 80 (expresion -> MENOS expresion .)
    MAS             reduce using rule 80 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 80 (expresion -> MENOS expresion .)
    POR             reduce using rule 80 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 80 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 80 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 80 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 80 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 80 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 80 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 80 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 80 (expresion -> MENOS expresion .)
    OR              reduce using rule 80 (expresion -> MENOS expresion .)
    AND             reduce using rule 80 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 80 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 80 (expresion -> MENOS expresion .)
    COMA            reduce using rule 80 (expresion -> MENOS expresion .)
    PTO             reduce using rule 80 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 80 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 80 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 80 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 67 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 78

    (70) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 110


state 79

    (82) expresion -> PARIZQ expresion . PARDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PARDER          shift and go to state 111
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 80

    (81) expresion -> NOT expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 81 (expresion -> NOT expresion .)
    MAS             reduce using rule 81 (expresion -> NOT expresion .)
    MENOS           reduce using rule 81 (expresion -> NOT expresion .)
    POR             reduce using rule 81 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 81 (expresion -> NOT expresion .)
    MODULO          reduce using rule 81 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 81 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 81 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 81 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 81 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 81 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 81 (expresion -> NOT expresion .)
    OR              reduce using rule 81 (expresion -> NOT expresion .)
    AND             reduce using rule 81 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 81 (expresion -> NOT expresion .)
    PARDER          reduce using rule 81 (expresion -> NOT expresion .)
    COMA            reduce using rule 81 (expresion -> NOT expresion .)
    PTO             reduce using rule 81 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 81 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 81 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 67 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 81

    (50) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 50 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 50 (tipo -> SIGNOI STR .)


state 82

    (95) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 112
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 83

    (28) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (29) imatch -> . opmatch COMA dmatch
    (30) opmatch -> . opmatch COMA cmatch
    (31) opmatch -> . opmatch COMA rmatch
    (32) opmatch -> . cmatch
    (33) opmatch -> . rmatch
    (34) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (40) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (36) bloque_match -> . bloque_match BARRAS expresion
    (37) bloque_match -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 113
    imatch                         shift and go to state 114
    opmatch                        shift and go to state 115
    cmatch                         shift and go to state 116
    rmatch                         shift and go to state 117
    bloque_match                   shift and go to state 118
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 84

    (43) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 119
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 85

    (44) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 86

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 121


state 87

    (15) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR

    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50

    tipo                           shift and go to state 122

state 88

    (16) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 123
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 89

    (17) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 124


state 90

    (18) declaracion -> LET ID IGUAL expresion . PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 125
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 91

    (19) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 19 (asignacion -> ID IGUAL expresion PTCOMA .)


state 92

    (13) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (14) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    COMA            shift and go to state 126
    PARDER          shift and go to state 127
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 93

    (84) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (85) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (86) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 128
    bloque_expresion               shift and go to state 129
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 94

    (20) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (21) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (22) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (23) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 130
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 95

    (65) expresion -> expresion MAS expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 65 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 65 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 65 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 65 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 65 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 65 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 65 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 65 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 65 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 65 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 65 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 65 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 65 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! POR             [ reduce using rule 65 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 65 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 96

    (66) expresion -> expresion MENOS expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 66 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 66 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 66 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 66 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 66 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 66 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 66 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 66 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 66 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 66 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 66 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 66 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! POR             [ reduce using rule 66 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 66 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 97

    (67) expresion -> expresion POR expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 67 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 67 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 67 (expresion -> expresion POR expresion .)
    POR             reduce using rule 67 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 67 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 67 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 67 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 67 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 67 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 67 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 67 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 67 (expresion -> expresion POR expresion .)
    OR              reduce using rule 67 (expresion -> expresion POR expresion .)
    AND             reduce using rule 67 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 67 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 67 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 67 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 67 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 67 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 67 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 67 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 67 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 98

    (68) expresion -> expresion DIVIDIDO expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 68 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 67 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 99

    (69) expresion -> expresion MODULO expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 69 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 69 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 69 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 67 ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 100

    (72) expresion -> expresion IGUALQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 72 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 72 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 101

    (73) expresion -> expresion NOIGUALQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 102

    (74) expresion -> expresion MENORQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 74 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 103

    (75) expresion -> expresion MAYORQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 75 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 104

    (76) expresion -> expresion MENORIQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 76 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 76 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 76 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 105

    (77) expresion -> expresion MAYORIQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67

  ! MAS             [ reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 68 ]
  ! NOIGUALQUE      [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYORQUE        [ shift and go to state 71 ]
  ! MENORIQUE       [ shift and go to state 72 ]
  ! MAYORIQUE       [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 106

    (78) expresion -> expresion OR expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 78 (expresion -> expresion OR expresion .)
    OR              reduce using rule 78 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 78 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 78 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 78 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 78 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 78 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 78 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    AND             shift and go to state 75

  ! MAS             [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 78 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 74 ]


state 107

    (79) expresion -> expresion AND expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 79 (expresion -> expresion AND expresion .)
    OR              reduce using rule 79 (expresion -> expresion AND expresion .)
    AND             reduce using rule 79 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 79 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 79 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 79 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 79 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 79 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73

  ! MAS             [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 79 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]


state 108

    (60) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 131


state 109

    (61) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 132


state 110

    (70) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 133
    POWF            shift and go to state 134


state 111

    (82) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 82 (expresion -> PARIZQ expresion PARDER .)


state 112

    (95) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (96) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (99) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (100) opmatch_asig -> . cmatch_asig
    (101) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (103) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (104) bloque_match_asig -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 135
    imatch_asig                    shift and go to state 136
    opmatch_asig                   shift and go to state 137
    cmatch_asig                    shift and go to state 138
    bloque_match_asig              shift and go to state 139
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 113

    (40) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (37) bloque_match -> expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTO             shift and go to state 140
    IGUAL           reduce using rule 37 (bloque_match -> expresion .)
    BARRAS          reduce using rule 37 (bloque_match -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 114

    (28) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 141


state 115

    (29) imatch -> opmatch . COMA dmatch
    (30) opmatch -> opmatch . COMA cmatch
    (31) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 142


state 116

    (32) opmatch -> cmatch .

    COMA            reduce using rule 32 (opmatch -> cmatch .)


state 117

    (33) opmatch -> rmatch .

    COMA            reduce using rule 33 (opmatch -> rmatch .)


state 118

    (34) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (36) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 143
    BARRAS          shift and go to state 144


state 119

    (43) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 43 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 120

    (44) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 145
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 121

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 146
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 122

    (15) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 147


state 123

    (16) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 148
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 124

    (17) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 149
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 125

    (18) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 18 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 126

    (13) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (51) expresiones -> . expresiones COMA expresion
    (52) expresiones -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 150
    expresiones                    shift and go to state 151
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 127

    (14) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 152


state 128

    (93) bloque_expresion -> expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 93 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 93 (bloque_expresion -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 129

    (84) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER else
    (86) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif
    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif else
    (92) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 153
    PTCOMA          shift and go to state 154


state 130

    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (27) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (91) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (24) lelseif -> . lelseif elseif
    (25) lelseif -> . elseif
    (26) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (88) elseif -> . elseif lif
    (89) elseif -> . lif
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 157

    else                           shift and go to state 155
    lelseif                        shift and go to state 156
    elseif                         shift and go to state 158
    lif                            shift and go to state 159

state 131

    (60) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 160


state 132

    (61) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 161


state 133

    (70) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 162


state 134

    (71) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 163


state 135

    (104) bloque_match_asig -> expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 104 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 104 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 136

    (95) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 164


state 137

    (96) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (99) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 165


state 138

    (100) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 100 (opmatch_asig -> cmatch_asig .)


state 139

    (101) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (103) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 166
    BARRAS          shift and go to state 167


state 140

    (40) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 168


state 141

    (28) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 28 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 142

    (29) imatch -> opmatch COMA . dmatch
    (30) opmatch -> opmatch COMA . cmatch
    (31) opmatch -> opmatch COMA . rmatch
    (38) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (39) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (34) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (40) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (36) bloque_match -> . bloque_match BARRAS expresion
    (37) bloque_match -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    GUIONB          shift and go to state 172
    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    dmatch                         shift and go to state 169
    cmatch                         shift and go to state 170
    rmatch                         shift and go to state 171
    bloque_match                   shift and go to state 118
    expresion                      shift and go to state 113
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 143

    (34) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 173


state 144

    (36) bloque_match -> bloque_match BARRAS . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 174
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 145

    (44) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 44 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 146

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 175
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 147

    (15) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 176
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 148

    (16) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 16 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 149

    (17) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 177
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 150

    (52) expresiones -> expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PARDER          reduce using rule 52 (expresiones -> expresion .)
    COMA            reduce using rule 52 (expresiones -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 151

    (13) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (51) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 179
    COMA            shift and go to state 178


state 152

    (14) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 153

    (84) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . else
    (86) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif
    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif else
    (27) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (91) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (26) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (88) elseif -> . elseif lif
    (89) elseif -> . lif
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 157

    else                           shift and go to state 180
    elseif                         shift and go to state 181
    lif                            shift and go to state 159

state 154

    (92) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 182
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 155

    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 156

    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (24) lelseif -> lelseif . elseif
    (27) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (91) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (26) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (88) elseif -> . elseif lif
    (89) elseif -> . lif
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 157

    else                           shift and go to state 183
    elseif                         shift and go to state 184
    lif                            shift and go to state 159

state 157

    (27) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (91) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (26) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (90) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 185
    IF              shift and go to state 186


state 158

    (25) lelseif -> elseif .
    (88) elseif -> elseif . lif
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 25 (lelseif -> elseif .)
    LET             reduce using rule 25 (lelseif -> elseif .)
    PRINTLN         reduce using rule 25 (lelseif -> elseif .)
    ID              reduce using rule 25 (lelseif -> elseif .)
    IF              reduce using rule 25 (lelseif -> elseif .)
    MATCH           reduce using rule 25 (lelseif -> elseif .)
    LOOP            reduce using rule 25 (lelseif -> elseif .)
    WHILE           reduce using rule 25 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 25 (lelseif -> elseif .)
    COMA            reduce using rule 25 (lelseif -> elseif .)
    ELSE            shift and go to state 188

  ! ELSE            [ reduce using rule 25 (lelseif -> elseif .) ]

    lif                            shift and go to state 187

state 159

    (89) elseif -> lif .

    ELSE            reduce using rule 89 (elseif -> lif .)
    FN              reduce using rule 89 (elseif -> lif .)
    LET             reduce using rule 89 (elseif -> lif .)
    PRINTLN         reduce using rule 89 (elseif -> lif .)
    ID              reduce using rule 89 (elseif -> lif .)
    IF              reduce using rule 89 (elseif -> lif .)
    MATCH           reduce using rule 89 (elseif -> lif .)
    LOOP            reduce using rule 89 (elseif -> lif .)
    WHILE           reduce using rule 89 (elseif -> lif .)
    LLAVEDER        reduce using rule 89 (elseif -> lif .)
    COMA            reduce using rule 89 (elseif -> lif .)
    LLAVEIZQ        reduce using rule 89 (elseif -> lif .)
    MAS             reduce using rule 89 (elseif -> lif .)
    MENOS           reduce using rule 89 (elseif -> lif .)
    POR             reduce using rule 89 (elseif -> lif .)
    DIVIDIDO        reduce using rule 89 (elseif -> lif .)
    MODULO          reduce using rule 89 (elseif -> lif .)
    IGUALQUE        reduce using rule 89 (elseif -> lif .)
    NOIGUALQUE      reduce using rule 89 (elseif -> lif .)
    MENORQUE        reduce using rule 89 (elseif -> lif .)
    MAYORQUE        reduce using rule 89 (elseif -> lif .)
    MENORIQUE       reduce using rule 89 (elseif -> lif .)
    MAYORIQUE       reduce using rule 89 (elseif -> lif .)
    OR              reduce using rule 89 (elseif -> lif .)
    AND             reduce using rule 89 (elseif -> lif .)
    PTCOMA          reduce using rule 89 (elseif -> lif .)
    PARDER          reduce using rule 89 (elseif -> lif .)
    PTO             reduce using rule 89 (elseif -> lif .)
    IGUAL           reduce using rule 89 (elseif -> lif .)
    BARRAS          reduce using rule 89 (elseif -> lif .)


state 160

    (60) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 60 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 161

    (61) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 61 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 162

    (70) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 189
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 163

    (71) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 190
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 164

    (95) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 95 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 165

    (96) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (99) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (97) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (98) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (101) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (103) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (104) bloque_match_asig -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    GUIONB          shift and go to state 193
    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    dmatch_asig                    shift and go to state 191
    cmatch_asig                    shift and go to state 192
    expresion                      shift and go to state 135
    bloque_match_asig              shift and go to state 139
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 166

    (101) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 194


state 167

    (103) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 195
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 168

    (40) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 196


state 169

    (29) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 29 (imatch -> opmatch COMA dmatch .)


state 170

    (30) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 30 (opmatch -> opmatch COMA cmatch .)


state 171

    (31) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 31 (opmatch -> opmatch COMA rmatch .)


state 172

    (38) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (39) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 197


state 173

    (34) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 198
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 199
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 174

    (36) bloque_match -> bloque_match BARRAS expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 36 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 36 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 175

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 176

    (15) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 200
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 177

    (17) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 17 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 178

    (51) expresiones -> expresiones COMA . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 201
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 179

    (13) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 202


state 180

    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .

    LLAVEIZQ        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAS             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENOS           reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    POR             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    DIVIDIDO        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MODULO          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUALQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    NOIGUALQUE      reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORIQUE       reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORIQUE       reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    OR              reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    AND             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTCOMA          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PARDER          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    COMA            reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTO             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUAL           reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    BARRAS          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    LLAVEDER        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)


state 181

    (86) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .
    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif . else
    (88) elseif -> elseif . lif
    (27) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (91) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAS             reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENOS           reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    POR             reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    DIVIDIDO        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MODULO          reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUALQUE        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    NOIGUALQUE      reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORQUE        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORQUE        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORIQUE       reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORIQUE       reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    OR              reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    AND             reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTCOMA          reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PARDER          reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    COMA            reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTO             reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUAL           reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    BARRAS          reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    LLAVEDER        reduce using rule 86 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    ELSE            shift and go to state 204

    else                           shift and go to state 203
    lif                            shift and go to state 187

state 182

    (92) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 92 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 92 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 183

    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 184

    (24) lelseif -> lelseif elseif .
    (88) elseif -> elseif . lif
    (90) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 24 (lelseif -> lelseif elseif .)
    LET             reduce using rule 24 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 24 (lelseif -> lelseif elseif .)
    ID              reduce using rule 24 (lelseif -> lelseif elseif .)
    IF              reduce using rule 24 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 24 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 24 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 24 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 24 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 24 (lelseif -> lelseif elseif .)
    ELSE            shift and go to state 188

  ! ELSE            [ reduce using rule 24 (lelseif -> lelseif elseif .) ]

    lif                            shift and go to state 187

state 185

    (27) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (91) else -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 207
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    IF              shift and go to state 208
    MATCH           shift and go to state 209
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50

    instrucciones                  shift and go to state 205
    bloque_expresion               shift and go to state 206
    instruccion                    shift and go to state 4
    expresion                      shift and go to state 128
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 186

    (26) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (90) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 210
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 187

    (88) elseif -> elseif lif .

    ELSE            reduce using rule 88 (elseif -> elseif lif .)
    FN              reduce using rule 88 (elseif -> elseif lif .)
    LET             reduce using rule 88 (elseif -> elseif lif .)
    PRINTLN         reduce using rule 88 (elseif -> elseif lif .)
    ID              reduce using rule 88 (elseif -> elseif lif .)
    IF              reduce using rule 88 (elseif -> elseif lif .)
    MATCH           reduce using rule 88 (elseif -> elseif lif .)
    LOOP            reduce using rule 88 (elseif -> elseif lif .)
    WHILE           reduce using rule 88 (elseif -> elseif lif .)
    LLAVEDER        reduce using rule 88 (elseif -> elseif lif .)
    COMA            reduce using rule 88 (elseif -> elseif lif .)
    LLAVEIZQ        reduce using rule 88 (elseif -> elseif lif .)
    MAS             reduce using rule 88 (elseif -> elseif lif .)
    MENOS           reduce using rule 88 (elseif -> elseif lif .)
    POR             reduce using rule 88 (elseif -> elseif lif .)
    DIVIDIDO        reduce using rule 88 (elseif -> elseif lif .)
    MODULO          reduce using rule 88 (elseif -> elseif lif .)
    IGUALQUE        reduce using rule 88 (elseif -> elseif lif .)
    NOIGUALQUE      reduce using rule 88 (elseif -> elseif lif .)
    MENORQUE        reduce using rule 88 (elseif -> elseif lif .)
    MAYORQUE        reduce using rule 88 (elseif -> elseif lif .)
    MENORIQUE       reduce using rule 88 (elseif -> elseif lif .)
    MAYORIQUE       reduce using rule 88 (elseif -> elseif lif .)
    OR              reduce using rule 88 (elseif -> elseif lif .)
    AND             reduce using rule 88 (elseif -> elseif lif .)
    PTCOMA          reduce using rule 88 (elseif -> elseif lif .)
    PARDER          reduce using rule 88 (elseif -> elseif lif .)
    PTO             reduce using rule 88 (elseif -> elseif lif .)
    IGUAL           reduce using rule 88 (elseif -> elseif lif .)
    BARRAS          reduce using rule 88 (elseif -> elseif lif .)


state 188

    (90) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    IF              shift and go to state 211


state 189

    (70) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    COMA            shift and go to state 212
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 190

    (71) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    COMA            shift and go to state 213
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 191

    (96) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 96 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 192

    (99) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 99 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 193

    (97) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (98) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 214


state 194

    (101) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    LLAVEIZQ        shift and go to state 215
    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 216
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 195

    (103) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 103 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 103 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 196

    (40) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 217
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 197

    (38) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (39) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 218


state 198

    (34) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 219
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 199

    (35) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 35 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 200

    (15) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 15 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 201

    (51) expresiones -> expresiones COMA expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PARDER          reduce using rule 51 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 51 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 202

    (13) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 203

    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .

    LLAVEIZQ        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAS             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENOS           reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    POR             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    DIVIDIDO        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MODULO          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUALQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    NOIGUALQUE      reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORIQUE       reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORIQUE       reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    OR              reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    AND             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTCOMA          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PARDER          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    COMA            reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTO             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUAL           reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    BARRAS          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    LLAVEDER        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)


state 204

    (27) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (91) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (90) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 185
    IF              shift and go to state 211


state 205

    (27) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 220
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 206

    (91) else -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (92) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 221
    PTCOMA          shift and go to state 154


state 207

    (53) expresion -> ID .
    (19) asignacion -> ID . IGUAL expresion PTCOMA

    MAS             reduce using rule 53 (expresion -> ID .)
    MENOS           reduce using rule 53 (expresion -> ID .)
    POR             reduce using rule 53 (expresion -> ID .)
    DIVIDIDO        reduce using rule 53 (expresion -> ID .)
    MODULO          reduce using rule 53 (expresion -> ID .)
    IGUALQUE        reduce using rule 53 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 53 (expresion -> ID .)
    MENORQUE        reduce using rule 53 (expresion -> ID .)
    MAYORQUE        reduce using rule 53 (expresion -> ID .)
    MENORIQUE       reduce using rule 53 (expresion -> ID .)
    MAYORIQUE       reduce using rule 53 (expresion -> ID .)
    OR              reduce using rule 53 (expresion -> ID .)
    AND             reduce using rule 53 (expresion -> ID .)
    LLAVEDER        reduce using rule 53 (expresion -> ID .)
    PTCOMA          reduce using rule 53 (expresion -> ID .)
    IGUAL           shift and go to state 25


state 208

    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (84) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 222
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 209

    (28) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (95) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 223
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 210

    (26) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (90) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 224
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 211

    (90) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 225
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 212

    (70) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 226
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 213

    (71) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    tipo                           shift and go to state 40
    expresion                      shift and go to state 227
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 214

    (97) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (98) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 228


state 215

    (101) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    bloque_expresion               shift and go to state 229
    expresion                      shift and go to state 128
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 216

    (102) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    COMA            reduce using rule 102 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 217

    (40) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 230
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 218

    (38) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (39) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 231
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 232
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 219

    (34) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 233
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 220

    (27) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 27 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 221

    (91) else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    FN              reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LOOP            reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    WHILE           reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 91 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 222

    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (84) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 234
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 223

    (28) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (95) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 235
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 224

    (26) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (90) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 207
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    IF              shift and go to state 208
    MATCH           shift and go to state 209
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50

    expresion                      shift and go to state 128
    instrucciones                  shift and go to state 236
    bloque_expresion               shift and go to state 237
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 225

    (90) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 238
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 226

    (70) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PARDER          shift and go to state 239
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 227

    (71) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    PARDER          shift and go to state 240
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 228

    (97) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (98) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    LLAVEIZQ        shift and go to state 241
    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 242
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 229

    (101) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (92) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 243
    PTCOMA          shift and go to state 154


state 230

    (40) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 244


state 231

    (38) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 245
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 232

    (39) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 39 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 233

    (34) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 34 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 234

    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (23) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (84) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (85) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (86) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (87) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 207
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    IF              shift and go to state 208
    MATCH           shift and go to state 209
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50

    expresion                      shift and go to state 128
    instrucciones                  shift and go to state 94
    bloque_expresion               shift and go to state 129
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 235

    (28) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (95) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (29) imatch -> . opmatch COMA dmatch
    (96) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (30) opmatch -> . opmatch COMA cmatch
    (31) opmatch -> . opmatch COMA rmatch
    (32) opmatch -> . cmatch
    (33) opmatch -> . rmatch
    (99) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (100) opmatch_asig -> . cmatch_asig
    (34) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (35) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (40) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (101) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (102) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (36) bloque_match -> . bloque_match BARRAS expresion
    (37) bloque_match -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (103) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (104) bloque_match_asig -> . expresion
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 246
    imatch                         shift and go to state 114
    imatch_asig                    shift and go to state 136
    opmatch                        shift and go to state 115
    opmatch_asig                   shift and go to state 137
    cmatch                         shift and go to state 116
    rmatch                         shift and go to state 117
    cmatch_asig                    shift and go to state 138
    bloque_match                   shift and go to state 118
    bloque_match_asig              shift and go to state 139
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 236

    (26) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 247
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 237

    (90) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (92) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 248
    PTCOMA          shift and go to state 154


state 238

    (90) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    expresion                      shift and go to state 128
    bloque_expresion               shift and go to state 237
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 239

    (70) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 70 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 240

    (71) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 71 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 241

    (97) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (92) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (93) bloque_expresion -> . expresion
    (53) expresion -> . ID
    (54) expresion -> . ENTERO
    (55) expresion -> . DECIMAL
    (56) expresion -> . TRUE
    (57) expresion -> . FALSE
    (58) expresion -> . tostring
    (59) expresion -> . toowned
    (62) expresion -> . STR
    (63) expresion -> . CADENA
    (64) expresion -> . CARACTER
    (65) expresion -> . expresion MAS expresion
    (66) expresion -> . expresion MENOS expresion
    (67) expresion -> . expresion POR expresion
    (68) expresion -> . expresion DIVIDIDO expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (71) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (72) expresion -> . expresion IGUALQUE expresion
    (73) expresion -> . expresion NOIGUALQUE expresion
    (74) expresion -> . expresion MENORQUE expresion
    (75) expresion -> . expresion MAYORQUE expresion
    (76) expresion -> . expresion MENORIQUE expresion
    (77) expresion -> . expresion MAYORIQUE expresion
    (78) expresion -> . expresion OR expresion
    (79) expresion -> . expresion AND expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . NOT expresion
    (82) expresion -> . PARIZQ expresion PARDER
    (83) expresion -> . if_asig
    (94) expresion -> . match_asig
    (60) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (61) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (45) tipo -> . I64
    (46) tipo -> . F64
    (47) tipo -> . BOOL
    (48) tipo -> . CHAR
    (49) tipo -> . STRING
    (50) tipo -> . SIGNOI STR
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (86) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (95) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    STR             shift and go to state 36
    CADENA          shift and go to state 37
    CARACTER        shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 42
    PARIZQ          shift and go to state 41
    I64             shift and go to state 45
    F64             shift and go to state 46
    BOOL            shift and go to state 47
    CHAR            shift and go to state 48
    STRING          shift and go to state 49
    SIGNOI          shift and go to state 50
    IF              shift and go to state 27
    MATCH           shift and go to state 51

    bloque_expresion               shift and go to state 249
    expresion                      shift and go to state 128
    tostring                       shift and go to state 34
    toowned                        shift and go to state 35
    tipo                           shift and go to state 40
    if_asig                        shift and go to state 43
    match_asig                     shift and go to state 44

state 242

    (98) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 98 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75


state 243

    (101) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 101 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 244

    (40) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (41) rrmatch -> . instruccion
    (42) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 252
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    rrmatch                        shift and go to state 250
    instruccion                    shift and go to state 251
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 245

    (38) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 253
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 246

    (40) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (37) bloque_match -> expresion .
    (65) expresion -> expresion . MAS expresion
    (66) expresion -> expresion . MENOS expresion
    (67) expresion -> expresion . POR expresion
    (68) expresion -> expresion . DIVIDIDO expresion
    (69) expresion -> expresion . MODULO expresion
    (72) expresion -> expresion . IGUALQUE expresion
    (73) expresion -> expresion . NOIGUALQUE expresion
    (74) expresion -> expresion . MENORQUE expresion
    (75) expresion -> expresion . MAYORQUE expresion
    (76) expresion -> expresion . MENORIQUE expresion
    (77) expresion -> expresion . MAYORIQUE expresion
    (78) expresion -> expresion . OR expresion
    (79) expresion -> expresion . AND expresion
    (104) bloque_match_asig -> expresion .

  ! reduce/reduce conflict for IGUAL resolved using rule 37 (bloque_match -> expresion .)
  ! reduce/reduce conflict for BARRAS resolved using rule 37 (bloque_match -> expresion .)
    PTO             shift and go to state 140
    IGUAL           reduce using rule 37 (bloque_match -> expresion .)
    BARRAS          reduce using rule 37 (bloque_match -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    MODULO          shift and go to state 67
    IGUALQUE        shift and go to state 68
    NOIGUALQUE      shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORIQUE       shift and go to state 72
    MAYORIQUE       shift and go to state 73
    OR              shift and go to state 74
    AND             shift and go to state 75

  ! IGUAL           [ reduce using rule 104 (bloque_match_asig -> expresion .) ]
  ! BARRAS          [ reduce using rule 104 (bloque_match_asig -> expresion .) ]


state 247

    (26) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 26 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 248

    (90) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    FN              reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LOOP            reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    WHILE           reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 90 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 249

    (97) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (92) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 254
    PTCOMA          shift and go to state 154


state 250

    (40) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 40 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 251

    (41) rrmatch -> instruccion .

    COMA            reduce using rule 41 (rrmatch -> instruccion .)


state 252

    (42) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instrucciones                  shift and go to state 255
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 253

    (38) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 38 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 254

    (97) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 97 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 255

    (42) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (15) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID IGUAL expresion PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (19) asignacion -> . ID IGUAL expresion PTCOMA
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (28) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (43) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (44) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 256
    LET             shift and go to state 13
    PRINTLN         shift and go to state 15
    ID              shift and go to state 14
    IF              shift and go to state 16
    MATCH           shift and go to state 17
    LOOP            shift and go to state 18
    WHILE           shift and go to state 19

    instruccion                    shift and go to state 21
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12

state 256

    (42) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 42 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 37 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 158 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 246 resolved using rule (bloque_match -> expresion)
WARNING: rejected rule (bloque_match_asig -> expresion) in state 246
