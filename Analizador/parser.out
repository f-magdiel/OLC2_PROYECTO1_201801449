Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    instruccion -> match
Rule 11    instruccion -> loop
Rule 12    instruccion -> while
Rule 13    instruccion -> break
Rule 14    instruccion -> continue
Rule 15    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 16    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 17    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 18    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 19    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 20    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 21    asignacion -> ID IGUAL expresion PTCOMA
Rule 22    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 23    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 24    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 25    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 26    lelseif -> lelseif elseif
Rule 27    lelseif -> elseif
Rule 28    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 29    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 30    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 31    imatch -> opmatch COMA dmatch
Rule 32    opmatch -> opmatch COMA cmatch
Rule 33    opmatch -> opmatch COMA rmatch
Rule 34    opmatch -> cmatch
Rule 35    opmatch -> rmatch
Rule 36    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 37    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 38    bloque_match -> bloque_match BARRAS expresion
Rule 39    bloque_match -> expresion
Rule 40    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 41    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 42    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 43    rrmatch -> instruccion
Rule 44    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 45    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 46    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 47    break -> BREAK PTCOMA
Rule 48    break -> BREAK expresion PTCOMA
Rule 49    continue -> CONTINUE PTCOMA
Rule 50    tipo -> I64
Rule 51    tipo -> F64
Rule 52    tipo -> BOOL
Rule 53    tipo -> CHAR
Rule 54    tipo -> STRING
Rule 55    tipo -> SIGNOI STR
Rule 56    expresiones -> expresiones COMA expresion
Rule 57    expresiones -> expresion
Rule 58    expresion -> ID
Rule 59    expresion -> ENTERO
Rule 60    expresion -> DECIMAL
Rule 61    expresion -> TRUE
Rule 62    expresion -> FALSE
Rule 63    expresion -> tostring
Rule 64    expresion -> toowned
Rule 65    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 66    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 67    expresion -> STR
Rule 68    expresion -> CADENA
Rule 69    expresion -> CARACTER
Rule 70    expresion -> expresion MAS expresion
Rule 71    expresion -> expresion MENOS expresion
Rule 72    expresion -> expresion POR expresion
Rule 73    expresion -> expresion DIVIDIDO expresion
Rule 74    expresion -> expresion MODULO expresion
Rule 75    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 76    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 77    expresion -> expresion IGUALQUE expresion
Rule 78    expresion -> expresion NOIGUALQUE expresion
Rule 79    expresion -> expresion MENORQUE expresion
Rule 80    expresion -> expresion MAYORQUE expresion
Rule 81    expresion -> expresion MENORIQUE expresion
Rule 82    expresion -> expresion MAYORIQUE expresion
Rule 83    expresion -> expresion OR expresion
Rule 84    expresion -> expresion AND expresion
Rule 85    expresion -> MENOS expresion
Rule 86    expresion -> NOT expresion
Rule 87    expresion -> PARIZQ expresion PARDER
Rule 88    expresion -> if_asig
Rule 89    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 90    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 91    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 92    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 93    elseifa -> elseifa lif
Rule 94    elseifa -> lif
Rule 95    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 96    elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 97    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 98    bloque_expresion -> expresion
Rule 99    expresion -> match_asig
Rule 100   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 101   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 102   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 103   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 104   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 105   opmatch_asig -> cmatch_asig
Rule 106   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 107   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 108   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 109   bloque_match_asig -> expresion
Rule 110   expresion -> loop_asig
Rule 111   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 84
AS                   : 
BARRAS               : 38 108
BOOL                 : 52
BREAK                : 47 48
CADENA               : 65 66 68
CARACTER             : 69
CHAR                 : 53
COMA                 : 15 31 32 33 56 75 76 101 104
CONTINUE             : 49
DECIMAL              : 60
DIVIDIDO             : 73
DOSPT                : 17 19 75 75 76 76
ELSE                 : 28 29 95 96
ENTERO               : 59
F64                  : 51
FALSE                : 62
FN                   : 3
GUIONB               : 40 41 102 103
I64                  : 50
ID                   : 17 18 19 20 21 58
IF                   : 22 23 24 25 28 89 90 91 92 95
IGUAL                : 17 18 19 20 21 36 37 40 41 42 42 102 103 106 107
IGUALQUE             : 77
LET                  : 17 18 19 20
LLAVEDER             : 3 22 23 24 25 28 29 30 36 40 44 45 46 89 90 91 92 95 96 100 102 106 111
LLAVEIZQ             : 3 22 23 24 25 28 29 30 36 40 44 45 46 89 90 91 92 95 96 100 102 106 111
LOOP                 : 45 111
MAIN                 : 3
MAS                  : 70
MATCH                : 30 100
MAYORIQUE            : 82
MAYORQUE             : 36 37 40 41 42 80 102 103 106 107
MENORIQUE            : 81
MENORQUE             : 79
MENOS                : 71 85
MODULO               : 74
MUT                  : 17 18
NOIGUALQUE           : 78
NOT                  : 15 16 86
OR                   : 83
PARDER               : 3 15 16 65 66 75 76 87
PARIZQ               : 3 15 16 65 66 75 76 87
POR                  : 72
POW                  : 75
POWF                 : 76
PRINTLN              : 15 16
PTCOMA               : 15 16 17 18 19 20 21 47 48 49 97
PTO                  : 42 42 65 66
SIGNOI               : 55
STR                  : 55 67
STRING               : 54
TOOWNED              : 66
TOSTRING             : 65
TRUE                 : 61
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 89 90 91 92 95 96 97 102 106
bloque_match         : 36 37 38
bloque_match_asig    : 106 107 108
break                : 13
cmatch               : 32 34
cmatch_asig          : 104 105
continue             : 14
declaracion          : 6
dmatch               : 31
dmatch_asig          : 101
else                 : 23 25
elsea                : 90 92
elseif               : 26 27
elseifa              : 91 92 93
expresion            : 15 16 17 18 19 20 21 22 23 24 25 28 30 38 39 42 42 46 48 56 57 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 86 87 89 90 91 92 95 97 98 100 103 107 108 109
expresiones          : 15 56
if                   : 9
if_asig              : 88
imatch               : 30
imatch_asig          : 100
imprimir             : 7
inicio               : 0
instruccion          : 4 5 37 41 43
instrucciones        : 1 3 4 22 23 24 25 28 29 36 40 44 45 46 111
lelseif              : 24 25 26
lif                  : 93 94
loop                 : 11
loop_asig            : 110
main                 : 1 2
match                : 10
match_asig           : 99
opmatch              : 31 32 33
opmatch_asig         : 101 104
rmatch               : 33 35
rrmatch              : 42
tipo                 : 17 19 75 76
toowned              : 64
tostring             : 63
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    main                           shift and go to state 24
    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    MATCH           reduce using rule 5 (instrucciones -> instruccion .)
    LOOP            reduce using rule 5 (instrucciones -> instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instruccion .)
    BREAK           reduce using rule 5 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 26


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    MATCH           reduce using rule 6 (instruccion -> declaracion .)
    LOOP            reduce using rule 6 (instruccion -> declaracion .)
    WHILE           reduce using rule 6 (instruccion -> declaracion .)
    BREAK           reduce using rule 6 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)
    COMA            reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    MATCH           reduce using rule 7 (instruccion -> imprimir .)
    LOOP            reduce using rule 7 (instruccion -> imprimir .)
    WHILE           reduce using rule 7 (instruccion -> imprimir .)
    BREAK           reduce using rule 7 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)
    COMA            reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    MATCH           reduce using rule 8 (instruccion -> asignacion .)
    LOOP            reduce using rule 8 (instruccion -> asignacion .)
    WHILE           reduce using rule 8 (instruccion -> asignacion .)
    BREAK           reduce using rule 8 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)
    COMA            reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    MATCH           reduce using rule 9 (instruccion -> if .)
    LOOP            reduce using rule 9 (instruccion -> if .)
    WHILE           reduce using rule 9 (instruccion -> if .)
    BREAK           reduce using rule 9 (instruccion -> if .)
    CONTINUE        reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)
    COMA            reduce using rule 9 (instruccion -> if .)


state 10

    (10) instruccion -> match .

    FN              reduce using rule 10 (instruccion -> match .)
    LET             reduce using rule 10 (instruccion -> match .)
    PRINTLN         reduce using rule 10 (instruccion -> match .)
    ID              reduce using rule 10 (instruccion -> match .)
    IF              reduce using rule 10 (instruccion -> match .)
    MATCH           reduce using rule 10 (instruccion -> match .)
    LOOP            reduce using rule 10 (instruccion -> match .)
    WHILE           reduce using rule 10 (instruccion -> match .)
    BREAK           reduce using rule 10 (instruccion -> match .)
    CONTINUE        reduce using rule 10 (instruccion -> match .)
    LLAVEDER        reduce using rule 10 (instruccion -> match .)
    COMA            reduce using rule 10 (instruccion -> match .)


state 11

    (11) instruccion -> loop .

    FN              reduce using rule 11 (instruccion -> loop .)
    LET             reduce using rule 11 (instruccion -> loop .)
    PRINTLN         reduce using rule 11 (instruccion -> loop .)
    ID              reduce using rule 11 (instruccion -> loop .)
    IF              reduce using rule 11 (instruccion -> loop .)
    MATCH           reduce using rule 11 (instruccion -> loop .)
    LOOP            reduce using rule 11 (instruccion -> loop .)
    WHILE           reduce using rule 11 (instruccion -> loop .)
    BREAK           reduce using rule 11 (instruccion -> loop .)
    CONTINUE        reduce using rule 11 (instruccion -> loop .)
    LLAVEDER        reduce using rule 11 (instruccion -> loop .)
    COMA            reduce using rule 11 (instruccion -> loop .)


state 12

    (12) instruccion -> while .

    FN              reduce using rule 12 (instruccion -> while .)
    LET             reduce using rule 12 (instruccion -> while .)
    PRINTLN         reduce using rule 12 (instruccion -> while .)
    ID              reduce using rule 12 (instruccion -> while .)
    IF              reduce using rule 12 (instruccion -> while .)
    MATCH           reduce using rule 12 (instruccion -> while .)
    LOOP            reduce using rule 12 (instruccion -> while .)
    WHILE           reduce using rule 12 (instruccion -> while .)
    BREAK           reduce using rule 12 (instruccion -> while .)
    CONTINUE        reduce using rule 12 (instruccion -> while .)
    LLAVEDER        reduce using rule 12 (instruccion -> while .)
    COMA            reduce using rule 12 (instruccion -> while .)


state 13

    (13) instruccion -> break .

    FN              reduce using rule 13 (instruccion -> break .)
    LET             reduce using rule 13 (instruccion -> break .)
    PRINTLN         reduce using rule 13 (instruccion -> break .)
    ID              reduce using rule 13 (instruccion -> break .)
    IF              reduce using rule 13 (instruccion -> break .)
    MATCH           reduce using rule 13 (instruccion -> break .)
    LOOP            reduce using rule 13 (instruccion -> break .)
    WHILE           reduce using rule 13 (instruccion -> break .)
    BREAK           reduce using rule 13 (instruccion -> break .)
    CONTINUE        reduce using rule 13 (instruccion -> break .)
    LLAVEDER        reduce using rule 13 (instruccion -> break .)
    COMA            reduce using rule 13 (instruccion -> break .)


state 14

    (14) instruccion -> continue .

    FN              reduce using rule 14 (instruccion -> continue .)
    LET             reduce using rule 14 (instruccion -> continue .)
    PRINTLN         reduce using rule 14 (instruccion -> continue .)
    ID              reduce using rule 14 (instruccion -> continue .)
    IF              reduce using rule 14 (instruccion -> continue .)
    MATCH           reduce using rule 14 (instruccion -> continue .)
    LOOP            reduce using rule 14 (instruccion -> continue .)
    WHILE           reduce using rule 14 (instruccion -> continue .)
    BREAK           reduce using rule 14 (instruccion -> continue .)
    CONTINUE        reduce using rule 14 (instruccion -> continue .)
    LLAVEDER        reduce using rule 14 (instruccion -> continue .)
    COMA            reduce using rule 14 (instruccion -> continue .)


state 15

    (17) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 27
    ID              shift and go to state 28


state 16

    (21) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 29


state 17

    (15) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 30


state 18

    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 32
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 19

    (30) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 58
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 20

    (45) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 59


state 21

    (46) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 60
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 22

    (47) break -> BREAK . PTCOMA
    (48) break -> BREAK . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 61
    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 62
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 23

    (49) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 63


state 24

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 25

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 26

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 64


state 27

    (17) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 65


state 28

    (19) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 66
    IGUAL           shift and go to state 67


state 29

    (21) asignacion -> ID IGUAL . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 68
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 30

    (15) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 69


state 31

    (89) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 70
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 32

    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (23) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 71
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 33

    (58) expresion -> ID .

    LLAVEIZQ        reduce using rule 58 (expresion -> ID .)
    MAS             reduce using rule 58 (expresion -> ID .)
    MENOS           reduce using rule 58 (expresion -> ID .)
    POR             reduce using rule 58 (expresion -> ID .)
    DIVIDIDO        reduce using rule 58 (expresion -> ID .)
    MODULO          reduce using rule 58 (expresion -> ID .)
    IGUALQUE        reduce using rule 58 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 58 (expresion -> ID .)
    MENORQUE        reduce using rule 58 (expresion -> ID .)
    MAYORQUE        reduce using rule 58 (expresion -> ID .)
    MENORIQUE       reduce using rule 58 (expresion -> ID .)
    MAYORIQUE       reduce using rule 58 (expresion -> ID .)
    OR              reduce using rule 58 (expresion -> ID .)
    AND             reduce using rule 58 (expresion -> ID .)
    PTCOMA          reduce using rule 58 (expresion -> ID .)
    PARDER          reduce using rule 58 (expresion -> ID .)
    COMA            reduce using rule 58 (expresion -> ID .)
    PTO             reduce using rule 58 (expresion -> ID .)
    IGUAL           reduce using rule 58 (expresion -> ID .)
    BARRAS          reduce using rule 58 (expresion -> ID .)
    LLAVEDER        reduce using rule 58 (expresion -> ID .)


state 34

    (59) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 59 (expresion -> ENTERO .)
    MAS             reduce using rule 59 (expresion -> ENTERO .)
    MENOS           reduce using rule 59 (expresion -> ENTERO .)
    POR             reduce using rule 59 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 59 (expresion -> ENTERO .)
    MODULO          reduce using rule 59 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 59 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 59 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 59 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 59 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 59 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 59 (expresion -> ENTERO .)
    OR              reduce using rule 59 (expresion -> ENTERO .)
    AND             reduce using rule 59 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 59 (expresion -> ENTERO .)
    PARDER          reduce using rule 59 (expresion -> ENTERO .)
    COMA            reduce using rule 59 (expresion -> ENTERO .)
    PTO             reduce using rule 59 (expresion -> ENTERO .)
    IGUAL           reduce using rule 59 (expresion -> ENTERO .)
    BARRAS          reduce using rule 59 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 59 (expresion -> ENTERO .)


state 35

    (60) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 60 (expresion -> DECIMAL .)
    MAS             reduce using rule 60 (expresion -> DECIMAL .)
    MENOS           reduce using rule 60 (expresion -> DECIMAL .)
    POR             reduce using rule 60 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 60 (expresion -> DECIMAL .)
    MODULO          reduce using rule 60 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 60 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 60 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 60 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 60 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 60 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 60 (expresion -> DECIMAL .)
    OR              reduce using rule 60 (expresion -> DECIMAL .)
    AND             reduce using rule 60 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 60 (expresion -> DECIMAL .)
    PARDER          reduce using rule 60 (expresion -> DECIMAL .)
    COMA            reduce using rule 60 (expresion -> DECIMAL .)
    PTO             reduce using rule 60 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 60 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 60 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 60 (expresion -> DECIMAL .)


state 36

    (61) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 61 (expresion -> TRUE .)
    MAS             reduce using rule 61 (expresion -> TRUE .)
    MENOS           reduce using rule 61 (expresion -> TRUE .)
    POR             reduce using rule 61 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 61 (expresion -> TRUE .)
    MODULO          reduce using rule 61 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 61 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 61 (expresion -> TRUE .)
    MENORQUE        reduce using rule 61 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 61 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 61 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 61 (expresion -> TRUE .)
    OR              reduce using rule 61 (expresion -> TRUE .)
    AND             reduce using rule 61 (expresion -> TRUE .)
    PTCOMA          reduce using rule 61 (expresion -> TRUE .)
    PARDER          reduce using rule 61 (expresion -> TRUE .)
    COMA            reduce using rule 61 (expresion -> TRUE .)
    PTO             reduce using rule 61 (expresion -> TRUE .)
    IGUAL           reduce using rule 61 (expresion -> TRUE .)
    BARRAS          reduce using rule 61 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 61 (expresion -> TRUE .)


state 37

    (62) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 62 (expresion -> FALSE .)
    MAS             reduce using rule 62 (expresion -> FALSE .)
    MENOS           reduce using rule 62 (expresion -> FALSE .)
    POR             reduce using rule 62 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 62 (expresion -> FALSE .)
    MODULO          reduce using rule 62 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 62 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 62 (expresion -> FALSE .)
    MENORQUE        reduce using rule 62 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 62 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 62 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 62 (expresion -> FALSE .)
    OR              reduce using rule 62 (expresion -> FALSE .)
    AND             reduce using rule 62 (expresion -> FALSE .)
    PTCOMA          reduce using rule 62 (expresion -> FALSE .)
    PARDER          reduce using rule 62 (expresion -> FALSE .)
    COMA            reduce using rule 62 (expresion -> FALSE .)
    PTO             reduce using rule 62 (expresion -> FALSE .)
    IGUAL           reduce using rule 62 (expresion -> FALSE .)
    BARRAS          reduce using rule 62 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 62 (expresion -> FALSE .)


state 38

    (63) expresion -> tostring .

    LLAVEIZQ        reduce using rule 63 (expresion -> tostring .)
    MAS             reduce using rule 63 (expresion -> tostring .)
    MENOS           reduce using rule 63 (expresion -> tostring .)
    POR             reduce using rule 63 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 63 (expresion -> tostring .)
    MODULO          reduce using rule 63 (expresion -> tostring .)
    IGUALQUE        reduce using rule 63 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 63 (expresion -> tostring .)
    MENORQUE        reduce using rule 63 (expresion -> tostring .)
    MAYORQUE        reduce using rule 63 (expresion -> tostring .)
    MENORIQUE       reduce using rule 63 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 63 (expresion -> tostring .)
    OR              reduce using rule 63 (expresion -> tostring .)
    AND             reduce using rule 63 (expresion -> tostring .)
    PTCOMA          reduce using rule 63 (expresion -> tostring .)
    PARDER          reduce using rule 63 (expresion -> tostring .)
    COMA            reduce using rule 63 (expresion -> tostring .)
    PTO             reduce using rule 63 (expresion -> tostring .)
    IGUAL           reduce using rule 63 (expresion -> tostring .)
    BARRAS          reduce using rule 63 (expresion -> tostring .)
    LLAVEDER        reduce using rule 63 (expresion -> tostring .)


state 39

    (64) expresion -> toowned .

    LLAVEIZQ        reduce using rule 64 (expresion -> toowned .)
    MAS             reduce using rule 64 (expresion -> toowned .)
    MENOS           reduce using rule 64 (expresion -> toowned .)
    POR             reduce using rule 64 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 64 (expresion -> toowned .)
    MODULO          reduce using rule 64 (expresion -> toowned .)
    IGUALQUE        reduce using rule 64 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 64 (expresion -> toowned .)
    MENORQUE        reduce using rule 64 (expresion -> toowned .)
    MAYORQUE        reduce using rule 64 (expresion -> toowned .)
    MENORIQUE       reduce using rule 64 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 64 (expresion -> toowned .)
    OR              reduce using rule 64 (expresion -> toowned .)
    AND             reduce using rule 64 (expresion -> toowned .)
    PTCOMA          reduce using rule 64 (expresion -> toowned .)
    PARDER          reduce using rule 64 (expresion -> toowned .)
    COMA            reduce using rule 64 (expresion -> toowned .)
    PTO             reduce using rule 64 (expresion -> toowned .)
    IGUAL           reduce using rule 64 (expresion -> toowned .)
    BARRAS          reduce using rule 64 (expresion -> toowned .)
    LLAVEDER        reduce using rule 64 (expresion -> toowned .)


state 40

    (67) expresion -> STR .

    LLAVEIZQ        reduce using rule 67 (expresion -> STR .)
    MAS             reduce using rule 67 (expresion -> STR .)
    MENOS           reduce using rule 67 (expresion -> STR .)
    POR             reduce using rule 67 (expresion -> STR .)
    DIVIDIDO        reduce using rule 67 (expresion -> STR .)
    MODULO          reduce using rule 67 (expresion -> STR .)
    IGUALQUE        reduce using rule 67 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 67 (expresion -> STR .)
    MENORQUE        reduce using rule 67 (expresion -> STR .)
    MAYORQUE        reduce using rule 67 (expresion -> STR .)
    MENORIQUE       reduce using rule 67 (expresion -> STR .)
    MAYORIQUE       reduce using rule 67 (expresion -> STR .)
    OR              reduce using rule 67 (expresion -> STR .)
    AND             reduce using rule 67 (expresion -> STR .)
    PTCOMA          reduce using rule 67 (expresion -> STR .)
    PARDER          reduce using rule 67 (expresion -> STR .)
    COMA            reduce using rule 67 (expresion -> STR .)
    PTO             reduce using rule 67 (expresion -> STR .)
    IGUAL           reduce using rule 67 (expresion -> STR .)
    BARRAS          reduce using rule 67 (expresion -> STR .)
    LLAVEDER        reduce using rule 67 (expresion -> STR .)


state 41

    (68) expresion -> CADENA .
    (65) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (66) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 68 (expresion -> CADENA .)
    MAS             reduce using rule 68 (expresion -> CADENA .)
    MENOS           reduce using rule 68 (expresion -> CADENA .)
    POR             reduce using rule 68 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 68 (expresion -> CADENA .)
    MODULO          reduce using rule 68 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 68 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 68 (expresion -> CADENA .)
    MENORQUE        reduce using rule 68 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 68 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 68 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 68 (expresion -> CADENA .)
    OR              reduce using rule 68 (expresion -> CADENA .)
    AND             reduce using rule 68 (expresion -> CADENA .)
    PTCOMA          reduce using rule 68 (expresion -> CADENA .)
    PARDER          reduce using rule 68 (expresion -> CADENA .)
    COMA            reduce using rule 68 (expresion -> CADENA .)
    IGUAL           reduce using rule 68 (expresion -> CADENA .)
    BARRAS          reduce using rule 68 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 68 (expresion -> CADENA .)
    PTO             shift and go to state 85

  ! PTO             [ reduce using rule 68 (expresion -> CADENA .) ]


state 42

    (69) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 69 (expresion -> CARACTER .)
    MAS             reduce using rule 69 (expresion -> CARACTER .)
    MENOS           reduce using rule 69 (expresion -> CARACTER .)
    POR             reduce using rule 69 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 69 (expresion -> CARACTER .)
    MODULO          reduce using rule 69 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 69 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 69 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 69 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 69 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 69 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 69 (expresion -> CARACTER .)
    OR              reduce using rule 69 (expresion -> CARACTER .)
    AND             reduce using rule 69 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 69 (expresion -> CARACTER .)
    PARDER          reduce using rule 69 (expresion -> CARACTER .)
    COMA            reduce using rule 69 (expresion -> CARACTER .)
    PTO             reduce using rule 69 (expresion -> CARACTER .)
    IGUAL           reduce using rule 69 (expresion -> CARACTER .)
    BARRAS          reduce using rule 69 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 69 (expresion -> CARACTER .)


state 43

    (85) expresion -> MENOS . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 86
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 44

    (75) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 87


state 45

    (87) expresion -> PARIZQ . expresion PARDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 88
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 46

    (86) expresion -> NOT . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 89
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 47

    (88) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 88 (expresion -> if_asig .)
    MAS             reduce using rule 88 (expresion -> if_asig .)
    MENOS           reduce using rule 88 (expresion -> if_asig .)
    POR             reduce using rule 88 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 88 (expresion -> if_asig .)
    MODULO          reduce using rule 88 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 88 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 88 (expresion -> if_asig .)
    MENORQUE        reduce using rule 88 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 88 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 88 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 88 (expresion -> if_asig .)
    OR              reduce using rule 88 (expresion -> if_asig .)
    AND             reduce using rule 88 (expresion -> if_asig .)
    PTCOMA          reduce using rule 88 (expresion -> if_asig .)
    PARDER          reduce using rule 88 (expresion -> if_asig .)
    COMA            reduce using rule 88 (expresion -> if_asig .)
    PTO             reduce using rule 88 (expresion -> if_asig .)
    IGUAL           reduce using rule 88 (expresion -> if_asig .)
    BARRAS          reduce using rule 88 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 88 (expresion -> if_asig .)


state 48

    (99) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 99 (expresion -> match_asig .)
    MAS             reduce using rule 99 (expresion -> match_asig .)
    MENOS           reduce using rule 99 (expresion -> match_asig .)
    POR             reduce using rule 99 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 99 (expresion -> match_asig .)
    MODULO          reduce using rule 99 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 99 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 99 (expresion -> match_asig .)
    MENORQUE        reduce using rule 99 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 99 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 99 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 99 (expresion -> match_asig .)
    OR              reduce using rule 99 (expresion -> match_asig .)
    AND             reduce using rule 99 (expresion -> match_asig .)
    PTCOMA          reduce using rule 99 (expresion -> match_asig .)
    PARDER          reduce using rule 99 (expresion -> match_asig .)
    COMA            reduce using rule 99 (expresion -> match_asig .)
    PTO             reduce using rule 99 (expresion -> match_asig .)
    IGUAL           reduce using rule 99 (expresion -> match_asig .)
    BARRAS          reduce using rule 99 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 99 (expresion -> match_asig .)


state 49

    (110) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 110 (expresion -> loop_asig .)
    MAS             reduce using rule 110 (expresion -> loop_asig .)
    MENOS           reduce using rule 110 (expresion -> loop_asig .)
    POR             reduce using rule 110 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 110 (expresion -> loop_asig .)
    MODULO          reduce using rule 110 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 110 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 110 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 110 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 110 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 110 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 110 (expresion -> loop_asig .)
    OR              reduce using rule 110 (expresion -> loop_asig .)
    AND             reduce using rule 110 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 110 (expresion -> loop_asig .)
    PARDER          reduce using rule 110 (expresion -> loop_asig .)
    COMA            reduce using rule 110 (expresion -> loop_asig .)
    PTO             reduce using rule 110 (expresion -> loop_asig .)
    IGUAL           reduce using rule 110 (expresion -> loop_asig .)
    BARRAS          reduce using rule 110 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 110 (expresion -> loop_asig .)


state 50

    (50) tipo -> I64 .

    DOSPT           reduce using rule 50 (tipo -> I64 .)
    IGUAL           reduce using rule 50 (tipo -> I64 .)


state 51

    (51) tipo -> F64 .

    DOSPT           reduce using rule 51 (tipo -> F64 .)
    IGUAL           reduce using rule 51 (tipo -> F64 .)


state 52

    (52) tipo -> BOOL .

    DOSPT           reduce using rule 52 (tipo -> BOOL .)
    IGUAL           reduce using rule 52 (tipo -> BOOL .)


state 53

    (53) tipo -> CHAR .

    DOSPT           reduce using rule 53 (tipo -> CHAR .)
    IGUAL           reduce using rule 53 (tipo -> CHAR .)


state 54

    (54) tipo -> STRING .

    DOSPT           reduce using rule 54 (tipo -> STRING .)
    IGUAL           reduce using rule 54 (tipo -> STRING .)


state 55

    (55) tipo -> SIGNOI . STR

    STR             shift and go to state 90


state 56

    (100) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 91
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 57

    (111) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 92


state 58

    (30) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 93
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 59

    (45) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 94
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 60

    (46) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 95
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 61

    (47) break -> BREAK PTCOMA .

    FN              reduce using rule 47 (break -> BREAK PTCOMA .)
    LET             reduce using rule 47 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 47 (break -> BREAK PTCOMA .)
    ID              reduce using rule 47 (break -> BREAK PTCOMA .)
    IF              reduce using rule 47 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 47 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 47 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 47 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 47 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 47 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 47 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 47 (break -> BREAK PTCOMA .)


state 62

    (48) break -> BREAK expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 96
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 63

    (49) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 49 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 49 (continue -> CONTINUE PTCOMA .)


state 64

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 97


state 65

    (17) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 98
    IGUAL           shift and go to state 99


state 66

    (19) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR

    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55

    tipo                           shift and go to state 100

state 67

    (20) declaracion -> LET ID IGUAL . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 101
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 68

    (21) asignacion -> ID IGUAL expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 102
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 69

    (15) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 103
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 70

    (89) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 104
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 71

    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (23) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (24) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (25) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 105
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 72

    (70) expresion -> expresion MAS . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 106
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 73

    (71) expresion -> expresion MENOS . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 107
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 74

    (72) expresion -> expresion POR . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 108
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 75

    (73) expresion -> expresion DIVIDIDO . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 109
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 76

    (74) expresion -> expresion MODULO . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 110
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 77

    (77) expresion -> expresion IGUALQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 111
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 78

    (78) expresion -> expresion NOIGUALQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 112
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 79

    (79) expresion -> expresion MENORQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 113
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 80

    (80) expresion -> expresion MAYORQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 114
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 81

    (81) expresion -> expresion MENORIQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 115
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 82

    (82) expresion -> expresion MAYORIQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 116
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 83

    (83) expresion -> expresion OR . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 117
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 84

    (84) expresion -> expresion AND . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 118
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 85

    (65) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (66) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 119
    TOOWNED         shift and go to state 120


state 86

    (85) expresion -> MENOS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 85 (expresion -> MENOS expresion .)
    MAS             reduce using rule 85 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 85 (expresion -> MENOS expresion .)
    POR             reduce using rule 85 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 85 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 85 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 85 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 85 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 85 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 85 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 85 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 85 (expresion -> MENOS expresion .)
    OR              reduce using rule 85 (expresion -> MENOS expresion .)
    AND             reduce using rule 85 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 85 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 85 (expresion -> MENOS expresion .)
    COMA            reduce using rule 85 (expresion -> MENOS expresion .)
    PTO             reduce using rule 85 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 85 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 85 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 85 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! POR             [ shift and go to state 74 ]
  ! DIVIDIDO        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 87

    (75) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 121


state 88

    (87) expresion -> PARIZQ expresion . PARDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PARDER          shift and go to state 122
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 89

    (86) expresion -> NOT expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 86 (expresion -> NOT expresion .)
    MAS             reduce using rule 86 (expresion -> NOT expresion .)
    MENOS           reduce using rule 86 (expresion -> NOT expresion .)
    POR             reduce using rule 86 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 86 (expresion -> NOT expresion .)
    MODULO          reduce using rule 86 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 86 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 86 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 86 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 86 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 86 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 86 (expresion -> NOT expresion .)
    OR              reduce using rule 86 (expresion -> NOT expresion .)
    AND             reduce using rule 86 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 86 (expresion -> NOT expresion .)
    PARDER          reduce using rule 86 (expresion -> NOT expresion .)
    COMA            reduce using rule 86 (expresion -> NOT expresion .)
    PTO             reduce using rule 86 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 86 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 86 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 86 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! POR             [ shift and go to state 74 ]
  ! DIVIDIDO        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 90

    (55) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 55 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 55 (tipo -> SIGNOI STR .)


state 91

    (100) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 123
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 92

    (111) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 124
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 93

    (30) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (31) imatch -> . opmatch COMA dmatch
    (32) opmatch -> . opmatch COMA cmatch
    (33) opmatch -> . opmatch COMA rmatch
    (34) opmatch -> . cmatch
    (35) opmatch -> . rmatch
    (36) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (42) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (38) bloque_match -> . bloque_match BARRAS expresion
    (39) bloque_match -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 125
    imatch                         shift and go to state 126
    opmatch                        shift and go to state 127
    cmatch                         shift and go to state 128
    rmatch                         shift and go to state 129
    bloque_match                   shift and go to state 130
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 94

    (45) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 131
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 95

    (46) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 132
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 96

    (48) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 48 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 48 (break -> BREAK expresion PTCOMA .)


state 97

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 133


state 98

    (17) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR

    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55

    tipo                           shift and go to state 134

state 99

    (18) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 135
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 100

    (19) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 136


state 101

    (20) declaracion -> LET ID IGUAL expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 137
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 102

    (21) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 21 (asignacion -> ID IGUAL expresion PTCOMA .)


state 103

    (15) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (16) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    COMA            shift and go to state 138
    PARDER          shift and go to state 139
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 104

    (89) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (90) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (91) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (92) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (97) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (98) bloque_expresion -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 140
    bloque_expresion               shift and go to state 141
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 105

    (22) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (23) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (24) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (25) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 142
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 106

    (70) expresion -> expresion MAS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 70 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 70 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 70 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 70 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 70 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 70 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 70 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 70 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 70 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 70 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 70 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 70 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 70 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 107

    (71) expresion -> expresion MENOS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 71 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 108

    (72) expresion -> expresion POR expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 72 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 72 (expresion -> expresion POR expresion .)
    POR             reduce using rule 72 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 72 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 72 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion POR expresion .)
    OR              reduce using rule 72 (expresion -> expresion POR expresion .)
    AND             reduce using rule 72 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 72 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 72 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! POR             [ shift and go to state 74 ]
  ! DIVIDIDO        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 109

    (73) expresion -> expresion DIVIDIDO expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! POR             [ shift and go to state 74 ]
  ! DIVIDIDO        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 110

    (74) expresion -> expresion MODULO expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 74 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 72 ]
  ! MENOS           [ shift and go to state 73 ]
  ! POR             [ shift and go to state 74 ]
  ! DIVIDIDO        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 111

    (77) expresion -> expresion IGUALQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 77 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 112

    (78) expresion -> expresion NOIGUALQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 113

    (79) expresion -> expresion MENORQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 79 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 79 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 79 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 79 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 114

    (80) expresion -> expresion MAYORQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 80 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 80 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 80 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 80 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 80 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 115

    (81) expresion -> expresion MENORIQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 81 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 81 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 116

    (82) expresion -> expresion MAYORIQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 77 ]
  ! NOIGUALQUE      [ shift and go to state 78 ]
  ! MENORQUE        [ shift and go to state 79 ]
  ! MAYORQUE        [ shift and go to state 80 ]
  ! MENORIQUE       [ shift and go to state 81 ]
  ! MAYORIQUE       [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 117

    (83) expresion -> expresion OR expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 83 (expresion -> expresion OR expresion .)
    OR              reduce using rule 83 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 83 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 83 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 83 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 83 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 83 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    AND             shift and go to state 84

  ! MAS             [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 83 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 83 ]


state 118

    (84) expresion -> expresion AND expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 84 (expresion -> expresion AND expresion .)
    OR              reduce using rule 84 (expresion -> expresion AND expresion .)
    AND             reduce using rule 84 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 84 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 84 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 84 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 84 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82

  ! MAS             [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 119

    (65) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 143


state 120

    (66) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 144


state 121

    (75) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 145
    POWF            shift and go to state 146


state 122

    (87) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 87 (expresion -> PARIZQ expresion PARDER .)


state 123

    (100) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (101) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (104) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (105) opmatch_asig -> . cmatch_asig
    (106) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (107) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (108) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (109) bloque_match_asig -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 147
    imatch_asig                    shift and go to state 148
    opmatch_asig                   shift and go to state 149
    cmatch_asig                    shift and go to state 150
    bloque_match_asig              shift and go to state 151
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 124

    (111) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 152
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 125

    (42) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (39) bloque_match -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTO             shift and go to state 153
    IGUAL           reduce using rule 39 (bloque_match -> expresion .)
    BARRAS          reduce using rule 39 (bloque_match -> expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 126

    (30) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 154


state 127

    (31) imatch -> opmatch . COMA dmatch
    (32) opmatch -> opmatch . COMA cmatch
    (33) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 155


state 128

    (34) opmatch -> cmatch .

    COMA            reduce using rule 34 (opmatch -> cmatch .)


state 129

    (35) opmatch -> rmatch .

    COMA            reduce using rule 35 (opmatch -> rmatch .)


state 130

    (36) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (38) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 156
    BARRAS          shift and go to state 157


state 131

    (45) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 45 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 132

    (46) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 158
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 133

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 159
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 134

    (17) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 160


state 135

    (18) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 161
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 136

    (19) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 162
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 137

    (20) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 20 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 138

    (15) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (56) expresiones -> . expresiones COMA expresion
    (57) expresiones -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 163
    expresiones                    shift and go to state 164
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 139

    (16) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 165


state 140

    (98) bloque_expresion -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 98 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 98 (bloque_expresion -> expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 141

    (89) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (91) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (92) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (97) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 166
    PTCOMA          shift and go to state 167


state 142

    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (24) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (25) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (29) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (26) lelseif -> . lelseif elseif
    (27) lelseif -> . elseif
    (28) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 170

    else                           shift and go to state 168
    lelseif                        shift and go to state 169
    elseif                         shift and go to state 171

state 143

    (65) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 172


state 144

    (66) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 173


state 145

    (75) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 174


state 146

    (76) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 175


state 147

    (109) bloque_match_asig -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 109 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 109 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 148

    (100) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 176


state 149

    (101) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (104) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 177


state 150

    (105) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 105 (opmatch_asig -> cmatch_asig .)


state 151

    (106) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (107) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (108) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 178
    BARRAS          shift and go to state 179


state 152

    (111) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 111 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 153

    (42) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 180


state 154

    (30) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 30 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 155

    (31) imatch -> opmatch COMA . dmatch
    (32) opmatch -> opmatch COMA . cmatch
    (33) opmatch -> opmatch COMA . rmatch
    (40) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (41) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (36) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (42) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (38) bloque_match -> . bloque_match BARRAS expresion
    (39) bloque_match -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 184
    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    dmatch                         shift and go to state 181
    cmatch                         shift and go to state 182
    rmatch                         shift and go to state 183
    bloque_match                   shift and go to state 130
    expresion                      shift and go to state 125
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 156

    (36) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 185


state 157

    (38) bloque_match -> bloque_match BARRAS . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 186
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 158

    (46) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 46 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 159

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 187
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 160

    (17) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 188
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 161

    (18) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 18 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 162

    (19) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 189
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 163

    (57) expresiones -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PARDER          reduce using rule 57 (expresiones -> expresion .)
    COMA            reduce using rule 57 (expresiones -> expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 164

    (15) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (56) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 191
    COMA            shift and go to state 190


state 165

    (16) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 16 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 166

    (89) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (91) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (92) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (96) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (93) elseifa -> . elseifa lif
    (94) elseifa -> . lif
    (95) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 194

    elsea                          shift and go to state 192
    elseifa                        shift and go to state 193
    lif                            shift and go to state 195

state 167

    (97) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 196
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 168

    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 169

    (24) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (25) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (26) lelseif -> lelseif . elseif
    (29) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (28) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 170

    else                           shift and go to state 197
    elseif                         shift and go to state 198

state 170

    (29) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (28) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 199
    IF              shift and go to state 200


state 171

    (27) lelseif -> elseif .

    ELSE            reduce using rule 27 (lelseif -> elseif .)
    FN              reduce using rule 27 (lelseif -> elseif .)
    LET             reduce using rule 27 (lelseif -> elseif .)
    PRINTLN         reduce using rule 27 (lelseif -> elseif .)
    ID              reduce using rule 27 (lelseif -> elseif .)
    IF              reduce using rule 27 (lelseif -> elseif .)
    MATCH           reduce using rule 27 (lelseif -> elseif .)
    LOOP            reduce using rule 27 (lelseif -> elseif .)
    WHILE           reduce using rule 27 (lelseif -> elseif .)
    BREAK           reduce using rule 27 (lelseif -> elseif .)
    CONTINUE        reduce using rule 27 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 27 (lelseif -> elseif .)
    COMA            reduce using rule 27 (lelseif -> elseif .)


state 172

    (65) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 65 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 173

    (66) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 66 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 174

    (75) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 201
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 175

    (76) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 202
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 176

    (100) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 100 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 177

    (101) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (104) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (102) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (103) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (106) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (107) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (108) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (109) bloque_match_asig -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 205
    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    dmatch_asig                    shift and go to state 203
    cmatch_asig                    shift and go to state 204
    expresion                      shift and go to state 147
    bloque_match_asig              shift and go to state 151
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 178

    (106) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (107) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 206


state 179

    (108) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 207
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 180

    (42) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 208


state 181

    (31) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 31 (imatch -> opmatch COMA dmatch .)


state 182

    (32) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 32 (opmatch -> opmatch COMA cmatch .)


state 183

    (33) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 33 (opmatch -> opmatch COMA rmatch .)


state 184

    (40) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (41) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 209


state 185

    (36) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (37) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEIZQ        shift and go to state 210
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 211
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 186

    (38) bloque_match -> bloque_match BARRAS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 38 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 38 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 187

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 188

    (17) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 212
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 189

    (19) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 19 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 190

    (56) expresiones -> expresiones COMA . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 213
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 191

    (15) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 214


state 192

    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 193

    (91) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (92) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (93) elseifa -> elseifa . lif
    (96) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (95) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 91 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 194

    elsea                          shift and go to state 215
    lif                            shift and go to state 216

state 194

    (96) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (95) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 217
    IF              shift and go to state 218


state 195

    (94) elseifa -> lif .

    ELSE            reduce using rule 94 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 94 (elseifa -> lif .)
    MAS             reduce using rule 94 (elseifa -> lif .)
    MENOS           reduce using rule 94 (elseifa -> lif .)
    POR             reduce using rule 94 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 94 (elseifa -> lif .)
    MODULO          reduce using rule 94 (elseifa -> lif .)
    IGUALQUE        reduce using rule 94 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 94 (elseifa -> lif .)
    MENORQUE        reduce using rule 94 (elseifa -> lif .)
    MAYORQUE        reduce using rule 94 (elseifa -> lif .)
    MENORIQUE       reduce using rule 94 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 94 (elseifa -> lif .)
    OR              reduce using rule 94 (elseifa -> lif .)
    AND             reduce using rule 94 (elseifa -> lif .)
    PTCOMA          reduce using rule 94 (elseifa -> lif .)
    PARDER          reduce using rule 94 (elseifa -> lif .)
    COMA            reduce using rule 94 (elseifa -> lif .)
    PTO             reduce using rule 94 (elseifa -> lif .)
    IGUAL           reduce using rule 94 (elseifa -> lif .)
    BARRAS          reduce using rule 94 (elseifa -> lif .)
    LLAVEDER        reduce using rule 94 (elseifa -> lif .)


state 196

    (97) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 97 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 97 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 197

    (25) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 25 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 198

    (26) lelseif -> lelseif elseif .

    ELSE            reduce using rule 26 (lelseif -> lelseif elseif .)
    FN              reduce using rule 26 (lelseif -> lelseif elseif .)
    LET             reduce using rule 26 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 26 (lelseif -> lelseif elseif .)
    ID              reduce using rule 26 (lelseif -> lelseif elseif .)
    IF              reduce using rule 26 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 26 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 26 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 26 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 26 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 26 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 26 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 26 (lelseif -> lelseif elseif .)


state 199

    (29) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 219
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 200

    (28) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 220
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 201

    (75) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    COMA            shift and go to state 221
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 202

    (76) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    COMA            shift and go to state 222
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 203

    (101) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 101 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 204

    (104) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 104 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 205

    (102) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (103) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 223


state 206

    (106) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (107) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 224
    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 225
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 207

    (108) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 108 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 108 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 208

    (42) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 226
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 209

    (40) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (41) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 227


state 210

    (36) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 228
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 211

    (37) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 37 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 212

    (17) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 17 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 213

    (56) expresiones -> expresiones COMA expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PARDER          reduce using rule 56 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 56 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 214

    (15) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 215

    (92) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 92 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 216

    (93) elseifa -> elseifa lif .

    ELSE            reduce using rule 93 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 93 (elseifa -> elseifa lif .)
    MAS             reduce using rule 93 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 93 (elseifa -> elseifa lif .)
    POR             reduce using rule 93 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 93 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 93 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 93 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 93 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 93 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 93 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 93 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 93 (elseifa -> elseifa lif .)
    OR              reduce using rule 93 (elseifa -> elseifa lif .)
    AND             reduce using rule 93 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 93 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 93 (elseifa -> elseifa lif .)
    COMA            reduce using rule 93 (elseifa -> elseifa lif .)
    PTO             reduce using rule 93 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 93 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 93 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 93 (elseifa -> elseifa lif .)


state 217

    (96) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (97) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (98) bloque_expresion -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    bloque_expresion               shift and go to state 229
    expresion                      shift and go to state 140
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 218

    (95) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 230
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 219

    (29) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 231
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 220

    (28) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 232
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 221

    (75) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 233
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 222

    (76) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    tipo                           shift and go to state 44
    expresion                      shift and go to state 234
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 223

    (102) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (103) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 235


state 224

    (106) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (97) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (98) bloque_expresion -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    bloque_expresion               shift and go to state 236
    expresion                      shift and go to state 140
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 225

    (107) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    COMA            reduce using rule 107 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 226

    (42) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 237
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 227

    (40) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (41) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEIZQ        shift and go to state 238
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 239
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 228

    (36) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 240
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 229

    (96) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (97) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 241
    PTCOMA          shift and go to state 167


state 230

    (95) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 242
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 231

    (29) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 29 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 232

    (28) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 233

    (75) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PARDER          shift and go to state 244
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 234

    (76) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    PARDER          shift and go to state 245
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 235

    (102) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (103) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 246
    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 247
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 236

    (106) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (97) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 248
    PTCOMA          shift and go to state 167


state 237

    (42) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 249


state 238

    (40) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 250
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 239

    (41) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 41 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 240

    (36) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 36 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 241

    (96) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 96 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 242

    (95) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (97) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (98) bloque_expresion -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    expresion                      shift and go to state 140
    bloque_expresion               shift and go to state 251
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 243

    (28) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 252
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 244

    (75) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 75 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 245

    (76) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 76 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 246

    (102) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (97) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (98) bloque_expresion -> . expresion
    (58) expresion -> . ID
    (59) expresion -> . ENTERO
    (60) expresion -> . DECIMAL
    (61) expresion -> . TRUE
    (62) expresion -> . FALSE
    (63) expresion -> . tostring
    (64) expresion -> . toowned
    (67) expresion -> . STR
    (68) expresion -> . CADENA
    (69) expresion -> . CARACTER
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion POR expresion
    (73) expresion -> . expresion DIVIDIDO expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (77) expresion -> . expresion IGUALQUE expresion
    (78) expresion -> . expresion NOIGUALQUE expresion
    (79) expresion -> . expresion MENORQUE expresion
    (80) expresion -> . expresion MAYORQUE expresion
    (81) expresion -> . expresion MENORIQUE expresion
    (82) expresion -> . expresion MAYORIQUE expresion
    (83) expresion -> . expresion OR expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . MENOS expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . PARIZQ expresion PARDER
    (88) expresion -> . if_asig
    (99) expresion -> . match_asig
    (110) expresion -> . loop_asig
    (65) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (66) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (50) tipo -> . I64
    (51) tipo -> . F64
    (52) tipo -> . BOOL
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . SIGNOI STR
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (91) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (92) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (100) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (111) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    STR             shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    MENOS           shift and go to state 43
    NOT             shift and go to state 46
    PARIZQ          shift and go to state 45
    I64             shift and go to state 50
    F64             shift and go to state 51
    BOOL            shift and go to state 52
    CHAR            shift and go to state 53
    STRING          shift and go to state 54
    SIGNOI          shift and go to state 55
    IF              shift and go to state 31
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57

    bloque_expresion               shift and go to state 253
    expresion                      shift and go to state 140
    tostring                       shift and go to state 38
    toowned                        shift and go to state 39
    tipo                           shift and go to state 44
    if_asig                        shift and go to state 47
    match_asig                     shift and go to state 48
    loop_asig                      shift and go to state 49

state 247

    (103) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . POR expresion
    (73) expresion -> expresion . DIVIDIDO expresion
    (74) expresion -> expresion . MODULO expresion
    (77) expresion -> expresion . IGUALQUE expresion
    (78) expresion -> expresion . NOIGUALQUE expresion
    (79) expresion -> expresion . MENORQUE expresion
    (80) expresion -> expresion . MAYORQUE expresion
    (81) expresion -> expresion . MENORIQUE expresion
    (82) expresion -> expresion . MAYORIQUE expresion
    (83) expresion -> expresion . OR expresion
    (84) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 103 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 73
    POR             shift and go to state 74
    DIVIDIDO        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALQUE        shift and go to state 77
    NOIGUALQUE      shift and go to state 78
    MENORQUE        shift and go to state 79
    MAYORQUE        shift and go to state 80
    MENORIQUE       shift and go to state 81
    MAYORIQUE       shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 248

    (106) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 106 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 249

    (42) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (43) rrmatch -> . instruccion
    (44) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEIZQ        shift and go to state 256
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    rrmatch                        shift and go to state 254
    instruccion                    shift and go to state 255
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 250

    (40) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 257
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 251

    (95) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (97) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 258
    PTCOMA          shift and go to state 167


state 252

    (28) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 28 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 253

    (102) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (97) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 259
    PTCOMA          shift and go to state 167


state 254

    (42) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 42 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 255

    (43) rrmatch -> instruccion .

    COMA            reduce using rule 43 (rrmatch -> instruccion .)


state 256

    (44) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instrucciones                  shift and go to state 260
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 257

    (40) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 40 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 258

    (95) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 95 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 259

    (102) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 102 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 260

    (44) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (14) instruccion -> . continue
    (17) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (18) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (20) declaracion -> . LET ID IGUAL expresion PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (16) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (21) asignacion -> . ID IGUAL expresion PTCOMA
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (25) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (30) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (45) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (46) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (47) break -> . BREAK PTCOMA
    (48) break -> . BREAK expresion PTCOMA
    (49) continue -> . CONTINUE PTCOMA

    LLAVEDER        shift and go to state 261
    LET             shift and go to state 15
    PRINTLN         shift and go to state 17
    ID              shift and go to state 16
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    LOOP            shift and go to state 20
    WHILE           shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23

    instruccion                    shift and go to state 25
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14

state 261

    (44) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 44 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 41 resolved as shift
