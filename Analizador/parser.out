Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 21    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 22    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 23    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 24    lparametros -> lparametros COMA lparame
Rule 25    lparametros -> lparame
Rule 26    lparame -> ID DOSPT tipo
Rule 27    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 28    llamada_funciones -> ID PARIZQ PARDER
Rule 29    largumentos -> largumentos COMA expresion
Rule 30    largumentos -> expresion
Rule 31    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 32    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 33    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 34    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 35    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 36    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 37    asignacion -> ID IGUAL expresion PTCOMA
Rule 38    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 39    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 40    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 41    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 42    lelseif -> lelseif elseif
Rule 43    lelseif -> elseif
Rule 44    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 45    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 46    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 47    imatch -> opmatch COMA dmatch
Rule 48    opmatch -> opmatch COMA cmatch
Rule 49    opmatch -> opmatch COMA rmatch
Rule 50    opmatch -> cmatch
Rule 51    opmatch -> rmatch
Rule 52    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 53    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 54    bloque_match -> bloque_match BARRAS expresion
Rule 55    bloque_match -> expresion
Rule 56    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 57    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 58    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 59    rrmatch -> instruccion
Rule 60    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 61    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 62    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 63    break -> BREAK PTCOMA
Rule 64    break -> BREAK expresion PTCOMA
Rule 65    continue -> CONTINUE PTCOMA
Rule 66    return -> RETURN expresion PTCOMA
Rule 67    tipo -> I64
Rule 68    tipo -> F64
Rule 69    tipo -> BOOL
Rule 70    tipo -> CHAR
Rule 71    tipo -> STRING
Rule 72    tipo -> SIGNOI STR
Rule 73    expresiones -> expresiones COMA expresion
Rule 74    expresiones -> expresion
Rule 75    expresion -> ID
Rule 76    expresion -> ENTERO
Rule 77    expresion -> DECIMAL
Rule 78    expresion -> TRUE
Rule 79    expresion -> FALSE
Rule 80    expresion -> tostring
Rule 81    expresion -> toowned
Rule 82    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 83    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 84    expresion -> STR
Rule 85    expresion -> CADENA
Rule 86    expresion -> CARACTER
Rule 87    expresion -> expresion MAS expresion
Rule 88    expresion -> expresion MENOS expresion
Rule 89    expresion -> expresion POR expresion
Rule 90    expresion -> expresion DIVIDIDO expresion
Rule 91    expresion -> expresion MODULO expresion
Rule 92    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 93    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 94    expresion -> expresion IGUALQUE expresion
Rule 95    expresion -> expresion NOIGUALQUE expresion
Rule 96    expresion -> expresion MENORQUE expresion
Rule 97    expresion -> expresion MAYORQUE expresion
Rule 98    expresion -> expresion MENORIQUE expresion
Rule 99    expresion -> expresion MAYORIQUE expresion
Rule 100   expresion -> expresion OR expresion
Rule 101   expresion -> expresion AND expresion
Rule 102   expresion -> MENOS expresion
Rule 103   expresion -> NOT expresion
Rule 104   expresion -> PARIZQ expresion PARDER
Rule 105   expresion -> llamada_funciones
Rule 106   expresion -> if_asig
Rule 107   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 108   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 109   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 110   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 111   elseifa -> elseifa lif
Rule 112   elseifa -> lif
Rule 113   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 114   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 115   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 116   bloque_expresion -> expresion
Rule 117   expresion -> match_asig
Rule 118   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 119   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 120   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 121   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 122   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 123   opmatch_asig -> cmatch_asig
Rule 124   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 125   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 126   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 127   bloque_match_asig -> expresion
Rule 128   expresion -> loop_asig
Rule 129   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 101
AS                   : 
BARRAS               : 54 126
BOOL                 : 69
BREAK                : 63 64
CADENA               : 82 83 85
CARACTER             : 86
CHAR                 : 70
COMA                 : 24 29 31 47 48 49 73 92 93 119 122
CONTINUE             : 65
DECIMAL              : 77
DIVIDIDO             : 90
DOSPT                : 26 33 35 92 92 93 93
ELSE                 : 44 45 113 114
ENTERO               : 76
F64                  : 68
FALSE                : 79
FN                   : 5 20 21 22 23
GUIONB               : 56 57 120 121
I64                  : 67
ID                   : 20 21 22 23 26 27 28 33 34 35 36 37 75
IF                   : 38 39 40 41 44 107 108 109 110 113
IGUAL                : 33 34 35 36 37 52 53 56 57 58 58 120 121 124 125
IGUALQUE             : 94
LET                  : 33 34 35 36
LLAVEDER             : 5 20 21 22 23 38 39 40 41 44 45 46 52 56 60 61 62 107 108 109 110 113 114 118 120 124 129
LLAVEIZQ             : 5 20 21 22 23 38 39 40 41 44 45 46 52 56 60 61 62 107 108 109 110 113 114 118 120 124 129
LOOP                 : 61 129
MAIN                 : 5
MAS                  : 87
MATCH                : 46 118
MAYORIQUE            : 99
MAYORQUE             : 20 21 52 53 56 57 58 97 120 121 124 125
MENORIQUE            : 98
MENORQUE             : 96
MENOS                : 20 21 88 102
MODULO               : 91
MUT                  : 33 34
NOIGUALQUE           : 95
NOT                  : 31 32 103
OR                   : 100
PARDER               : 5 20 21 22 23 27 28 31 32 82 83 92 93 104
PARIZQ               : 5 20 21 22 23 27 28 31 32 82 83 92 93 104
POR                  : 89
POW                  : 92
POWF                 : 93
PRINTLN              : 31 32
PTCOMA               : 19 31 32 33 34 35 36 37 63 64 65 66 115
PTO                  : 58 58 82 83
RETURN               : 66
SIGNOI               : 72
STR                  : 72 84
STRING               : 71
TOOWNED              : 83
TOSTRING             : 82
TRUE                 : 78
WHILE                : 62
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 107 108 109 110 113 114 115 120 124
bloque_match         : 52 53 54
bloque_match_asig    : 124 125 126
break                : 15
cmatch               : 48 50
cmatch_asig          : 122 123
continue             : 17
declaracion          : 8
dmatch               : 47
dmatch_asig          : 119
else                 : 39 41
elsea                : 108 110
elseif               : 42 43
elseifa              : 109 110 111
expresion            : 29 30 31 32 33 34 35 36 37 38 39 40 41 44 46 54 55 58 58 62 64 66 73 74 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 103 104 107 108 109 110 113 115 116 118 121 125 126 127
expresiones          : 31 73
funciones            : 18
if                   : 11
if_asig              : 106
imatch               : 46
imatch_asig          : 118
imprimir             : 9
inicio               : 0
instruccion          : 6 7 53 57 59
instrucciones        : 1 1 2 3 5 6 20 21 22 23 38 39 40 41 44 45 52 56 60 61 62 129
largumentos          : 27 29
lelseif              : 40 41 42
lif                  : 111 112
llamada_funciones    : 19 105
loop                 : 13
loop_asig            : 128
lparame              : 24 25
lparametros          : 20 22 24
main                 : 1 2 3 4
match                : 12
match_asig           : 117
opmatch              : 47 48 49
opmatch_asig         : 119 122
return               : 16
rmatch               : 49 51
rrmatch              : 58
tipo                 : 20 21 26 33 35 92 93
toowned              : 81
tostring             : 80
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27

    main                           shift and go to state 28
    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 30
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (20) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 32
    ID              shift and go to state 33


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 34


state 18

    (33) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 35
    ID              shift and go to state 36


state 19

    (37) asignacion -> ID . IGUAL expresion PTCOMA
    (27) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (28) llamada_funciones -> ID . PARIZQ PARDER

    IGUAL           shift and go to state 37
    PARIZQ          shift and go to state 38


state 20

    (31) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 39


state 21

    (38) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 22

    (46) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 68
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 23

    (61) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 69


state 24

    (62) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 70
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 25

    (63) break -> BREAK . PTCOMA
    (64) break -> BREAK . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 71
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 72
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 26

    (66) return -> RETURN . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 73
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 27

    (65) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 74


state 28

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 75
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 29

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 30

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 31

    (20) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33


state 32

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 76


state 33

    (20) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 77


state 34

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 35

    (33) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 78


state 36

    (35) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 79
    IGUAL           shift and go to state 80


state 37

    (37) asignacion -> ID IGUAL . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 81
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 38

    (27) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (28) llamada_funciones -> ID PARIZQ . PARDER
    (29) largumentos -> . largumentos COMA expresion
    (30) largumentos -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 83
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    largumentos                    shift and go to state 82
    expresion                      shift and go to state 84
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 39

    (31) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 85


state 40

    (107) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 86
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 41

    (38) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (39) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 87
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 42

    (75) expresion -> ID .
    (27) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (28) llamada_funciones -> ID . PARIZQ PARDER

    LLAVEIZQ        reduce using rule 75 (expresion -> ID .)
    MAS             reduce using rule 75 (expresion -> ID .)
    MENOS           reduce using rule 75 (expresion -> ID .)
    POR             reduce using rule 75 (expresion -> ID .)
    DIVIDIDO        reduce using rule 75 (expresion -> ID .)
    MODULO          reduce using rule 75 (expresion -> ID .)
    IGUALQUE        reduce using rule 75 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 75 (expresion -> ID .)
    MENORQUE        reduce using rule 75 (expresion -> ID .)
    MAYORQUE        reduce using rule 75 (expresion -> ID .)
    MENORIQUE       reduce using rule 75 (expresion -> ID .)
    MAYORIQUE       reduce using rule 75 (expresion -> ID .)
    OR              reduce using rule 75 (expresion -> ID .)
    AND             reduce using rule 75 (expresion -> ID .)
    PTCOMA          reduce using rule 75 (expresion -> ID .)
    PARDER          reduce using rule 75 (expresion -> ID .)
    COMA            reduce using rule 75 (expresion -> ID .)
    PTO             reduce using rule 75 (expresion -> ID .)
    IGUAL           reduce using rule 75 (expresion -> ID .)
    BARRAS          reduce using rule 75 (expresion -> ID .)
    LLAVEDER        reduce using rule 75 (expresion -> ID .)
    PARIZQ          shift and go to state 38


state 43

    (76) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 76 (expresion -> ENTERO .)
    MAS             reduce using rule 76 (expresion -> ENTERO .)
    MENOS           reduce using rule 76 (expresion -> ENTERO .)
    POR             reduce using rule 76 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 76 (expresion -> ENTERO .)
    MODULO          reduce using rule 76 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 76 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 76 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 76 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 76 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 76 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 76 (expresion -> ENTERO .)
    OR              reduce using rule 76 (expresion -> ENTERO .)
    AND             reduce using rule 76 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 76 (expresion -> ENTERO .)
    PARDER          reduce using rule 76 (expresion -> ENTERO .)
    COMA            reduce using rule 76 (expresion -> ENTERO .)
    PTO             reduce using rule 76 (expresion -> ENTERO .)
    IGUAL           reduce using rule 76 (expresion -> ENTERO .)
    BARRAS          reduce using rule 76 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 76 (expresion -> ENTERO .)


state 44

    (77) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 77 (expresion -> DECIMAL .)
    MAS             reduce using rule 77 (expresion -> DECIMAL .)
    MENOS           reduce using rule 77 (expresion -> DECIMAL .)
    POR             reduce using rule 77 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 77 (expresion -> DECIMAL .)
    MODULO          reduce using rule 77 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 77 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 77 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 77 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 77 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 77 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 77 (expresion -> DECIMAL .)
    OR              reduce using rule 77 (expresion -> DECIMAL .)
    AND             reduce using rule 77 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 77 (expresion -> DECIMAL .)
    PARDER          reduce using rule 77 (expresion -> DECIMAL .)
    COMA            reduce using rule 77 (expresion -> DECIMAL .)
    PTO             reduce using rule 77 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 77 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 77 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 77 (expresion -> DECIMAL .)


state 45

    (78) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 78 (expresion -> TRUE .)
    MAS             reduce using rule 78 (expresion -> TRUE .)
    MENOS           reduce using rule 78 (expresion -> TRUE .)
    POR             reduce using rule 78 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 78 (expresion -> TRUE .)
    MODULO          reduce using rule 78 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 78 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 78 (expresion -> TRUE .)
    MENORQUE        reduce using rule 78 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 78 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 78 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 78 (expresion -> TRUE .)
    OR              reduce using rule 78 (expresion -> TRUE .)
    AND             reduce using rule 78 (expresion -> TRUE .)
    PTCOMA          reduce using rule 78 (expresion -> TRUE .)
    PARDER          reduce using rule 78 (expresion -> TRUE .)
    COMA            reduce using rule 78 (expresion -> TRUE .)
    PTO             reduce using rule 78 (expresion -> TRUE .)
    IGUAL           reduce using rule 78 (expresion -> TRUE .)
    BARRAS          reduce using rule 78 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 78 (expresion -> TRUE .)


state 46

    (79) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 79 (expresion -> FALSE .)
    MAS             reduce using rule 79 (expresion -> FALSE .)
    MENOS           reduce using rule 79 (expresion -> FALSE .)
    POR             reduce using rule 79 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 79 (expresion -> FALSE .)
    MODULO          reduce using rule 79 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 79 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 79 (expresion -> FALSE .)
    MENORQUE        reduce using rule 79 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 79 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 79 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 79 (expresion -> FALSE .)
    OR              reduce using rule 79 (expresion -> FALSE .)
    AND             reduce using rule 79 (expresion -> FALSE .)
    PTCOMA          reduce using rule 79 (expresion -> FALSE .)
    PARDER          reduce using rule 79 (expresion -> FALSE .)
    COMA            reduce using rule 79 (expresion -> FALSE .)
    PTO             reduce using rule 79 (expresion -> FALSE .)
    IGUAL           reduce using rule 79 (expresion -> FALSE .)
    BARRAS          reduce using rule 79 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 79 (expresion -> FALSE .)


state 47

    (80) expresion -> tostring .

    LLAVEIZQ        reduce using rule 80 (expresion -> tostring .)
    MAS             reduce using rule 80 (expresion -> tostring .)
    MENOS           reduce using rule 80 (expresion -> tostring .)
    POR             reduce using rule 80 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 80 (expresion -> tostring .)
    MODULO          reduce using rule 80 (expresion -> tostring .)
    IGUALQUE        reduce using rule 80 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 80 (expresion -> tostring .)
    MENORQUE        reduce using rule 80 (expresion -> tostring .)
    MAYORQUE        reduce using rule 80 (expresion -> tostring .)
    MENORIQUE       reduce using rule 80 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 80 (expresion -> tostring .)
    OR              reduce using rule 80 (expresion -> tostring .)
    AND             reduce using rule 80 (expresion -> tostring .)
    PTCOMA          reduce using rule 80 (expresion -> tostring .)
    PARDER          reduce using rule 80 (expresion -> tostring .)
    COMA            reduce using rule 80 (expresion -> tostring .)
    PTO             reduce using rule 80 (expresion -> tostring .)
    IGUAL           reduce using rule 80 (expresion -> tostring .)
    BARRAS          reduce using rule 80 (expresion -> tostring .)
    LLAVEDER        reduce using rule 80 (expresion -> tostring .)


state 48

    (81) expresion -> toowned .

    LLAVEIZQ        reduce using rule 81 (expresion -> toowned .)
    MAS             reduce using rule 81 (expresion -> toowned .)
    MENOS           reduce using rule 81 (expresion -> toowned .)
    POR             reduce using rule 81 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 81 (expresion -> toowned .)
    MODULO          reduce using rule 81 (expresion -> toowned .)
    IGUALQUE        reduce using rule 81 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 81 (expresion -> toowned .)
    MENORQUE        reduce using rule 81 (expresion -> toowned .)
    MAYORQUE        reduce using rule 81 (expresion -> toowned .)
    MENORIQUE       reduce using rule 81 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 81 (expresion -> toowned .)
    OR              reduce using rule 81 (expresion -> toowned .)
    AND             reduce using rule 81 (expresion -> toowned .)
    PTCOMA          reduce using rule 81 (expresion -> toowned .)
    PARDER          reduce using rule 81 (expresion -> toowned .)
    COMA            reduce using rule 81 (expresion -> toowned .)
    PTO             reduce using rule 81 (expresion -> toowned .)
    IGUAL           reduce using rule 81 (expresion -> toowned .)
    BARRAS          reduce using rule 81 (expresion -> toowned .)
    LLAVEDER        reduce using rule 81 (expresion -> toowned .)


state 49

    (84) expresion -> STR .

    LLAVEIZQ        reduce using rule 84 (expresion -> STR .)
    MAS             reduce using rule 84 (expresion -> STR .)
    MENOS           reduce using rule 84 (expresion -> STR .)
    POR             reduce using rule 84 (expresion -> STR .)
    DIVIDIDO        reduce using rule 84 (expresion -> STR .)
    MODULO          reduce using rule 84 (expresion -> STR .)
    IGUALQUE        reduce using rule 84 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 84 (expresion -> STR .)
    MENORQUE        reduce using rule 84 (expresion -> STR .)
    MAYORQUE        reduce using rule 84 (expresion -> STR .)
    MENORIQUE       reduce using rule 84 (expresion -> STR .)
    MAYORIQUE       reduce using rule 84 (expresion -> STR .)
    OR              reduce using rule 84 (expresion -> STR .)
    AND             reduce using rule 84 (expresion -> STR .)
    PTCOMA          reduce using rule 84 (expresion -> STR .)
    PARDER          reduce using rule 84 (expresion -> STR .)
    COMA            reduce using rule 84 (expresion -> STR .)
    PTO             reduce using rule 84 (expresion -> STR .)
    IGUAL           reduce using rule 84 (expresion -> STR .)
    BARRAS          reduce using rule 84 (expresion -> STR .)
    LLAVEDER        reduce using rule 84 (expresion -> STR .)


state 50

    (85) expresion -> CADENA .
    (82) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (83) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 85 (expresion -> CADENA .)
    MAS             reduce using rule 85 (expresion -> CADENA .)
    MENOS           reduce using rule 85 (expresion -> CADENA .)
    POR             reduce using rule 85 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 85 (expresion -> CADENA .)
    MODULO          reduce using rule 85 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 85 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 85 (expresion -> CADENA .)
    MENORQUE        reduce using rule 85 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 85 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 85 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 85 (expresion -> CADENA .)
    OR              reduce using rule 85 (expresion -> CADENA .)
    AND             reduce using rule 85 (expresion -> CADENA .)
    PTCOMA          reduce using rule 85 (expresion -> CADENA .)
    PARDER          reduce using rule 85 (expresion -> CADENA .)
    COMA            reduce using rule 85 (expresion -> CADENA .)
    IGUAL           reduce using rule 85 (expresion -> CADENA .)
    BARRAS          reduce using rule 85 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 85 (expresion -> CADENA .)
    PTO             shift and go to state 101

  ! PTO             [ reduce using rule 85 (expresion -> CADENA .) ]


state 51

    (86) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 86 (expresion -> CARACTER .)
    MAS             reduce using rule 86 (expresion -> CARACTER .)
    MENOS           reduce using rule 86 (expresion -> CARACTER .)
    POR             reduce using rule 86 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 86 (expresion -> CARACTER .)
    MODULO          reduce using rule 86 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 86 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 86 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 86 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 86 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 86 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 86 (expresion -> CARACTER .)
    OR              reduce using rule 86 (expresion -> CARACTER .)
    AND             reduce using rule 86 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 86 (expresion -> CARACTER .)
    PARDER          reduce using rule 86 (expresion -> CARACTER .)
    COMA            reduce using rule 86 (expresion -> CARACTER .)
    PTO             reduce using rule 86 (expresion -> CARACTER .)
    IGUAL           reduce using rule 86 (expresion -> CARACTER .)
    BARRAS          reduce using rule 86 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 86 (expresion -> CARACTER .)


state 52

    (102) expresion -> MENOS . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 102
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 53

    (92) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 103


state 54

    (104) expresion -> PARIZQ . expresion PARDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 104
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 55

    (103) expresion -> NOT . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 105
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 56

    (105) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 105 (expresion -> llamada_funciones .)
    MAS             reduce using rule 105 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 105 (expresion -> llamada_funciones .)
    POR             reduce using rule 105 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 105 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 105 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 105 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 105 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 105 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 105 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 105 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 105 (expresion -> llamada_funciones .)
    OR              reduce using rule 105 (expresion -> llamada_funciones .)
    AND             reduce using rule 105 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 105 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 105 (expresion -> llamada_funciones .)
    COMA            reduce using rule 105 (expresion -> llamada_funciones .)
    PTO             reduce using rule 105 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 105 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 105 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 105 (expresion -> llamada_funciones .)


state 57

    (106) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 106 (expresion -> if_asig .)
    MAS             reduce using rule 106 (expresion -> if_asig .)
    MENOS           reduce using rule 106 (expresion -> if_asig .)
    POR             reduce using rule 106 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 106 (expresion -> if_asig .)
    MODULO          reduce using rule 106 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 106 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 106 (expresion -> if_asig .)
    MENORQUE        reduce using rule 106 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 106 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 106 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 106 (expresion -> if_asig .)
    OR              reduce using rule 106 (expresion -> if_asig .)
    AND             reduce using rule 106 (expresion -> if_asig .)
    PTCOMA          reduce using rule 106 (expresion -> if_asig .)
    PARDER          reduce using rule 106 (expresion -> if_asig .)
    COMA            reduce using rule 106 (expresion -> if_asig .)
    PTO             reduce using rule 106 (expresion -> if_asig .)
    IGUAL           reduce using rule 106 (expresion -> if_asig .)
    BARRAS          reduce using rule 106 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 106 (expresion -> if_asig .)


state 58

    (117) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 117 (expresion -> match_asig .)
    MAS             reduce using rule 117 (expresion -> match_asig .)
    MENOS           reduce using rule 117 (expresion -> match_asig .)
    POR             reduce using rule 117 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 117 (expresion -> match_asig .)
    MODULO          reduce using rule 117 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 117 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 117 (expresion -> match_asig .)
    MENORQUE        reduce using rule 117 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 117 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 117 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 117 (expresion -> match_asig .)
    OR              reduce using rule 117 (expresion -> match_asig .)
    AND             reduce using rule 117 (expresion -> match_asig .)
    PTCOMA          reduce using rule 117 (expresion -> match_asig .)
    PARDER          reduce using rule 117 (expresion -> match_asig .)
    COMA            reduce using rule 117 (expresion -> match_asig .)
    PTO             reduce using rule 117 (expresion -> match_asig .)
    IGUAL           reduce using rule 117 (expresion -> match_asig .)
    BARRAS          reduce using rule 117 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 117 (expresion -> match_asig .)


state 59

    (128) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 128 (expresion -> loop_asig .)
    MAS             reduce using rule 128 (expresion -> loop_asig .)
    MENOS           reduce using rule 128 (expresion -> loop_asig .)
    POR             reduce using rule 128 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 128 (expresion -> loop_asig .)
    MODULO          reduce using rule 128 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 128 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 128 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 128 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 128 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 128 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 128 (expresion -> loop_asig .)
    OR              reduce using rule 128 (expresion -> loop_asig .)
    AND             reduce using rule 128 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 128 (expresion -> loop_asig .)
    PARDER          reduce using rule 128 (expresion -> loop_asig .)
    COMA            reduce using rule 128 (expresion -> loop_asig .)
    PTO             reduce using rule 128 (expresion -> loop_asig .)
    IGUAL           reduce using rule 128 (expresion -> loop_asig .)
    BARRAS          reduce using rule 128 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 128 (expresion -> loop_asig .)


state 60

    (67) tipo -> I64 .

    DOSPT           reduce using rule 67 (tipo -> I64 .)
    IGUAL           reduce using rule 67 (tipo -> I64 .)
    PARDER          reduce using rule 67 (tipo -> I64 .)
    COMA            reduce using rule 67 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 67 (tipo -> I64 .)


state 61

    (68) tipo -> F64 .

    DOSPT           reduce using rule 68 (tipo -> F64 .)
    IGUAL           reduce using rule 68 (tipo -> F64 .)
    PARDER          reduce using rule 68 (tipo -> F64 .)
    COMA            reduce using rule 68 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 68 (tipo -> F64 .)


state 62

    (69) tipo -> BOOL .

    DOSPT           reduce using rule 69 (tipo -> BOOL .)
    IGUAL           reduce using rule 69 (tipo -> BOOL .)
    PARDER          reduce using rule 69 (tipo -> BOOL .)
    COMA            reduce using rule 69 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 69 (tipo -> BOOL .)


state 63

    (70) tipo -> CHAR .

    DOSPT           reduce using rule 70 (tipo -> CHAR .)
    IGUAL           reduce using rule 70 (tipo -> CHAR .)
    PARDER          reduce using rule 70 (tipo -> CHAR .)
    COMA            reduce using rule 70 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 70 (tipo -> CHAR .)


state 64

    (71) tipo -> STRING .

    DOSPT           reduce using rule 71 (tipo -> STRING .)
    IGUAL           reduce using rule 71 (tipo -> STRING .)
    PARDER          reduce using rule 71 (tipo -> STRING .)
    COMA            reduce using rule 71 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 71 (tipo -> STRING .)


state 65

    (72) tipo -> SIGNOI . STR

    STR             shift and go to state 106


state 66

    (118) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 107
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 67

    (129) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 108


state 68

    (46) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 109
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 69

    (61) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 110
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 70

    (62) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 111
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 71

    (63) break -> BREAK PTCOMA .

    FN              reduce using rule 63 (break -> BREAK PTCOMA .)
    LET             reduce using rule 63 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 63 (break -> BREAK PTCOMA .)
    ID              reduce using rule 63 (break -> BREAK PTCOMA .)
    IF              reduce using rule 63 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 63 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 63 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 63 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 63 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 63 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 63 (break -> BREAK PTCOMA .)
    $end            reduce using rule 63 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 63 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 63 (break -> BREAK PTCOMA .)


state 72

    (64) break -> BREAK expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 112
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 73

    (66) return -> RETURN expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 113
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 74

    (65) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 65 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 65 (continue -> CONTINUE PTCOMA .)


state 75

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 76

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 114


state 77

    (20) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) lparametros -> . lparametros COMA lparame
    (25) lparametros -> . lparame
    (26) lparame -> . ID DOSPT tipo

    PARDER          shift and go to state 117
    ID              shift and go to state 115

    lparametros                    shift and go to state 116
    lparame                        shift and go to state 118

state 78

    (33) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 119
    IGUAL           shift and go to state 120


state 79

    (35) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 121

state 80

    (36) declaracion -> LET ID IGUAL . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 122
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 81

    (37) asignacion -> ID IGUAL expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 123
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 82

    (27) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (29) largumentos -> largumentos . COMA expresion

    PARDER          shift and go to state 124
    COMA            shift and go to state 125


state 83

    (28) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 28 (llamada_funciones -> ID PARIZQ PARDER .)


state 84

    (30) largumentos -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          reduce using rule 30 (largumentos -> expresion .)
    COMA            reduce using rule 30 (largumentos -> expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 85

    (31) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 126
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 86

    (107) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 127
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 87

    (38) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (39) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (40) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (41) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 128
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 88

    (87) expresion -> expresion MAS . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 129
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 89

    (88) expresion -> expresion MENOS . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 130
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 90

    (89) expresion -> expresion POR . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 131
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 91

    (90) expresion -> expresion DIVIDIDO . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 132
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 92

    (91) expresion -> expresion MODULO . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 133
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 93

    (94) expresion -> expresion IGUALQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 134
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 94

    (95) expresion -> expresion NOIGUALQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 135
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 95

    (96) expresion -> expresion MENORQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 136
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 96

    (97) expresion -> expresion MAYORQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 137
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 97

    (98) expresion -> expresion MENORIQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 138
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 98

    (99) expresion -> expresion MAYORIQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 139
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 99

    (100) expresion -> expresion OR . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 140
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 100

    (101) expresion -> expresion AND . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 141
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 101

    (82) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (83) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 142
    TOOWNED         shift and go to state 143


state 102

    (102) expresion -> MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 102 (expresion -> MENOS expresion .)
    MAS             reduce using rule 102 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 102 (expresion -> MENOS expresion .)
    POR             reduce using rule 102 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 102 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 102 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 102 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 102 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 102 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 102 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 102 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 102 (expresion -> MENOS expresion .)
    OR              reduce using rule 102 (expresion -> MENOS expresion .)
    AND             reduce using rule 102 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 102 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 102 (expresion -> MENOS expresion .)
    COMA            reduce using rule 102 (expresion -> MENOS expresion .)
    PTO             reduce using rule 102 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 102 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 102 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! POR             [ shift and go to state 90 ]
  ! DIVIDIDO        [ shift and go to state 91 ]
  ! MODULO          [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 103

    (92) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 144


state 104

    (104) expresion -> PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          shift and go to state 145
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 105

    (103) expresion -> NOT expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 103 (expresion -> NOT expresion .)
    MAS             reduce using rule 103 (expresion -> NOT expresion .)
    MENOS           reduce using rule 103 (expresion -> NOT expresion .)
    POR             reduce using rule 103 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 103 (expresion -> NOT expresion .)
    MODULO          reduce using rule 103 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 103 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 103 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 103 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 103 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 103 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 103 (expresion -> NOT expresion .)
    OR              reduce using rule 103 (expresion -> NOT expresion .)
    AND             reduce using rule 103 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 103 (expresion -> NOT expresion .)
    PARDER          reduce using rule 103 (expresion -> NOT expresion .)
    COMA            reduce using rule 103 (expresion -> NOT expresion .)
    PTO             reduce using rule 103 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 103 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 103 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! POR             [ shift and go to state 90 ]
  ! DIVIDIDO        [ shift and go to state 91 ]
  ! MODULO          [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 106

    (72) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 72 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 72 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 72 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 72 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 72 (tipo -> SIGNOI STR .)


state 107

    (118) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 146
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 108

    (129) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 147
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 109

    (46) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (47) imatch -> . opmatch COMA dmatch
    (48) opmatch -> . opmatch COMA cmatch
    (49) opmatch -> . opmatch COMA rmatch
    (50) opmatch -> . cmatch
    (51) opmatch -> . rmatch
    (52) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (53) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (58) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (54) bloque_match -> . bloque_match BARRAS expresion
    (55) bloque_match -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 148
    imatch                         shift and go to state 149
    opmatch                        shift and go to state 150
    cmatch                         shift and go to state 151
    rmatch                         shift and go to state 152
    bloque_match                   shift and go to state 153
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 110

    (61) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 154
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 111

    (62) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 155
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 112

    (64) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 64 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 64 (break -> BREAK expresion PTCOMA .)


state 113

    (66) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 66 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 66 (return -> RETURN expresion PTCOMA .)


state 114

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 156


state 115

    (26) lparame -> ID . DOSPT tipo

    DOSPT           shift and go to state 157


state 116

    (20) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 158
    COMA            shift and go to state 159


state 117

    (21) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 160
    LLAVEIZQ        shift and go to state 161


state 118

    (25) lparametros -> lparame .

    PARDER          reduce using rule 25 (lparametros -> lparame .)
    COMA            reduce using rule 25 (lparametros -> lparame .)


state 119

    (33) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 162

state 120

    (34) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 163
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 121

    (35) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 164


state 122

    (36) declaracion -> LET ID IGUAL expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 165
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 123

    (37) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 37 (asignacion -> ID IGUAL expresion PTCOMA .)


state 124

    (27) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 27 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 125

    (29) largumentos -> largumentos COMA . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 166
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 126

    (31) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (32) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    COMA            shift and go to state 167
    PARDER          shift and go to state 168
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 127

    (107) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (108) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (109) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (110) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (115) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (116) bloque_expresion -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 169
    bloque_expresion               shift and go to state 170
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 128

    (38) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (39) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (40) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (41) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 171
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 129

    (87) expresion -> expresion MAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 87 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 87 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 87 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 87 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 87 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 87 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 87 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! POR             [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 130

    (88) expresion -> expresion MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! POR             [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 131

    (89) expresion -> expresion POR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 89 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 89 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion POR expresion .)
    POR             reduce using rule 89 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 89 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 89 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 89 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 89 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 89 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 89 (expresion -> expresion POR expresion .)
    OR              reduce using rule 89 (expresion -> expresion POR expresion .)
    AND             reduce using rule 89 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 89 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 89 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 89 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 89 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! POR             [ shift and go to state 90 ]
  ! DIVIDIDO        [ shift and go to state 91 ]
  ! MODULO          [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 132

    (90) expresion -> expresion DIVIDIDO expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 90 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! POR             [ shift and go to state 90 ]
  ! DIVIDIDO        [ shift and go to state 91 ]
  ! MODULO          [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 133

    (91) expresion -> expresion MODULO expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 91 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 91 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 91 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 91 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 91 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 91 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 91 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 91 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 88 ]
  ! MENOS           [ shift and go to state 89 ]
  ! POR             [ shift and go to state 90 ]
  ! DIVIDIDO        [ shift and go to state 91 ]
  ! MODULO          [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 134

    (94) expresion -> expresion IGUALQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 94 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 135

    (95) expresion -> expresion NOIGUALQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 136

    (96) expresion -> expresion MENORQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 96 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 96 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 137

    (97) expresion -> expresion MAYORQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 97 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 97 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 138

    (98) expresion -> expresion MENORIQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 98 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 98 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 139

    (99) expresion -> expresion MAYORIQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92

  ! MAS             [ reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 93 ]
  ! NOIGUALQUE      [ shift and go to state 94 ]
  ! MENORQUE        [ shift and go to state 95 ]
  ! MAYORQUE        [ shift and go to state 96 ]
  ! MENORIQUE       [ shift and go to state 97 ]
  ! MAYORIQUE       [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 140

    (100) expresion -> expresion OR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 100 (expresion -> expresion OR expresion .)
    OR              reduce using rule 100 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 100 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 100 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 100 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    AND             shift and go to state 100

  ! MAS             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 99 ]


state 141

    (101) expresion -> expresion AND expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 101 (expresion -> expresion AND expresion .)
    OR              reduce using rule 101 (expresion -> expresion AND expresion .)
    AND             reduce using rule 101 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 101 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 101 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 101 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 101 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 101 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98

  ! MAS             [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 101 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 99 ]
  ! AND             [ shift and go to state 100 ]


state 142

    (82) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 172


state 143

    (83) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 173


state 144

    (92) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 174
    POWF            shift and go to state 175


state 145

    (104) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 104 (expresion -> PARIZQ expresion PARDER .)


state 146

    (118) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (119) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (122) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (123) opmatch_asig -> . cmatch_asig
    (124) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (125) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (126) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (127) bloque_match_asig -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 176
    imatch_asig                    shift and go to state 177
    opmatch_asig                   shift and go to state 178
    cmatch_asig                    shift and go to state 179
    bloque_match_asig              shift and go to state 180
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 147

    (129) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 181
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 148

    (58) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (55) bloque_match -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTO             shift and go to state 182
    IGUAL           reduce using rule 55 (bloque_match -> expresion .)
    BARRAS          reduce using rule 55 (bloque_match -> expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 149

    (46) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 183


state 150

    (47) imatch -> opmatch . COMA dmatch
    (48) opmatch -> opmatch . COMA cmatch
    (49) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 184


state 151

    (50) opmatch -> cmatch .

    COMA            reduce using rule 50 (opmatch -> cmatch .)


state 152

    (51) opmatch -> rmatch .

    COMA            reduce using rule 51 (opmatch -> rmatch .)


state 153

    (52) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (53) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (54) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 185
    BARRAS          shift and go to state 186


state 154

    (61) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 61 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 155

    (62) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 187
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 156

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 188
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 157

    (26) lparame -> ID DOSPT . tipo
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 189

state 158

    (20) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 190
    LLAVEIZQ        shift and go to state 191


state 159

    (24) lparametros -> lparametros COMA . lparame
    (26) lparame -> . ID DOSPT tipo

    ID              shift and go to state 115

    lparame                        shift and go to state 192

state 160

    (21) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 193


state 161

    (23) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 194
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 162

    (33) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 195


state 163

    (34) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 196
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 164

    (35) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 197
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 165

    (36) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 36 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 166

    (29) largumentos -> largumentos COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          reduce using rule 29 (largumentos -> largumentos COMA expresion .)
    COMA            reduce using rule 29 (largumentos -> largumentos COMA expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 167

    (31) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (73) expresiones -> . expresiones COMA expresion
    (74) expresiones -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 198
    expresiones                    shift and go to state 199
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 168

    (32) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 200


state 169

    (116) bloque_expresion -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 116 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 116 (bloque_expresion -> expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 170

    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (108) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (109) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (110) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (115) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 201
    PTCOMA          shift and go to state 202


state 171

    (38) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (39) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (40) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (41) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (45) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (42) lelseif -> . lelseif elseif
    (43) lelseif -> . elseif
    (44) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 205

    else                           shift and go to state 203
    lelseif                        shift and go to state 204
    elseif                         shift and go to state 206

state 172

    (82) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 207


state 173

    (83) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 208


state 174

    (92) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 209


state 175

    (93) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 210


state 176

    (127) bloque_match_asig -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 127 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 127 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 177

    (118) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 211


state 178

    (119) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (122) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 212


state 179

    (123) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 123 (opmatch_asig -> cmatch_asig .)


state 180

    (124) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (125) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (126) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 213
    BARRAS          shift and go to state 214


state 181

    (129) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 129 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 182

    (58) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 215


state 183

    (46) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 46 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 184

    (47) imatch -> opmatch COMA . dmatch
    (48) opmatch -> opmatch COMA . cmatch
    (49) opmatch -> opmatch COMA . rmatch
    (56) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (52) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (53) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (58) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (54) bloque_match -> . bloque_match BARRAS expresion
    (55) bloque_match -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 219
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    dmatch                         shift and go to state 216
    cmatch                         shift and go to state 217
    rmatch                         shift and go to state 218
    bloque_match                   shift and go to state 153
    expresion                      shift and go to state 148
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 185

    (52) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (53) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 220


state 186

    (54) bloque_match -> bloque_match BARRAS . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 221
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 187

    (62) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 62 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 188

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 222
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 189

    (26) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 26 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 26 (lparame -> ID DOSPT tipo .)


state 190

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 223


state 191

    (22) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 224
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 192

    (24) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 24 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 24 (lparametros -> lparametros COMA lparame .)


state 193

    (21) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 225

state 194

    (23) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 226
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 195

    (33) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 227
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 196

    (34) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 34 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 197

    (35) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 228
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 198

    (74) expresiones -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          reduce using rule 74 (expresiones -> expresion .)
    COMA            reduce using rule 74 (expresiones -> expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 199

    (31) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (73) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 230
    COMA            shift and go to state 229


state 200

    (32) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 32 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 201

    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (108) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (109) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (110) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (114) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (111) elseifa -> . elseifa lif
    (112) elseifa -> . lif
    (113) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 233

    elsea                          shift and go to state 231
    elseifa                        shift and go to state 232
    lif                            shift and go to state 234

state 202

    (115) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 235
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 203

    (39) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 39 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 204

    (40) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (41) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (42) lelseif -> lelseif . elseif
    (45) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (44) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 40 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 205

    else                           shift and go to state 236
    elseif                         shift and go to state 237

state 205

    (45) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (44) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 238
    IF              shift and go to state 239


state 206

    (43) lelseif -> elseif .

    ELSE            reduce using rule 43 (lelseif -> elseif .)
    FN              reduce using rule 43 (lelseif -> elseif .)
    LET             reduce using rule 43 (lelseif -> elseif .)
    PRINTLN         reduce using rule 43 (lelseif -> elseif .)
    ID              reduce using rule 43 (lelseif -> elseif .)
    IF              reduce using rule 43 (lelseif -> elseif .)
    MATCH           reduce using rule 43 (lelseif -> elseif .)
    LOOP            reduce using rule 43 (lelseif -> elseif .)
    WHILE           reduce using rule 43 (lelseif -> elseif .)
    BREAK           reduce using rule 43 (lelseif -> elseif .)
    RETURN          reduce using rule 43 (lelseif -> elseif .)
    CONTINUE        reduce using rule 43 (lelseif -> elseif .)
    $end            reduce using rule 43 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 43 (lelseif -> elseif .)
    COMA            reduce using rule 43 (lelseif -> elseif .)


state 207

    (82) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 82 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 208

    (83) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 83 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 209

    (92) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 240
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 210

    (93) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 241
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 211

    (118) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 118 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 212

    (119) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (122) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (120) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (121) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (124) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (125) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (126) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (127) bloque_match_asig -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 244
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    dmatch_asig                    shift and go to state 242
    cmatch_asig                    shift and go to state 243
    expresion                      shift and go to state 176
    bloque_match_asig              shift and go to state 180
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 213

    (124) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (125) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 245


state 214

    (126) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 246
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 215

    (58) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 247


state 216

    (47) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 47 (imatch -> opmatch COMA dmatch .)


state 217

    (48) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 48 (opmatch -> opmatch COMA cmatch .)


state 218

    (49) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 49 (opmatch -> opmatch COMA rmatch .)


state 219

    (56) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 248


state 220

    (52) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (53) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEIZQ        shift and go to state 249
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 250
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 221

    (54) bloque_match -> bloque_match BARRAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 54 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 54 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 222

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 223

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 251

state 224

    (22) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 252
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 225

    (21) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 253


state 226

    (23) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 23 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 227

    (33) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 254
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 228

    (35) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 35 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 229

    (73) expresiones -> expresiones COMA . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 255
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 230

    (31) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 256


state 231

    (108) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 108 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 232

    (109) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (110) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (111) elseifa -> elseifa . lif
    (114) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (113) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 109 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 233

    elsea                          shift and go to state 257
    lif                            shift and go to state 258

state 233

    (114) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (113) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 259
    IF              shift and go to state 260


state 234

    (112) elseifa -> lif .

    ELSE            reduce using rule 112 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 112 (elseifa -> lif .)
    MAS             reduce using rule 112 (elseifa -> lif .)
    MENOS           reduce using rule 112 (elseifa -> lif .)
    POR             reduce using rule 112 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 112 (elseifa -> lif .)
    MODULO          reduce using rule 112 (elseifa -> lif .)
    IGUALQUE        reduce using rule 112 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 112 (elseifa -> lif .)
    MENORQUE        reduce using rule 112 (elseifa -> lif .)
    MAYORQUE        reduce using rule 112 (elseifa -> lif .)
    MENORIQUE       reduce using rule 112 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 112 (elseifa -> lif .)
    OR              reduce using rule 112 (elseifa -> lif .)
    AND             reduce using rule 112 (elseifa -> lif .)
    PTCOMA          reduce using rule 112 (elseifa -> lif .)
    PARDER          reduce using rule 112 (elseifa -> lif .)
    COMA            reduce using rule 112 (elseifa -> lif .)
    PTO             reduce using rule 112 (elseifa -> lif .)
    IGUAL           reduce using rule 112 (elseifa -> lif .)
    BARRAS          reduce using rule 112 (elseifa -> lif .)
    LLAVEDER        reduce using rule 112 (elseifa -> lif .)


state 235

    (115) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 115 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 115 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 236

    (41) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 41 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 237

    (42) lelseif -> lelseif elseif .

    ELSE            reduce using rule 42 (lelseif -> lelseif elseif .)
    FN              reduce using rule 42 (lelseif -> lelseif elseif .)
    LET             reduce using rule 42 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 42 (lelseif -> lelseif elseif .)
    ID              reduce using rule 42 (lelseif -> lelseif elseif .)
    IF              reduce using rule 42 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 42 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 42 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 42 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 42 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 42 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 42 (lelseif -> lelseif elseif .)
    $end            reduce using rule 42 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 42 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 42 (lelseif -> lelseif elseif .)


state 238

    (45) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 261
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 239

    (44) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 262
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 240

    (92) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    COMA            shift and go to state 263
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 241

    (93) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    COMA            shift and go to state 264
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 242

    (119) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 119 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 243

    (122) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 122 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 244

    (120) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (121) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 265


state 245

    (124) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (125) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 266
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 267
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 246

    (126) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 126 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 126 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 247

    (58) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 268
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 248

    (56) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 269


state 249

    (52) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 270
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 250

    (53) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 53 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 251

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 271


state 252

    (22) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 22 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 253

    (21) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 272
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 254

    (33) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 33 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 255

    (73) expresiones -> expresiones COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          reduce using rule 73 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 73 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 256

    (31) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 31 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 257

    (110) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 110 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 258

    (111) elseifa -> elseifa lif .

    ELSE            reduce using rule 111 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 111 (elseifa -> elseifa lif .)
    MAS             reduce using rule 111 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 111 (elseifa -> elseifa lif .)
    POR             reduce using rule 111 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 111 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 111 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 111 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 111 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 111 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 111 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 111 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 111 (elseifa -> elseifa lif .)
    OR              reduce using rule 111 (elseifa -> elseifa lif .)
    AND             reduce using rule 111 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 111 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 111 (elseifa -> elseifa lif .)
    COMA            reduce using rule 111 (elseifa -> elseifa lif .)
    PTO             reduce using rule 111 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 111 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 111 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 111 (elseifa -> elseifa lif .)


state 259

    (114) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (115) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (116) bloque_expresion -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 273
    expresion                      shift and go to state 169
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 260

    (113) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 274
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 261

    (45) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 275
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 262

    (44) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 276
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 263

    (92) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 277
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 264

    (93) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 278
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 265

    (120) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (121) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 279


state 266

    (124) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (115) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (116) bloque_expresion -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 280
    expresion                      shift and go to state 169
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 267

    (125) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    COMA            reduce using rule 125 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 268

    (58) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 281
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 269

    (56) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (57) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEIZQ        shift and go to state 282
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 283
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 270

    (52) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 284
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 271

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 285
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 272

    (21) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 286
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 273

    (114) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (115) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 287
    PTCOMA          shift and go to state 202


state 274

    (113) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 288
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 275

    (45) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 45 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 276

    (44) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 289
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 277

    (92) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          shift and go to state 290
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 278

    (93) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    PARDER          shift and go to state 291
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 279

    (120) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (121) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 292
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 293
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 280

    (124) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (115) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 294
    PTCOMA          shift and go to state 202


state 281

    (58) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 295


state 282

    (56) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 296
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 283

    (57) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 57 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 284

    (52) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 52 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 285

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 297
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 286

    (21) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 21 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 287

    (114) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 114 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 288

    (113) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (115) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (116) bloque_expresion -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 169
    bloque_expresion               shift and go to state 298
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 289

    (44) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 299
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 290

    (92) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 92 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 291

    (93) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 93 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 292

    (120) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (115) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (116) bloque_expresion -> . expresion
    (75) expresion -> . ID
    (76) expresion -> . ENTERO
    (77) expresion -> . DECIMAL
    (78) expresion -> . TRUE
    (79) expresion -> . FALSE
    (80) expresion -> . tostring
    (81) expresion -> . toowned
    (84) expresion -> . STR
    (85) expresion -> . CADENA
    (86) expresion -> . CARACTER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVIDIDO expresion
    (91) expresion -> . expresion MODULO expresion
    (92) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (93) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (94) expresion -> . expresion IGUALQUE expresion
    (95) expresion -> . expresion NOIGUALQUE expresion
    (96) expresion -> . expresion MENORQUE expresion
    (97) expresion -> . expresion MAYORQUE expresion
    (98) expresion -> . expresion MENORIQUE expresion
    (99) expresion -> . expresion MAYORIQUE expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . expresion AND expresion
    (102) expresion -> . MENOS expresion
    (103) expresion -> . NOT expresion
    (104) expresion -> . PARIZQ expresion PARDER
    (105) expresion -> . llamada_funciones
    (106) expresion -> . if_asig
    (117) expresion -> . match_asig
    (128) expresion -> . loop_asig
    (82) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (83) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (67) tipo -> . I64
    (68) tipo -> . F64
    (69) tipo -> . BOOL
    (70) tipo -> . CHAR
    (71) tipo -> . STRING
    (72) tipo -> . SIGNOI STR
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (108) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (109) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (110) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (118) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (129) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 300
    expresion                      shift and go to state 169
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 293

    (121) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVIDIDO expresion
    (91) expresion -> expresion . MODULO expresion
    (94) expresion -> expresion . IGUALQUE expresion
    (95) expresion -> expresion . NOIGUALQUE expresion
    (96) expresion -> expresion . MENORQUE expresion
    (97) expresion -> expresion . MAYORQUE expresion
    (98) expresion -> expresion . MENORIQUE expresion
    (99) expresion -> expresion . MAYORIQUE expresion
    (100) expresion -> expresion . OR expresion
    (101) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 121 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 88
    MENOS           shift and go to state 89
    POR             shift and go to state 90
    DIVIDIDO        shift and go to state 91
    MODULO          shift and go to state 92
    IGUALQUE        shift and go to state 93
    NOIGUALQUE      shift and go to state 94
    MENORQUE        shift and go to state 95
    MAYORQUE        shift and go to state 96
    MENORIQUE       shift and go to state 97
    MAYORIQUE       shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 294

    (124) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 124 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 295

    (58) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (59) rrmatch -> . instruccion
    (60) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEIZQ        shift and go to state 303
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    rrmatch                        shift and go to state 301
    instruccion                    shift and go to state 302
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 296

    (56) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 304
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 297

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 298

    (113) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (115) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 305
    PTCOMA          shift and go to state 202


state 299

    (44) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 44 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 300

    (120) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (115) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 306
    PTCOMA          shift and go to state 202


state 301

    (58) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 58 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 302

    (59) rrmatch -> instruccion .

    COMA            reduce using rule 59 (rrmatch -> instruccion .)


state 303

    (60) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 307
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 304

    (56) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 56 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 305

    (113) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 113 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 306

    (120) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 120 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 307

    (60) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (33) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (34) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (35) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (36) declaracion -> . LET ID IGUAL expresion PTCOMA
    (31) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (32) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (37) asignacion -> . ID IGUAL expresion PTCOMA
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (39) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (40) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (41) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (46) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (61) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (62) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (63) break -> . BREAK PTCOMA
    (64) break -> . BREAK expresion PTCOMA
    (66) return -> . RETURN expresion PTCOMA
    (65) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (22) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (28) llamada_funciones -> . ID PARIZQ PARDER

    LLAVEDER        shift and go to state 308
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 308

    (60) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 60 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 50 resolved as shift
