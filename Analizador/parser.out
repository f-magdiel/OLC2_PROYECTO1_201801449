Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 22    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 23    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 24    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 25    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 26    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 27    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 28    lparametros -> lparametros COMA lparame
Rule 29    lparametros -> lparame
Rule 30    lparame -> ID DOSPT tipo
Rule 31    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 32    llamada_funciones -> ID PARIZQ PARDER
Rule 33    largumentos -> largumentos COMA expresion
Rule 34    largumentos -> expresion
Rule 35    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 36    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 37    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 38    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 39    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 40    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 41    asignacion -> ID IGUAL expresion PTCOMA
Rule 42    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 43    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 44    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 45    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 46    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 47    lelseif -> lelseif elseif
Rule 48    lelseif -> elseif
Rule 49    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 50    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 51    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 52    imatch -> opmatch COMA dmatch
Rule 53    opmatch -> opmatch COMA cmatch
Rule 54    opmatch -> opmatch COMA rmatch
Rule 55    opmatch -> cmatch
Rule 56    opmatch -> rmatch
Rule 57    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 58    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 59    bloque_match -> bloque_match BARRAS expresion
Rule 60    bloque_match -> expresion
Rule 61    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 62    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 63    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 64    rrmatch -> instruccion
Rule 65    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 66    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 67    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 68    break -> BREAK PTCOMA
Rule 69    break -> BREAK expresion PTCOMA
Rule 70    continue -> CONTINUE PTCOMA
Rule 71    return -> RETURN expresion PTCOMA
Rule 72    tipo -> I64
Rule 73    tipo -> F64
Rule 74    tipo -> BOOL
Rule 75    tipo -> CHAR
Rule 76    tipo -> STRING
Rule 77    tipo -> USIZE
Rule 78    tipo -> SIGNOI STR
Rule 79    expresiones -> expresiones COMA expresion
Rule 80    expresiones -> expresion
Rule 81    expresion -> ID
Rule 82    expresion -> ENTERO
Rule 83    expresion -> DECIMAL
Rule 84    expresion -> TRUE
Rule 85    expresion -> FALSE
Rule 86    expresion -> tostring
Rule 87    expresion -> toowned
Rule 88    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 89    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 90    expresion -> STR
Rule 91    expresion -> CADENA
Rule 92    expresion -> CARACTER
Rule 93    expresion -> expresion MAS expresion
Rule 94    expresion -> expresion MENOS expresion
Rule 95    expresion -> expresion POR expresion
Rule 96    expresion -> expresion DIVIDIDO expresion
Rule 97    expresion -> expresion MODULO expresion
Rule 98    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 99    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 100   expresion -> expresion IGUALQUE expresion
Rule 101   expresion -> expresion NOIGUALQUE expresion
Rule 102   expresion -> expresion MENORQUE expresion
Rule 103   expresion -> expresion MAYORQUE expresion
Rule 104   expresion -> expresion MENORIQUE expresion
Rule 105   expresion -> expresion MAYORIQUE expresion
Rule 106   expresion -> expresion OR expresion
Rule 107   expresion -> expresion AND expresion
Rule 108   expresion -> MENOS expresion
Rule 109   expresion -> NOT expresion
Rule 110   expresion -> PARIZQ expresion PARDER
Rule 111   expresion -> llamada_funciones
Rule 112   expresion -> CORIZQ expresiones CORDER
Rule 113   expresion -> ID lindices
Rule 114   lindices -> lindices CORIZQ expresion CORDER
Rule 115   lindices -> CORIZQ expresion CORDER
Rule 116   expresion -> if_asig
Rule 117   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 118   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 119   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 120   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 121   elseifa -> elseifa lif
Rule 122   elseifa -> lif
Rule 123   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 124   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 125   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 126   bloque_expresion -> expresion
Rule 127   expresion -> match_asig
Rule 128   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 129   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 130   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 131   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 132   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 133   opmatch_asig -> cmatch_asig
Rule 134   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 135   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 136   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 137   bloque_match_asig -> expresion
Rule 138   expresion -> loop_asig
Rule 139   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 107
AS                   : 
BARRAS               : 59 136
BOOL                 : 74
BREAK                : 68 69
CADENA               : 88 89 91
CARACTER             : 92
CHAR                 : 75
COMA                 : 28 33 35 52 53 54 79 98 99 129 132
CONTINUE             : 70
CORDER               : 22 23 112 114 115
CORIZQ               : 22 23 112 114 115
DECIMAL              : 83
DIVIDIDO             : 96
DOSPT                : 21 30 37 39 98 98 99 99
ELSE                 : 49 50 123 124
ENTERO               : 82
F64                  : 73
FALSE                : 85
FN                   : 5 24 25 26 27
GUIONB               : 61 62 130 131
I64                  : 72
ID                   : 21 24 25 26 27 30 31 32 37 38 39 40 41 42 81 113
IF                   : 43 44 45 46 49 117 118 119 120 123
IGUAL                : 21 37 38 39 40 41 42 57 58 61 62 63 63 130 131 134 135
IGUALQUE             : 100
LET                  : 21 37 38 39 40
LLAVEDER             : 5 24 25 26 27 43 44 45 46 49 50 51 57 61 65 66 67 117 118 119 120 123 124 128 130 134 139
LLAVEIZQ             : 5 24 25 26 27 43 44 45 46 49 50 51 57 61 65 66 67 117 118 119 120 123 124 128 130 134 139
LOOP                 : 66 139
MAIN                 : 5
MAS                  : 93
MATCH                : 51 128
MAYORIQUE            : 105
MAYORQUE             : 24 25 57 58 61 62 63 103 130 131 134 135
MENORIQUE            : 104
MENORQUE             : 102
MENOS                : 24 25 94 108
MODULO               : 97
MUT                  : 21 37 38
NOIGUALQUE           : 101
NOT                  : 35 36 109
OR                   : 106
PARDER               : 5 24 25 26 27 31 32 35 36 88 89 98 99 110
PARIZQ               : 5 24 25 26 27 31 32 35 36 88 89 98 99 110
POR                  : 95
POW                  : 98
POWF                 : 99
PRINTLN              : 35 36
PTCOMA               : 19 21 22 23 35 36 37 38 39 40 41 42 68 69 70 71 125
PTO                  : 63 63 88 89
RETURN               : 71
SIGNOI               : 78
STR                  : 78 90
STRING               : 76
TOOWNED              : 89
TOSTRING             : 88
TRUE                 : 84
USIZE                : 77
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 117 118 119 120 123 124 125 130 134
bloque_match         : 57 58 59
bloque_match_asig    : 134 135 136
break                : 15
cmatch               : 53 55
cmatch_asig          : 132 133
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
dmatch               : 52
dmatch_asig          : 129
else                 : 44 46
elsea                : 118 120
elseif               : 47 48
elseifa              : 119 120 121
expresion            : 21 22 23 33 34 35 36 37 38 39 40 41 42 43 44 45 46 49 51 59 60 63 63 67 69 71 79 80 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 109 110 114 115 117 118 119 120 123 125 126 128 131 135 136 137
expresiones          : 35 79 112
funciones            : 18
if                   : 11
if_asig              : 116
imatch               : 51
imatch_asig          : 128
imprimir             : 9
inicio               : 0
instruccion          : 6 7 58 62 64
instrucciones        : 1 1 2 3 5 6 24 25 26 27 43 44 45 46 49 50 57 61 65 66 67 139
largumentos          : 31 33
lelseif              : 45 46 47
lif                  : 121 122
lindices             : 42 113 114
llamada_funciones    : 19 111
loop                 : 13
loop_asig            : 138
lparame              : 28 29
lparametros          : 24 26 28
main                 : 1 2 3 4
match                : 12
match_asig           : 127
opmatch              : 52 53 54
opmatch_asig         : 129 132
return               : 16
rmatch               : 54 56
rrmatch              : 63
tipo                 : 23 24 25 30 37 39 98 99
tipo_arreglo         : 21 22
toowned              : 87
tostring             : 86
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28

    main                           shift and go to state 29
    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 31
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 33
    ID              shift and go to state 34


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 35


state 18

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 19

    (37) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> LET . ID IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    MUT             shift and go to state 36
    ID              shift and go to state 37


state 20

    (41) asignacion -> ID . IGUAL expresion PTCOMA
    (42) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (31) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (32) llamada_funciones -> ID . PARIZQ PARDER
    (114) lindices -> . lindices CORIZQ expresion CORDER
    (115) lindices -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 38
    PARIZQ          shift and go to state 40
    CORIZQ          shift and go to state 41

    lindices                       shift and go to state 39

state 21

    (35) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 42


state 22

    (43) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 44
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 23

    (51) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 73
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 24

    (66) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 74


state 25

    (67) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 75
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 26

    (68) break -> BREAK . PTCOMA
    (69) break -> BREAK . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 76
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 77
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 27

    (71) return -> RETURN . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 78
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 28

    (70) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 79


state 29

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 80
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 30

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 31

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 32

    (24) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 34


state 33

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 81


state 34

    (24) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 82


state 35

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 36

    (37) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    ID              shift and go to state 83


state 37

    (39) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 84
    IGUAL           shift and go to state 85


state 38

    (41) asignacion -> ID IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 86
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 39

    (42) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (114) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 87
    CORIZQ          shift and go to state 88


state 40

    (31) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (32) llamada_funciones -> ID PARIZQ . PARDER
    (33) largumentos -> . largumentos COMA expresion
    (34) largumentos -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 90
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    largumentos                    shift and go to state 89
    expresion                      shift and go to state 91
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 41

    (115) lindices -> CORIZQ . expresion CORDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 92
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 42

    (35) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 93


state 43

    (117) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 94
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 44

    (43) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (44) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 95
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 45

    (81) expresion -> ID .
    (113) expresion -> ID . lindices
    (31) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (32) llamada_funciones -> ID . PARIZQ PARDER
    (114) lindices -> . lindices CORIZQ expresion CORDER
    (115) lindices -> . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 81 (expresion -> ID .)
    MAS             reduce using rule 81 (expresion -> ID .)
    MENOS           reduce using rule 81 (expresion -> ID .)
    POR             reduce using rule 81 (expresion -> ID .)
    DIVIDIDO        reduce using rule 81 (expresion -> ID .)
    MODULO          reduce using rule 81 (expresion -> ID .)
    IGUALQUE        reduce using rule 81 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 81 (expresion -> ID .)
    MENORQUE        reduce using rule 81 (expresion -> ID .)
    MAYORQUE        reduce using rule 81 (expresion -> ID .)
    MENORIQUE       reduce using rule 81 (expresion -> ID .)
    MAYORIQUE       reduce using rule 81 (expresion -> ID .)
    OR              reduce using rule 81 (expresion -> ID .)
    AND             reduce using rule 81 (expresion -> ID .)
    PTCOMA          reduce using rule 81 (expresion -> ID .)
    PARDER          reduce using rule 81 (expresion -> ID .)
    COMA            reduce using rule 81 (expresion -> ID .)
    CORDER          reduce using rule 81 (expresion -> ID .)
    PTO             reduce using rule 81 (expresion -> ID .)
    IGUAL           reduce using rule 81 (expresion -> ID .)
    BARRAS          reduce using rule 81 (expresion -> ID .)
    LLAVEDER        reduce using rule 81 (expresion -> ID .)
    PARIZQ          shift and go to state 40
    CORIZQ          shift and go to state 41

    lindices                       shift and go to state 109

state 46

    (82) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 82 (expresion -> ENTERO .)
    MAS             reduce using rule 82 (expresion -> ENTERO .)
    MENOS           reduce using rule 82 (expresion -> ENTERO .)
    POR             reduce using rule 82 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 82 (expresion -> ENTERO .)
    MODULO          reduce using rule 82 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 82 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 82 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 82 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 82 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 82 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 82 (expresion -> ENTERO .)
    OR              reduce using rule 82 (expresion -> ENTERO .)
    AND             reduce using rule 82 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 82 (expresion -> ENTERO .)
    PARDER          reduce using rule 82 (expresion -> ENTERO .)
    COMA            reduce using rule 82 (expresion -> ENTERO .)
    CORDER          reduce using rule 82 (expresion -> ENTERO .)
    PTO             reduce using rule 82 (expresion -> ENTERO .)
    IGUAL           reduce using rule 82 (expresion -> ENTERO .)
    BARRAS          reduce using rule 82 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 82 (expresion -> ENTERO .)


state 47

    (83) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 83 (expresion -> DECIMAL .)
    MAS             reduce using rule 83 (expresion -> DECIMAL .)
    MENOS           reduce using rule 83 (expresion -> DECIMAL .)
    POR             reduce using rule 83 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 83 (expresion -> DECIMAL .)
    MODULO          reduce using rule 83 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 83 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 83 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 83 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 83 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 83 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 83 (expresion -> DECIMAL .)
    OR              reduce using rule 83 (expresion -> DECIMAL .)
    AND             reduce using rule 83 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 83 (expresion -> DECIMAL .)
    PARDER          reduce using rule 83 (expresion -> DECIMAL .)
    COMA            reduce using rule 83 (expresion -> DECIMAL .)
    CORDER          reduce using rule 83 (expresion -> DECIMAL .)
    PTO             reduce using rule 83 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 83 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 83 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 83 (expresion -> DECIMAL .)


state 48

    (84) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 84 (expresion -> TRUE .)
    MAS             reduce using rule 84 (expresion -> TRUE .)
    MENOS           reduce using rule 84 (expresion -> TRUE .)
    POR             reduce using rule 84 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 84 (expresion -> TRUE .)
    MODULO          reduce using rule 84 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 84 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 84 (expresion -> TRUE .)
    MENORQUE        reduce using rule 84 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 84 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 84 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 84 (expresion -> TRUE .)
    OR              reduce using rule 84 (expresion -> TRUE .)
    AND             reduce using rule 84 (expresion -> TRUE .)
    PTCOMA          reduce using rule 84 (expresion -> TRUE .)
    PARDER          reduce using rule 84 (expresion -> TRUE .)
    COMA            reduce using rule 84 (expresion -> TRUE .)
    CORDER          reduce using rule 84 (expresion -> TRUE .)
    PTO             reduce using rule 84 (expresion -> TRUE .)
    IGUAL           reduce using rule 84 (expresion -> TRUE .)
    BARRAS          reduce using rule 84 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 84 (expresion -> TRUE .)


state 49

    (85) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 85 (expresion -> FALSE .)
    MAS             reduce using rule 85 (expresion -> FALSE .)
    MENOS           reduce using rule 85 (expresion -> FALSE .)
    POR             reduce using rule 85 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 85 (expresion -> FALSE .)
    MODULO          reduce using rule 85 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 85 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 85 (expresion -> FALSE .)
    MENORQUE        reduce using rule 85 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 85 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 85 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 85 (expresion -> FALSE .)
    OR              reduce using rule 85 (expresion -> FALSE .)
    AND             reduce using rule 85 (expresion -> FALSE .)
    PTCOMA          reduce using rule 85 (expresion -> FALSE .)
    PARDER          reduce using rule 85 (expresion -> FALSE .)
    COMA            reduce using rule 85 (expresion -> FALSE .)
    CORDER          reduce using rule 85 (expresion -> FALSE .)
    PTO             reduce using rule 85 (expresion -> FALSE .)
    IGUAL           reduce using rule 85 (expresion -> FALSE .)
    BARRAS          reduce using rule 85 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 85 (expresion -> FALSE .)


state 50

    (86) expresion -> tostring .

    LLAVEIZQ        reduce using rule 86 (expresion -> tostring .)
    MAS             reduce using rule 86 (expresion -> tostring .)
    MENOS           reduce using rule 86 (expresion -> tostring .)
    POR             reduce using rule 86 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 86 (expresion -> tostring .)
    MODULO          reduce using rule 86 (expresion -> tostring .)
    IGUALQUE        reduce using rule 86 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 86 (expresion -> tostring .)
    MENORQUE        reduce using rule 86 (expresion -> tostring .)
    MAYORQUE        reduce using rule 86 (expresion -> tostring .)
    MENORIQUE       reduce using rule 86 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 86 (expresion -> tostring .)
    OR              reduce using rule 86 (expresion -> tostring .)
    AND             reduce using rule 86 (expresion -> tostring .)
    PTCOMA          reduce using rule 86 (expresion -> tostring .)
    PARDER          reduce using rule 86 (expresion -> tostring .)
    COMA            reduce using rule 86 (expresion -> tostring .)
    CORDER          reduce using rule 86 (expresion -> tostring .)
    PTO             reduce using rule 86 (expresion -> tostring .)
    IGUAL           reduce using rule 86 (expresion -> tostring .)
    BARRAS          reduce using rule 86 (expresion -> tostring .)
    LLAVEDER        reduce using rule 86 (expresion -> tostring .)


state 51

    (87) expresion -> toowned .

    LLAVEIZQ        reduce using rule 87 (expresion -> toowned .)
    MAS             reduce using rule 87 (expresion -> toowned .)
    MENOS           reduce using rule 87 (expresion -> toowned .)
    POR             reduce using rule 87 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 87 (expresion -> toowned .)
    MODULO          reduce using rule 87 (expresion -> toowned .)
    IGUALQUE        reduce using rule 87 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 87 (expresion -> toowned .)
    MENORQUE        reduce using rule 87 (expresion -> toowned .)
    MAYORQUE        reduce using rule 87 (expresion -> toowned .)
    MENORIQUE       reduce using rule 87 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 87 (expresion -> toowned .)
    OR              reduce using rule 87 (expresion -> toowned .)
    AND             reduce using rule 87 (expresion -> toowned .)
    PTCOMA          reduce using rule 87 (expresion -> toowned .)
    PARDER          reduce using rule 87 (expresion -> toowned .)
    COMA            reduce using rule 87 (expresion -> toowned .)
    CORDER          reduce using rule 87 (expresion -> toowned .)
    PTO             reduce using rule 87 (expresion -> toowned .)
    IGUAL           reduce using rule 87 (expresion -> toowned .)
    BARRAS          reduce using rule 87 (expresion -> toowned .)
    LLAVEDER        reduce using rule 87 (expresion -> toowned .)


state 52

    (90) expresion -> STR .

    LLAVEIZQ        reduce using rule 90 (expresion -> STR .)
    MAS             reduce using rule 90 (expresion -> STR .)
    MENOS           reduce using rule 90 (expresion -> STR .)
    POR             reduce using rule 90 (expresion -> STR .)
    DIVIDIDO        reduce using rule 90 (expresion -> STR .)
    MODULO          reduce using rule 90 (expresion -> STR .)
    IGUALQUE        reduce using rule 90 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 90 (expresion -> STR .)
    MENORQUE        reduce using rule 90 (expresion -> STR .)
    MAYORQUE        reduce using rule 90 (expresion -> STR .)
    MENORIQUE       reduce using rule 90 (expresion -> STR .)
    MAYORIQUE       reduce using rule 90 (expresion -> STR .)
    OR              reduce using rule 90 (expresion -> STR .)
    AND             reduce using rule 90 (expresion -> STR .)
    PTCOMA          reduce using rule 90 (expresion -> STR .)
    PARDER          reduce using rule 90 (expresion -> STR .)
    COMA            reduce using rule 90 (expresion -> STR .)
    CORDER          reduce using rule 90 (expresion -> STR .)
    PTO             reduce using rule 90 (expresion -> STR .)
    IGUAL           reduce using rule 90 (expresion -> STR .)
    BARRAS          reduce using rule 90 (expresion -> STR .)
    LLAVEDER        reduce using rule 90 (expresion -> STR .)


state 53

    (91) expresion -> CADENA .
    (88) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (89) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 91 (expresion -> CADENA .)
    MAS             reduce using rule 91 (expresion -> CADENA .)
    MENOS           reduce using rule 91 (expresion -> CADENA .)
    POR             reduce using rule 91 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 91 (expresion -> CADENA .)
    MODULO          reduce using rule 91 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 91 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 91 (expresion -> CADENA .)
    MENORQUE        reduce using rule 91 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 91 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 91 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 91 (expresion -> CADENA .)
    OR              reduce using rule 91 (expresion -> CADENA .)
    AND             reduce using rule 91 (expresion -> CADENA .)
    PTCOMA          reduce using rule 91 (expresion -> CADENA .)
    PARDER          reduce using rule 91 (expresion -> CADENA .)
    COMA            reduce using rule 91 (expresion -> CADENA .)
    CORDER          reduce using rule 91 (expresion -> CADENA .)
    IGUAL           reduce using rule 91 (expresion -> CADENA .)
    BARRAS          reduce using rule 91 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 91 (expresion -> CADENA .)
    PTO             shift and go to state 110

  ! PTO             [ reduce using rule 91 (expresion -> CADENA .) ]


state 54

    (92) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 92 (expresion -> CARACTER .)
    MAS             reduce using rule 92 (expresion -> CARACTER .)
    MENOS           reduce using rule 92 (expresion -> CARACTER .)
    POR             reduce using rule 92 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 92 (expresion -> CARACTER .)
    MODULO          reduce using rule 92 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 92 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 92 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 92 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 92 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 92 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 92 (expresion -> CARACTER .)
    OR              reduce using rule 92 (expresion -> CARACTER .)
    AND             reduce using rule 92 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 92 (expresion -> CARACTER .)
    PARDER          reduce using rule 92 (expresion -> CARACTER .)
    COMA            reduce using rule 92 (expresion -> CARACTER .)
    CORDER          reduce using rule 92 (expresion -> CARACTER .)
    PTO             reduce using rule 92 (expresion -> CARACTER .)
    IGUAL           reduce using rule 92 (expresion -> CARACTER .)
    BARRAS          reduce using rule 92 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 92 (expresion -> CARACTER .)


state 55

    (108) expresion -> MENOS . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 111
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 56

    (98) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 112


state 57

    (110) expresion -> PARIZQ . expresion PARDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 113
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 58

    (109) expresion -> NOT . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 114
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 59

    (111) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 111 (expresion -> llamada_funciones .)
    MAS             reduce using rule 111 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 111 (expresion -> llamada_funciones .)
    POR             reduce using rule 111 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 111 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 111 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 111 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 111 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 111 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 111 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 111 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 111 (expresion -> llamada_funciones .)
    OR              reduce using rule 111 (expresion -> llamada_funciones .)
    AND             reduce using rule 111 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 111 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 111 (expresion -> llamada_funciones .)
    COMA            reduce using rule 111 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 111 (expresion -> llamada_funciones .)
    PTO             reduce using rule 111 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 111 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 111 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 111 (expresion -> llamada_funciones .)


state 60

    (112) expresion -> CORIZQ . expresiones CORDER
    (79) expresiones -> . expresiones COMA expresion
    (80) expresiones -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresiones                    shift and go to state 115
    expresion                      shift and go to state 116
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 61

    (116) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 116 (expresion -> if_asig .)
    MAS             reduce using rule 116 (expresion -> if_asig .)
    MENOS           reduce using rule 116 (expresion -> if_asig .)
    POR             reduce using rule 116 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 116 (expresion -> if_asig .)
    MODULO          reduce using rule 116 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 116 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 116 (expresion -> if_asig .)
    MENORQUE        reduce using rule 116 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 116 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 116 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 116 (expresion -> if_asig .)
    OR              reduce using rule 116 (expresion -> if_asig .)
    AND             reduce using rule 116 (expresion -> if_asig .)
    PTCOMA          reduce using rule 116 (expresion -> if_asig .)
    PARDER          reduce using rule 116 (expresion -> if_asig .)
    COMA            reduce using rule 116 (expresion -> if_asig .)
    CORDER          reduce using rule 116 (expresion -> if_asig .)
    PTO             reduce using rule 116 (expresion -> if_asig .)
    IGUAL           reduce using rule 116 (expresion -> if_asig .)
    BARRAS          reduce using rule 116 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 116 (expresion -> if_asig .)


state 62

    (127) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 127 (expresion -> match_asig .)
    MAS             reduce using rule 127 (expresion -> match_asig .)
    MENOS           reduce using rule 127 (expresion -> match_asig .)
    POR             reduce using rule 127 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 127 (expresion -> match_asig .)
    MODULO          reduce using rule 127 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 127 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 127 (expresion -> match_asig .)
    MENORQUE        reduce using rule 127 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 127 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 127 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 127 (expresion -> match_asig .)
    OR              reduce using rule 127 (expresion -> match_asig .)
    AND             reduce using rule 127 (expresion -> match_asig .)
    PTCOMA          reduce using rule 127 (expresion -> match_asig .)
    PARDER          reduce using rule 127 (expresion -> match_asig .)
    COMA            reduce using rule 127 (expresion -> match_asig .)
    CORDER          reduce using rule 127 (expresion -> match_asig .)
    PTO             reduce using rule 127 (expresion -> match_asig .)
    IGUAL           reduce using rule 127 (expresion -> match_asig .)
    BARRAS          reduce using rule 127 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 127 (expresion -> match_asig .)


state 63

    (138) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 138 (expresion -> loop_asig .)
    MAS             reduce using rule 138 (expresion -> loop_asig .)
    MENOS           reduce using rule 138 (expresion -> loop_asig .)
    POR             reduce using rule 138 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 138 (expresion -> loop_asig .)
    MODULO          reduce using rule 138 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 138 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 138 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 138 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 138 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 138 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 138 (expresion -> loop_asig .)
    OR              reduce using rule 138 (expresion -> loop_asig .)
    AND             reduce using rule 138 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 138 (expresion -> loop_asig .)
    PARDER          reduce using rule 138 (expresion -> loop_asig .)
    COMA            reduce using rule 138 (expresion -> loop_asig .)
    CORDER          reduce using rule 138 (expresion -> loop_asig .)
    PTO             reduce using rule 138 (expresion -> loop_asig .)
    IGUAL           reduce using rule 138 (expresion -> loop_asig .)
    BARRAS          reduce using rule 138 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 138 (expresion -> loop_asig .)


state 64

    (72) tipo -> I64 .

    DOSPT           reduce using rule 72 (tipo -> I64 .)
    IGUAL           reduce using rule 72 (tipo -> I64 .)
    PARDER          reduce using rule 72 (tipo -> I64 .)
    COMA            reduce using rule 72 (tipo -> I64 .)
    PTCOMA          reduce using rule 72 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 72 (tipo -> I64 .)


state 65

    (73) tipo -> F64 .

    DOSPT           reduce using rule 73 (tipo -> F64 .)
    IGUAL           reduce using rule 73 (tipo -> F64 .)
    PARDER          reduce using rule 73 (tipo -> F64 .)
    COMA            reduce using rule 73 (tipo -> F64 .)
    PTCOMA          reduce using rule 73 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 73 (tipo -> F64 .)


state 66

    (74) tipo -> BOOL .

    DOSPT           reduce using rule 74 (tipo -> BOOL .)
    IGUAL           reduce using rule 74 (tipo -> BOOL .)
    PARDER          reduce using rule 74 (tipo -> BOOL .)
    COMA            reduce using rule 74 (tipo -> BOOL .)
    PTCOMA          reduce using rule 74 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 74 (tipo -> BOOL .)


state 67

    (75) tipo -> CHAR .

    DOSPT           reduce using rule 75 (tipo -> CHAR .)
    IGUAL           reduce using rule 75 (tipo -> CHAR .)
    PARDER          reduce using rule 75 (tipo -> CHAR .)
    COMA            reduce using rule 75 (tipo -> CHAR .)
    PTCOMA          reduce using rule 75 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 75 (tipo -> CHAR .)


state 68

    (76) tipo -> STRING .

    DOSPT           reduce using rule 76 (tipo -> STRING .)
    IGUAL           reduce using rule 76 (tipo -> STRING .)
    PARDER          reduce using rule 76 (tipo -> STRING .)
    COMA            reduce using rule 76 (tipo -> STRING .)
    PTCOMA          reduce using rule 76 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 76 (tipo -> STRING .)


state 69

    (77) tipo -> USIZE .

    DOSPT           reduce using rule 77 (tipo -> USIZE .)
    IGUAL           reduce using rule 77 (tipo -> USIZE .)
    PARDER          reduce using rule 77 (tipo -> USIZE .)
    COMA            reduce using rule 77 (tipo -> USIZE .)
    PTCOMA          reduce using rule 77 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 77 (tipo -> USIZE .)


state 70

    (78) tipo -> SIGNOI . STR

    STR             shift and go to state 117


state 71

    (128) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 118
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 72

    (139) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 119


state 73

    (51) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 120
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 74

    (66) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 121
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 75

    (67) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 122
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 76

    (68) break -> BREAK PTCOMA .

    FN              reduce using rule 68 (break -> BREAK PTCOMA .)
    LET             reduce using rule 68 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 68 (break -> BREAK PTCOMA .)
    ID              reduce using rule 68 (break -> BREAK PTCOMA .)
    IF              reduce using rule 68 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 68 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 68 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 68 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 68 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 68 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 68 (break -> BREAK PTCOMA .)
    $end            reduce using rule 68 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 68 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 68 (break -> BREAK PTCOMA .)


state 77

    (69) break -> BREAK expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 123
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 78

    (71) return -> RETURN expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 124
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 79

    (70) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 70 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 70 (continue -> CONTINUE PTCOMA .)


state 80

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 81

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 125


state 82

    (24) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) lparametros -> . lparametros COMA lparame
    (29) lparametros -> . lparame
    (30) lparame -> . ID DOSPT tipo

    PARDER          shift and go to state 128
    ID              shift and go to state 126

    lparametros                    shift and go to state 127
    lparame                        shift and go to state 129

state 83

    (37) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA

    DOSPT           shift and go to state 130
    IGUAL           shift and go to state 131


state 84

    (39) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR

    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70

    tipo                           shift and go to state 132

state 85

    (40) declaracion -> LET ID IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 133
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 86

    (41) asignacion -> ID IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 134
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 87

    (42) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 135
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 88

    (114) lindices -> lindices CORIZQ . expresion CORDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 136
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 89

    (31) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (33) largumentos -> largumentos . COMA expresion

    PARDER          shift and go to state 137
    COMA            shift and go to state 138


state 90

    (32) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)


state 91

    (34) largumentos -> expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PARDER          reduce using rule 34 (largumentos -> expresion .)
    COMA            reduce using rule 34 (largumentos -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 92

    (115) lindices -> CORIZQ expresion . CORDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          shift and go to state 139
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 93

    (35) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 140
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 94

    (117) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 141
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 95

    (43) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (44) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (45) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (46) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 142
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 96

    (93) expresion -> expresion MAS . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 143
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 97

    (94) expresion -> expresion MENOS . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 144
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 98

    (95) expresion -> expresion POR . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 145
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 99

    (96) expresion -> expresion DIVIDIDO . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 146
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 100

    (97) expresion -> expresion MODULO . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 147
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 101

    (100) expresion -> expresion IGUALQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 148
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 102

    (101) expresion -> expresion NOIGUALQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 149
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 103

    (102) expresion -> expresion MENORQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 150
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 104

    (103) expresion -> expresion MAYORQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 151
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 105

    (104) expresion -> expresion MENORIQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 152
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 106

    (105) expresion -> expresion MAYORIQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 153
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 107

    (106) expresion -> expresion OR . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 154
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 108

    (107) expresion -> expresion AND . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 155
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 109

    (113) expresion -> ID lindices .
    (114) lindices -> lindices . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 113 (expresion -> ID lindices .)
    MAS             reduce using rule 113 (expresion -> ID lindices .)
    MENOS           reduce using rule 113 (expresion -> ID lindices .)
    POR             reduce using rule 113 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 113 (expresion -> ID lindices .)
    MODULO          reduce using rule 113 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 113 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 113 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 113 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 113 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 113 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 113 (expresion -> ID lindices .)
    OR              reduce using rule 113 (expresion -> ID lindices .)
    AND             reduce using rule 113 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 113 (expresion -> ID lindices .)
    PARDER          reduce using rule 113 (expresion -> ID lindices .)
    COMA            reduce using rule 113 (expresion -> ID lindices .)
    CORDER          reduce using rule 113 (expresion -> ID lindices .)
    PTO             reduce using rule 113 (expresion -> ID lindices .)
    IGUAL           reduce using rule 113 (expresion -> ID lindices .)
    BARRAS          reduce using rule 113 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 113 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 88


state 110

    (88) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (89) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 156
    TOOWNED         shift and go to state 157


state 111

    (108) expresion -> MENOS expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 108 (expresion -> MENOS expresion .)
    MAS             reduce using rule 108 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 108 (expresion -> MENOS expresion .)
    POR             reduce using rule 108 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 108 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 108 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 108 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 108 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 108 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 108 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 108 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 108 (expresion -> MENOS expresion .)
    OR              reduce using rule 108 (expresion -> MENOS expresion .)
    AND             reduce using rule 108 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 108 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 108 (expresion -> MENOS expresion .)
    COMA            reduce using rule 108 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 108 (expresion -> MENOS expresion .)
    PTO             reduce using rule 108 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 108 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 108 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 108 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIVIDIDO        [ shift and go to state 99 ]
  ! MODULO          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 112

    (98) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 158


state 113

    (110) expresion -> PARIZQ expresion . PARDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PARDER          shift and go to state 159
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 114

    (109) expresion -> NOT expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 109 (expresion -> NOT expresion .)
    MAS             reduce using rule 109 (expresion -> NOT expresion .)
    MENOS           reduce using rule 109 (expresion -> NOT expresion .)
    POR             reduce using rule 109 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 109 (expresion -> NOT expresion .)
    MODULO          reduce using rule 109 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 109 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 109 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 109 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 109 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 109 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 109 (expresion -> NOT expresion .)
    OR              reduce using rule 109 (expresion -> NOT expresion .)
    AND             reduce using rule 109 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 109 (expresion -> NOT expresion .)
    PARDER          reduce using rule 109 (expresion -> NOT expresion .)
    COMA            reduce using rule 109 (expresion -> NOT expresion .)
    CORDER          reduce using rule 109 (expresion -> NOT expresion .)
    PTO             reduce using rule 109 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 109 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 109 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 109 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIVIDIDO        [ shift and go to state 99 ]
  ! MODULO          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 115

    (112) expresion -> CORIZQ expresiones . CORDER
    (79) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 160
    COMA            shift and go to state 161


state 116

    (80) expresiones -> expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          reduce using rule 80 (expresiones -> expresion .)
    COMA            reduce using rule 80 (expresiones -> expresion .)
    PARDER          reduce using rule 80 (expresiones -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 117

    (78) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 78 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 78 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 78 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 78 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 78 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 78 (tipo -> SIGNOI STR .)


state 118

    (128) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 162
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 119

    (139) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 163
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 120

    (51) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (52) imatch -> . opmatch COMA dmatch
    (53) opmatch -> . opmatch COMA cmatch
    (54) opmatch -> . opmatch COMA rmatch
    (55) opmatch -> . cmatch
    (56) opmatch -> . rmatch
    (57) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (58) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (63) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (59) bloque_match -> . bloque_match BARRAS expresion
    (60) bloque_match -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 164
    imatch                         shift and go to state 165
    opmatch                        shift and go to state 166
    cmatch                         shift and go to state 167
    rmatch                         shift and go to state 168
    bloque_match                   shift and go to state 169
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 121

    (66) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 170
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 122

    (67) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 171
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 123

    (69) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 69 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 69 (break -> BREAK expresion PTCOMA .)


state 124

    (71) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 71 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 71 (return -> RETURN expresion PTCOMA .)


state 125

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 172


state 126

    (30) lparame -> ID . DOSPT tipo

    DOSPT           shift and go to state 173


state 127

    (24) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 174
    COMA            shift and go to state 175


state 128

    (25) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 176
    LLAVEIZQ        shift and go to state 177


state 129

    (29) lparametros -> lparame .

    PARDER          reduce using rule 29 (lparametros -> lparame .)
    COMA            reduce using rule 29 (lparametros -> lparame .)


state 130

    (37) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (22) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    CORIZQ          shift and go to state 180

    tipo                           shift and go to state 178
    tipo_arreglo                   shift and go to state 179

state 131

    (38) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 181
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 132

    (39) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 182


state 133

    (40) declaracion -> LET ID IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 183
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 134

    (41) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)


state 135

    (42) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 184
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 136

    (114) lindices -> lindices CORIZQ expresion . CORDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          shift and go to state 185
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 137

    (31) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 138

    (33) largumentos -> largumentos COMA . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 186
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 139

    (115) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 115 (lindices -> CORIZQ expresion CORDER .)


state 140

    (35) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    COMA            shift and go to state 187
    PARDER          shift and go to state 188
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 141

    (117) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (118) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (119) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (120) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (125) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (126) bloque_expresion -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 189
    bloque_expresion               shift and go to state 190
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 142

    (43) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (44) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (45) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (46) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 191
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 143

    (93) expresion -> expresion MAS expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 93 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 93 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 93 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 93 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 93 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 93 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 93 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 93 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 93 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 93 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 93 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 93 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 93 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 93 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 93 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! POR             [ reduce using rule 93 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 144

    (94) expresion -> expresion MENOS expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 94 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 94 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 94 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 94 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 94 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 94 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 94 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 94 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! POR             [ reduce using rule 94 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 145

    (95) expresion -> expresion POR expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 95 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 95 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 95 (expresion -> expresion POR expresion .)
    POR             reduce using rule 95 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 95 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 95 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 95 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 95 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 95 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 95 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 95 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 95 (expresion -> expresion POR expresion .)
    OR              reduce using rule 95 (expresion -> expresion POR expresion .)
    AND             reduce using rule 95 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 95 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 95 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 95 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIVIDIDO        [ shift and go to state 99 ]
  ! MODULO          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 146

    (96) expresion -> expresion DIVIDIDO expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIVIDIDO        [ shift and go to state 99 ]
  ! MODULO          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 147

    (97) expresion -> expresion MODULO expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 97 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 97 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 97 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 97 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 97 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 97 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 97 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 97 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 97 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 97 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 97 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 96 ]
  ! MENOS           [ shift and go to state 97 ]
  ! POR             [ shift and go to state 98 ]
  ! DIVIDIDO        [ shift and go to state 99 ]
  ! MODULO          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 148

    (100) expresion -> expresion IGUALQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 100 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 149

    (101) expresion -> expresion NOIGUALQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 101 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 150

    (102) expresion -> expresion MENORQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 102 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 102 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 102 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 102 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 151

    (103) expresion -> expresion MAYORQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 103 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 103 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 103 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 103 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 152

    (104) expresion -> expresion MENORIQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 104 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 104 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 104 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 104 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 104 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 104 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 153

    (105) expresion -> expresion MAYORIQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100

  ! MAS             [ reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 105 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NOIGUALQUE      [ shift and go to state 102 ]
  ! MENORQUE        [ shift and go to state 103 ]
  ! MAYORQUE        [ shift and go to state 104 ]
  ! MENORIQUE       [ shift and go to state 105 ]
  ! MAYORIQUE       [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 154

    (106) expresion -> expresion OR expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 106 (expresion -> expresion OR expresion .)
    OR              reduce using rule 106 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 106 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 106 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 106 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 106 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 106 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 106 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 106 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 106 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    AND             shift and go to state 108

  ! MAS             [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 106 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 107 ]


state 155

    (107) expresion -> expresion AND expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 107 (expresion -> expresion AND expresion .)
    OR              reduce using rule 107 (expresion -> expresion AND expresion .)
    AND             reduce using rule 107 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 107 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 107 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 107 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 107 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 107 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 107 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 107 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 107 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106

  ! MAS             [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 107 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 107 ]
  ! AND             [ shift and go to state 108 ]


state 156

    (88) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 192


state 157

    (89) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 193


state 158

    (98) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 194
    POWF            shift and go to state 195


state 159

    (110) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 110 (expresion -> PARIZQ expresion PARDER .)


state 160

    (112) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 112 (expresion -> CORIZQ expresiones CORDER .)


state 161

    (79) expresiones -> expresiones COMA . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 196
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 162

    (128) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (129) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (132) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (133) opmatch_asig -> . cmatch_asig
    (134) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (135) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (136) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (137) bloque_match_asig -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 197
    imatch_asig                    shift and go to state 198
    opmatch_asig                   shift and go to state 199
    cmatch_asig                    shift and go to state 200
    bloque_match_asig              shift and go to state 201
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 163

    (139) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 202
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 164

    (63) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (60) bloque_match -> expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTO             shift and go to state 203
    IGUAL           reduce using rule 60 (bloque_match -> expresion .)
    BARRAS          reduce using rule 60 (bloque_match -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 165

    (51) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 204


state 166

    (52) imatch -> opmatch . COMA dmatch
    (53) opmatch -> opmatch . COMA cmatch
    (54) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 205


state 167

    (55) opmatch -> cmatch .

    COMA            reduce using rule 55 (opmatch -> cmatch .)


state 168

    (56) opmatch -> rmatch .

    COMA            reduce using rule 56 (opmatch -> rmatch .)


state 169

    (57) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (58) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (59) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 206
    BARRAS          shift and go to state 207


state 170

    (66) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 66 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 171

    (67) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 208
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 172

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 209
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 173

    (30) lparame -> ID DOSPT . tipo
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR

    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70

    tipo                           shift and go to state 210

state 174

    (24) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 211
    LLAVEIZQ        shift and go to state 212


state 175

    (28) lparametros -> lparametros COMA . lparame
    (30) lparame -> . ID DOSPT tipo

    ID              shift and go to state 126

    lparame                        shift and go to state 213

state 176

    (25) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 214


state 177

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 215
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 178

    (37) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 216


state 179

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 217


state 180

    (22) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (22) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 180
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70

    tipo_arreglo                   shift and go to state 218
    tipo                           shift and go to state 219

state 181

    (38) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 220
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 182

    (39) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 221
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 183

    (40) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 184

    (42) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 42 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 185

    (114) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 114 (lindices -> lindices CORIZQ expresion CORDER .)


state 186

    (33) largumentos -> largumentos COMA expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PARDER          reduce using rule 33 (largumentos -> largumentos COMA expresion .)
    COMA            reduce using rule 33 (largumentos -> largumentos COMA expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 187

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (79) expresiones -> . expresiones COMA expresion
    (80) expresiones -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 116
    expresiones                    shift and go to state 222
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 188

    (36) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 223


state 189

    (126) bloque_expresion -> expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 126 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 126 (bloque_expresion -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 190

    (117) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (120) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (125) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 224
    PTCOMA          shift and go to state 225


state 191

    (43) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (44) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (45) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (46) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (50) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (47) lelseif -> . lelseif elseif
    (48) lelseif -> . elseif
    (49) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 228

    else                           shift and go to state 226
    lelseif                        shift and go to state 227
    elseif                         shift and go to state 229

state 192

    (88) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 230


state 193

    (89) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 231


state 194

    (98) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 232


state 195

    (99) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 233


state 196

    (79) expresiones -> expresiones COMA expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          reduce using rule 79 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 79 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 79 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 197

    (137) bloque_match_asig -> expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 137 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 137 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 198

    (128) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 234


state 199

    (129) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (132) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 235


state 200

    (133) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 133 (opmatch_asig -> cmatch_asig .)


state 201

    (134) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (135) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (136) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 236
    BARRAS          shift and go to state 237


state 202

    (139) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 139 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 203

    (63) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 238


state 204

    (51) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 51 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 205

    (52) imatch -> opmatch COMA . dmatch
    (53) opmatch -> opmatch COMA . cmatch
    (54) opmatch -> opmatch COMA . rmatch
    (61) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (57) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (58) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (63) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (59) bloque_match -> . bloque_match BARRAS expresion
    (60) bloque_match -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 242
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    dmatch                         shift and go to state 239
    cmatch                         shift and go to state 240
    rmatch                         shift and go to state 241
    bloque_match                   shift and go to state 169
    expresion                      shift and go to state 164
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 206

    (57) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (58) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 243


state 207

    (59) bloque_match -> bloque_match BARRAS . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 244
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 208

    (67) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 67 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 209

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 245
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 210

    (30) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 30 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 30 (lparame -> ID DOSPT tipo .)


state 211

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 246


state 212

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 247
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 213

    (28) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 28 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 28 (lparametros -> lparametros COMA lparame .)


state 214

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR

    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70

    tipo                           shift and go to state 248

state 215

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 249
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 216

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 250
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 217

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 251
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 218

    (22) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 252


state 219

    (23) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 253


state 220

    (38) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 221

    (39) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 254
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 222

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (79) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 255
    COMA            shift and go to state 161


state 223

    (36) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 224

    (117) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (120) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (124) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (121) elseifa -> . elseifa lif
    (122) elseifa -> . lif
    (123) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 258

    elsea                          shift and go to state 256
    elseifa                        shift and go to state 257
    lif                            shift and go to state 259

state 225

    (125) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 260
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 226

    (44) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 227

    (45) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (46) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (47) lelseif -> lelseif . elseif
    (50) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (49) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 228

    else                           shift and go to state 261
    elseif                         shift and go to state 262

state 228

    (50) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (49) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 263
    IF              shift and go to state 264


state 229

    (48) lelseif -> elseif .

    ELSE            reduce using rule 48 (lelseif -> elseif .)
    FN              reduce using rule 48 (lelseif -> elseif .)
    LET             reduce using rule 48 (lelseif -> elseif .)
    PRINTLN         reduce using rule 48 (lelseif -> elseif .)
    ID              reduce using rule 48 (lelseif -> elseif .)
    IF              reduce using rule 48 (lelseif -> elseif .)
    MATCH           reduce using rule 48 (lelseif -> elseif .)
    LOOP            reduce using rule 48 (lelseif -> elseif .)
    WHILE           reduce using rule 48 (lelseif -> elseif .)
    BREAK           reduce using rule 48 (lelseif -> elseif .)
    RETURN          reduce using rule 48 (lelseif -> elseif .)
    CONTINUE        reduce using rule 48 (lelseif -> elseif .)
    $end            reduce using rule 48 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 48 (lelseif -> elseif .)
    COMA            reduce using rule 48 (lelseif -> elseif .)


state 230

    (88) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 88 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 231

    (89) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 89 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 232

    (98) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 265
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 233

    (99) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 266
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 234

    (128) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 128 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 235

    (129) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (132) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (130) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (131) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (134) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (135) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (136) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (137) bloque_match_asig -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 269
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    dmatch_asig                    shift and go to state 267
    cmatch_asig                    shift and go to state 268
    expresion                      shift and go to state 197
    bloque_match_asig              shift and go to state 201
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 236

    (134) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (135) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 270


state 237

    (136) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 271
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 238

    (63) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 272


state 239

    (52) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 52 (imatch -> opmatch COMA dmatch .)


state 240

    (53) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 53 (opmatch -> opmatch COMA cmatch .)


state 241

    (54) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 54 (opmatch -> opmatch COMA rmatch .)


state 242

    (61) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 273


state 243

    (57) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (58) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 274
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 275
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 244

    (59) bloque_match -> bloque_match BARRAS expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 59 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 59 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 245

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 246

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR

    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70

    tipo                           shift and go to state 276

state 247

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 277
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 248

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 278


state 249

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 250

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 279
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 251

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 280
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 252

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 281
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 253

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 282
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 254

    (39) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 255

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 283


state 256

    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 257

    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (120) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (121) elseifa -> elseifa . lif
    (124) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (123) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 258

    elsea                          shift and go to state 284
    lif                            shift and go to state 285

state 258

    (124) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (123) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 286
    IF              shift and go to state 287


state 259

    (122) elseifa -> lif .

    ELSE            reduce using rule 122 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 122 (elseifa -> lif .)
    MAS             reduce using rule 122 (elseifa -> lif .)
    MENOS           reduce using rule 122 (elseifa -> lif .)
    POR             reduce using rule 122 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 122 (elseifa -> lif .)
    MODULO          reduce using rule 122 (elseifa -> lif .)
    IGUALQUE        reduce using rule 122 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 122 (elseifa -> lif .)
    MENORQUE        reduce using rule 122 (elseifa -> lif .)
    MAYORQUE        reduce using rule 122 (elseifa -> lif .)
    MENORIQUE       reduce using rule 122 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 122 (elseifa -> lif .)
    OR              reduce using rule 122 (elseifa -> lif .)
    AND             reduce using rule 122 (elseifa -> lif .)
    PTCOMA          reduce using rule 122 (elseifa -> lif .)
    PARDER          reduce using rule 122 (elseifa -> lif .)
    COMA            reduce using rule 122 (elseifa -> lif .)
    CORDER          reduce using rule 122 (elseifa -> lif .)
    PTO             reduce using rule 122 (elseifa -> lif .)
    IGUAL           reduce using rule 122 (elseifa -> lif .)
    BARRAS          reduce using rule 122 (elseifa -> lif .)
    LLAVEDER        reduce using rule 122 (elseifa -> lif .)


state 260

    (125) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 125 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 125 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 261

    (46) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 46 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 262

    (47) lelseif -> lelseif elseif .

    ELSE            reduce using rule 47 (lelseif -> lelseif elseif .)
    FN              reduce using rule 47 (lelseif -> lelseif elseif .)
    LET             reduce using rule 47 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 47 (lelseif -> lelseif elseif .)
    ID              reduce using rule 47 (lelseif -> lelseif elseif .)
    IF              reduce using rule 47 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 47 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 47 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 47 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 47 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 47 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 47 (lelseif -> lelseif elseif .)
    $end            reduce using rule 47 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 47 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 47 (lelseif -> lelseif elseif .)


state 263

    (50) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 288
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 264

    (49) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 289
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 265

    (98) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    COMA            shift and go to state 290
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 266

    (99) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    COMA            shift and go to state 291
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 267

    (129) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 129 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 268

    (132) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 132 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 269

    (130) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (131) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 292


state 270

    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (135) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 293
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 294
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 271

    (136) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 136 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 136 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 272

    (63) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 295
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 273

    (61) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 296


state 274

    (57) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 297
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 275

    (58) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 58 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 276

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 298


state 277

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 278

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 299
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 279

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 280

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 281

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          shift and go to state 300
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 282

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    CORDER          shift and go to state 301
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 283

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 284

    (120) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 120 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 285

    (121) elseifa -> elseifa lif .

    ELSE            reduce using rule 121 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 121 (elseifa -> elseifa lif .)
    MAS             reduce using rule 121 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 121 (elseifa -> elseifa lif .)
    POR             reduce using rule 121 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 121 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 121 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 121 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 121 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 121 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 121 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 121 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 121 (elseifa -> elseifa lif .)
    OR              reduce using rule 121 (elseifa -> elseifa lif .)
    AND             reduce using rule 121 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 121 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 121 (elseifa -> elseifa lif .)
    COMA            reduce using rule 121 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 121 (elseifa -> elseifa lif .)
    PTO             reduce using rule 121 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 121 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 121 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 121 (elseifa -> elseifa lif .)


state 286

    (124) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (125) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (126) bloque_expresion -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    bloque_expresion               shift and go to state 302
    expresion                      shift and go to state 189
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 287

    (123) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 303
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 288

    (50) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 304
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 289

    (49) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 305
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 290

    (98) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 306
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 291

    (99) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    tipo                           shift and go to state 56
    expresion                      shift and go to state 307
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 292

    (130) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (131) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 308


state 293

    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (125) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (126) bloque_expresion -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    bloque_expresion               shift and go to state 309
    expresion                      shift and go to state 189
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 294

    (135) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    COMA            reduce using rule 135 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 295

    (63) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 310
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 296

    (61) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (62) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 311
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 312
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 297

    (57) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 313
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 298

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 314
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 299

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 315
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 300

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 22 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 22 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 301

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 23 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 23 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 302

    (124) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (125) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 316
    PTCOMA          shift and go to state 225


state 303

    (123) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 317
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 304

    (50) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 50 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 305

    (49) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 318
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 306

    (98) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PARDER          shift and go to state 319
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 307

    (99) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    PARDER          shift and go to state 320
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 308

    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (131) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 321
    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 322
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 309

    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (125) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 323
    PTCOMA          shift and go to state 225


state 310

    (63) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 324


state 311

    (61) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 325
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 312

    (62) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 62 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 313

    (57) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 57 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 314

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 326
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 315

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 316

    (124) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 124 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 317

    (123) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (125) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (126) bloque_expresion -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    expresion                      shift and go to state 189
    bloque_expresion               shift and go to state 327
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 318

    (49) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 328
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 319

    (98) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 320

    (99) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 99 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 321

    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (125) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (126) bloque_expresion -> . expresion
    (81) expresion -> . ID
    (82) expresion -> . ENTERO
    (83) expresion -> . DECIMAL
    (84) expresion -> . TRUE
    (85) expresion -> . FALSE
    (86) expresion -> . tostring
    (87) expresion -> . toowned
    (90) expresion -> . STR
    (91) expresion -> . CADENA
    (92) expresion -> . CARACTER
    (93) expresion -> . expresion MAS expresion
    (94) expresion -> . expresion MENOS expresion
    (95) expresion -> . expresion POR expresion
    (96) expresion -> . expresion DIVIDIDO expresion
    (97) expresion -> . expresion MODULO expresion
    (98) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (100) expresion -> . expresion IGUALQUE expresion
    (101) expresion -> . expresion NOIGUALQUE expresion
    (102) expresion -> . expresion MENORQUE expresion
    (103) expresion -> . expresion MAYORQUE expresion
    (104) expresion -> . expresion MENORIQUE expresion
    (105) expresion -> . expresion MAYORIQUE expresion
    (106) expresion -> . expresion OR expresion
    (107) expresion -> . expresion AND expresion
    (108) expresion -> . MENOS expresion
    (109) expresion -> . NOT expresion
    (110) expresion -> . PARIZQ expresion PARDER
    (111) expresion -> . llamada_funciones
    (112) expresion -> . CORIZQ expresiones CORDER
    (113) expresion -> . ID lindices
    (116) expresion -> . if_asig
    (127) expresion -> . match_asig
    (138) expresion -> . loop_asig
    (88) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (89) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (72) tipo -> . I64
    (73) tipo -> . F64
    (74) tipo -> . BOOL
    (75) tipo -> . CHAR
    (76) tipo -> . STRING
    (77) tipo -> . USIZE
    (78) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (120) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (128) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (139) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    STR             shift and go to state 52
    CADENA          shift and go to state 53
    CARACTER        shift and go to state 54
    MENOS           shift and go to state 55
    NOT             shift and go to state 58
    PARIZQ          shift and go to state 57
    CORIZQ          shift and go to state 60
    I64             shift and go to state 64
    F64             shift and go to state 65
    BOOL            shift and go to state 66
    CHAR            shift and go to state 67
    STRING          shift and go to state 68
    USIZE           shift and go to state 69
    SIGNOI          shift and go to state 70
    IF              shift and go to state 43
    MATCH           shift and go to state 71
    LOOP            shift and go to state 72

    bloque_expresion               shift and go to state 329
    expresion                      shift and go to state 189
    tostring                       shift and go to state 50
    toowned                        shift and go to state 51
    tipo                           shift and go to state 56
    llamada_funciones              shift and go to state 59
    if_asig                        shift and go to state 61
    match_asig                     shift and go to state 62
    loop_asig                      shift and go to state 63

state 322

    (131) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (93) expresion -> expresion . MAS expresion
    (94) expresion -> expresion . MENOS expresion
    (95) expresion -> expresion . POR expresion
    (96) expresion -> expresion . DIVIDIDO expresion
    (97) expresion -> expresion . MODULO expresion
    (100) expresion -> expresion . IGUALQUE expresion
    (101) expresion -> expresion . NOIGUALQUE expresion
    (102) expresion -> expresion . MENORQUE expresion
    (103) expresion -> expresion . MAYORQUE expresion
    (104) expresion -> expresion . MENORIQUE expresion
    (105) expresion -> expresion . MAYORIQUE expresion
    (106) expresion -> expresion . OR expresion
    (107) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 131 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 96
    MENOS           shift and go to state 97
    POR             shift and go to state 98
    DIVIDIDO        shift and go to state 99
    MODULO          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NOIGUALQUE      shift and go to state 102
    MENORQUE        shift and go to state 103
    MAYORQUE        shift and go to state 104
    MENORIQUE       shift and go to state 105
    MAYORIQUE       shift and go to state 106
    OR              shift and go to state 107
    AND             shift and go to state 108


state 323

    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 134 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 324

    (63) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (64) rrmatch -> . instruccion
    (65) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 332
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    rrmatch                        shift and go to state 330
    instruccion                    shift and go to state 331
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 325

    (61) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 333
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 326

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 327

    (123) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (125) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 334
    PTCOMA          shift and go to state 225


state 328

    (49) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 49 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 329

    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (125) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 335
    PTCOMA          shift and go to state 225


state 330

    (63) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 63 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 331

    (64) rrmatch -> instruccion .

    COMA            reduce using rule 64 (rrmatch -> instruccion .)


state 332

    (65) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 336
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 333

    (61) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 61 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 334

    (123) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 123 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 335

    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 130 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 336

    (65) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (46) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (66) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (67) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (68) break -> . BREAK PTCOMA
    (69) break -> . BREAK expresion PTCOMA
    (71) return -> . RETURN expresion PTCOMA
    (70) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 337
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 337

    (65) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 65 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 53 resolved as shift
