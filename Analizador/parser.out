Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 8     declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 9     declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 10    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 11    tipo -> I64
Rule 12    tipo -> F64
Rule 13    tipo -> BOOL
Rule 14    tipo -> CHAR
Rule 15    tipo -> STR
Rule 16    tipo -> STRING
Rule 17    expresion -> ID
Rule 18    expresion -> ENTERO
Rule 19    expresion -> DECIMAL
Rule 20    expresion -> TRUE
Rule 21    expresion -> FALSE
Rule 22    expresion -> CADENA
Rule 23    expresion -> CARACTER

Terminals, with rules where they appear

BOOL                 : 13
CADENA               : 22
CARACTER             : 23
CHAR                 : 14
DECIMAL              : 19
DOSPT                : 7 9
ENTERO               : 18
F64                  : 12
FALSE                : 21
FN                   : 3
I64                  : 11
ID                   : 7 8 9 10 17
IGUAL                : 7 8 9 10
LET                  : 7 8 9 10
LLAVEDER             : 3
LLAVEIZQ             : 3
MAIN                 : 3
MUT                  : 7 8
PARDER               : 3
PARIZQ               : 3
PTCOMA               : 7 8 9 10
STR                  : 15
STRING               : 16
TRUE                 : 20
error                : 

Nonterminals, with rules where they appear

declaracion          : 6
expresion            : 7 8 9 10
inicio               : 0
instruccion          : 4 5
instrucciones        : 1 3 4
main                 : 1 2
tipo                 : 7 9

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (9) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> . LET ID IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 7

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (9) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> . LET ID IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 7

    main                           shift and go to state 8
    instruccion                    shift and go to state 9
    declaracion                    shift and go to state 6

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 10


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (9) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 11
    ID              shift and go to state 12


state 8

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 9

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 10

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 13


state 11

    (7) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 14


state 12

    (9) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 15
    IGUAL           shift and go to state 16


state 13

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 17


state 14

    (7) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 18
    IGUAL           shift and go to state 19


state 15

    (9) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (11) tipo -> . I64
    (12) tipo -> . F64
    (13) tipo -> . BOOL
    (14) tipo -> . CHAR
    (15) tipo -> . STR
    (16) tipo -> . STRING

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STR             shift and go to state 25
    STRING          shift and go to state 26

    tipo                           shift and go to state 20

state 16

    (10) declaracion -> LET ID IGUAL . expresion PTCOMA
    (17) expresion -> . ID
    (18) expresion -> . ENTERO
    (19) expresion -> . DECIMAL
    (20) expresion -> . TRUE
    (21) expresion -> . FALSE
    (22) expresion -> . CADENA
    (23) expresion -> . CARACTER

    ID              shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34

    expresion                      shift and go to state 28

state 17

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 35


state 18

    (7) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (11) tipo -> . I64
    (12) tipo -> . F64
    (13) tipo -> . BOOL
    (14) tipo -> . CHAR
    (15) tipo -> . STR
    (16) tipo -> . STRING

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STR             shift and go to state 25
    STRING          shift and go to state 26

    tipo                           shift and go to state 36

state 19

    (8) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (17) expresion -> . ID
    (18) expresion -> . ENTERO
    (19) expresion -> . DECIMAL
    (20) expresion -> . TRUE
    (21) expresion -> . FALSE
    (22) expresion -> . CADENA
    (23) expresion -> . CARACTER

    ID              shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34

    expresion                      shift and go to state 37

state 20

    (9) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 38


state 21

    (11) tipo -> I64 .

    IGUAL           reduce using rule 11 (tipo -> I64 .)


state 22

    (12) tipo -> F64 .

    IGUAL           reduce using rule 12 (tipo -> F64 .)


state 23

    (13) tipo -> BOOL .

    IGUAL           reduce using rule 13 (tipo -> BOOL .)


state 24

    (14) tipo -> CHAR .

    IGUAL           reduce using rule 14 (tipo -> CHAR .)


state 25

    (15) tipo -> STR .

    IGUAL           reduce using rule 15 (tipo -> STR .)


state 26

    (16) tipo -> STRING .

    IGUAL           reduce using rule 16 (tipo -> STRING .)


state 27

    (17) expresion -> ID .

    PTCOMA          reduce using rule 17 (expresion -> ID .)


state 28

    (10) declaracion -> LET ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 39


state 29

    (18) expresion -> ENTERO .

    PTCOMA          reduce using rule 18 (expresion -> ENTERO .)


state 30

    (19) expresion -> DECIMAL .

    PTCOMA          reduce using rule 19 (expresion -> DECIMAL .)


state 31

    (20) expresion -> TRUE .

    PTCOMA          reduce using rule 20 (expresion -> TRUE .)


state 32

    (21) expresion -> FALSE .

    PTCOMA          reduce using rule 21 (expresion -> FALSE .)


state 33

    (22) expresion -> CADENA .

    PTCOMA          reduce using rule 22 (expresion -> CADENA .)


state 34

    (23) expresion -> CARACTER .

    PTCOMA          reduce using rule 23 (expresion -> CARACTER .)


state 35

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (9) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> . LET ID IGUAL expresion PTCOMA

    LET             shift and go to state 7

    instrucciones                  shift and go to state 40
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6

state 36

    (7) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 41


state 37

    (8) declaracion -> LET MUT ID IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 42


state 38

    (9) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (17) expresion -> . ID
    (18) expresion -> . ENTERO
    (19) expresion -> . DECIMAL
    (20) expresion -> . TRUE
    (21) expresion -> . FALSE
    (22) expresion -> . CADENA
    (23) expresion -> . CARACTER

    ID              shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34

    expresion                      shift and go to state 43

state 39

    (10) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 10 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 10 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 10 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 40

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (8) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (9) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (10) declaracion -> . LET ID IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 44
    LET             shift and go to state 7

    instruccion                    shift and go to state 9
    declaracion                    shift and go to state 6

state 41

    (7) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (17) expresion -> . ID
    (18) expresion -> . ENTERO
    (19) expresion -> . DECIMAL
    (20) expresion -> . TRUE
    (21) expresion -> . FALSE
    (22) expresion -> . CADENA
    (23) expresion -> . CARACTER

    ID              shift and go to state 27
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34

    expresion                      shift and go to state 45

state 42

    (8) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 8 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 8 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 8 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 43

    (9) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 46


state 44

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 45

    (7) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 47


state 46

    (9) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 9 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 9 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 9 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 47

    (7) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 7 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 7 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 7 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)

