Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    instruccion -> match
Rule 11    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 12    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 13    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 14    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 15    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 16    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 17    asignacion -> ID IGUAL expresion PTCOMA
Rule 18    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 19    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 20    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 21    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 22    lelseif -> lelseif elseif
Rule 23    lelseif -> elseif
Rule 24    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 25    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 26    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 27    imatch -> opmatch COMA dmatch
Rule 28    opmatch -> opmatch COMA cmatch
Rule 29    opmatch -> opmatch COMA rmatch
Rule 30    opmatch -> cmatch
Rule 31    opmatch -> rmatch
Rule 32    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 33    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 34    bloque_match -> bloque_match BARRAS expresion
Rule 35    bloque_match -> expresion
Rule 36    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 37    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 38    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 39    rrmatch -> instruccion
Rule 40    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 41    tipo -> I64
Rule 42    tipo -> F64
Rule 43    tipo -> BOOL
Rule 44    tipo -> CHAR
Rule 45    tipo -> STRING
Rule 46    tipo -> SIGNOI STR
Rule 47    expresiones -> expresiones COMA expresion
Rule 48    expresiones -> expresion
Rule 49    expresion -> ID
Rule 50    expresion -> ENTERO
Rule 51    expresion -> DECIMAL
Rule 52    expresion -> TRUE
Rule 53    expresion -> FALSE
Rule 54    expresion -> tostring
Rule 55    expresion -> toowned
Rule 56    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 57    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 58    expresion -> STR
Rule 59    expresion -> CADENA
Rule 60    expresion -> CARACTER
Rule 61    expresion -> expresion MAS expresion
Rule 62    expresion -> expresion MENOS expresion
Rule 63    expresion -> expresion POR expresion
Rule 64    expresion -> expresion DIVIDIDO expresion
Rule 65    expresion -> expresion MODULO expresion
Rule 66    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 67    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 68    expresion -> expresion IGUALQUE expresion
Rule 69    expresion -> expresion NOIGUALQUE expresion
Rule 70    expresion -> expresion MENORQUE expresion
Rule 71    expresion -> expresion MAYORQUE expresion
Rule 72    expresion -> expresion MENORIQUE expresion
Rule 73    expresion -> expresion MAYORIQUE expresion
Rule 74    expresion -> expresion OR expresion
Rule 75    expresion -> expresion AND expresion
Rule 76    expresion -> MENOS expresion
Rule 77    expresion -> NOT expresion
Rule 78    expresion -> PARIZQ expresion PARDER
Rule 79    expresion -> if_asig
Rule 80    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 81    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
Rule 82    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
Rule 83    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
Rule 84    elseif -> elseif lif
Rule 85    elseif -> lif
Rule 86    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 87    else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 88    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 89    bloque_expresion -> expresion

Terminals, with rules where they appear

AND                  : 75
AS                   : 
BARRAS               : 34
BOOL                 : 43
CADENA               : 56 57 59
CARACTER             : 60
CHAR                 : 44
COMA                 : 11 27 28 29 47 66 67
DECIMAL              : 51
DIVIDIDO             : 64
DOSPT                : 13 15 66 66 67 67
ELSE                 : 24 25 86 87
ENTERO               : 50
F64                  : 42
FALSE                : 53
FN                   : 3
GUIONB               : 36 37
I64                  : 41
ID                   : 13 14 15 16 17 49
IF                   : 18 19 20 21 24 80 81 82 83 86
IGUAL                : 13 14 15 16 17 32 33 36 37 38 38
IGUALQUE             : 68
LET                  : 13 14 15 16
LLAVEDER             : 3 18 19 20 21 24 25 26 32 36 40 80 81 82 83 86 87
LLAVEIZQ             : 3 18 19 20 21 24 25 26 32 36 40 80 81 82 83 86 87
MAIN                 : 3
MAS                  : 61
MATCH                : 26
MAYORIQUE            : 73
MAYORQUE             : 32 33 36 37 38 71
MENORIQUE            : 72
MENORQUE             : 70
MENOS                : 62 76
MODULO               : 65
MUT                  : 13 14
NOIGUALQUE           : 69
NOT                  : 11 12 77
OR                   : 74
PARDER               : 3 11 12 56 57 66 67 78
PARIZQ               : 3 11 12 56 57 66 67 78
POR                  : 63
POW                  : 66
POWF                 : 67
PRINTLN              : 11 12
PTCOMA               : 11 12 13 14 15 16 17 88
PTO                  : 38 38 56 57
SIGNOI               : 46
STR                  : 46 58
STRING               : 45
TOOWNED              : 57
TOSTRING             : 56
TRUE                 : 52
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 80 81 82 83 86 87 88
bloque_match         : 32 33 34
cmatch               : 28 30
declaracion          : 6
dmatch               : 27
else                 : 19 21 81 83
elseif               : 22 23 82 83 84
expresion            : 11 12 13 14 15 16 17 18 19 20 21 24 26 34 35 38 38 47 48 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 77 78 80 81 82 83 86 88 89
expresiones          : 11 47
if                   : 9
if_asig              : 79
imatch               : 26
imprimir             : 7
inicio               : 0
instruccion          : 4 5 33 37 39
instrucciones        : 1 3 4 18 19 20 21 24 25 32 36 40
lelseif              : 20 21 22
lif                  : 84 85
main                 : 1 2
match                : 10
opmatch              : 27 28 29
rmatch               : 29 31
rrmatch              : 38
tipo                 : 13 15 66 67
toowned              : 55
tostring             : 54

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    main                           shift and go to state 16
    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    MATCH           reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 18


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    MATCH           reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)
    COMA            reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    MATCH           reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)
    COMA            reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    MATCH           reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)
    COMA            reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    MATCH           reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)
    COMA            reduce using rule 9 (instruccion -> if .)


state 10

    (10) instruccion -> match .

    FN              reduce using rule 10 (instruccion -> match .)
    LET             reduce using rule 10 (instruccion -> match .)
    PRINTLN         reduce using rule 10 (instruccion -> match .)
    ID              reduce using rule 10 (instruccion -> match .)
    IF              reduce using rule 10 (instruccion -> match .)
    MATCH           reduce using rule 10 (instruccion -> match .)
    LLAVEDER        reduce using rule 10 (instruccion -> match .)
    COMA            reduce using rule 10 (instruccion -> match .)


state 11

    (13) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 19
    ID              shift and go to state 20


state 12

    (17) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 21


state 13

    (11) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 22


state 14

    (18) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 24
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 15

    (26) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 46
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 16

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 17

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 18

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 47


state 19

    (13) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 48


state 20

    (15) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 49
    IGUAL           shift and go to state 50


state 21

    (17) asignacion -> ID IGUAL . expresion PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 51
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 22

    (11) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 52


state 23

    (80) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 53
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 24

    (18) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 54
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 25

    (49) expresion -> ID .

    LLAVEIZQ        reduce using rule 49 (expresion -> ID .)
    MAS             reduce using rule 49 (expresion -> ID .)
    MENOS           reduce using rule 49 (expresion -> ID .)
    POR             reduce using rule 49 (expresion -> ID .)
    DIVIDIDO        reduce using rule 49 (expresion -> ID .)
    MODULO          reduce using rule 49 (expresion -> ID .)
    IGUALQUE        reduce using rule 49 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 49 (expresion -> ID .)
    MENORQUE        reduce using rule 49 (expresion -> ID .)
    MAYORQUE        reduce using rule 49 (expresion -> ID .)
    MENORIQUE       reduce using rule 49 (expresion -> ID .)
    MAYORIQUE       reduce using rule 49 (expresion -> ID .)
    OR              reduce using rule 49 (expresion -> ID .)
    AND             reduce using rule 49 (expresion -> ID .)
    PTCOMA          reduce using rule 49 (expresion -> ID .)
    PARDER          reduce using rule 49 (expresion -> ID .)
    COMA            reduce using rule 49 (expresion -> ID .)
    PTO             reduce using rule 49 (expresion -> ID .)
    IGUAL           reduce using rule 49 (expresion -> ID .)
    BARRAS          reduce using rule 49 (expresion -> ID .)
    LLAVEDER        reduce using rule 49 (expresion -> ID .)


state 26

    (50) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 50 (expresion -> ENTERO .)
    MAS             reduce using rule 50 (expresion -> ENTERO .)
    MENOS           reduce using rule 50 (expresion -> ENTERO .)
    POR             reduce using rule 50 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 50 (expresion -> ENTERO .)
    MODULO          reduce using rule 50 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 50 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 50 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 50 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 50 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 50 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 50 (expresion -> ENTERO .)
    OR              reduce using rule 50 (expresion -> ENTERO .)
    AND             reduce using rule 50 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 50 (expresion -> ENTERO .)
    PARDER          reduce using rule 50 (expresion -> ENTERO .)
    COMA            reduce using rule 50 (expresion -> ENTERO .)
    PTO             reduce using rule 50 (expresion -> ENTERO .)
    IGUAL           reduce using rule 50 (expresion -> ENTERO .)
    BARRAS          reduce using rule 50 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 50 (expresion -> ENTERO .)


state 27

    (51) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 51 (expresion -> DECIMAL .)
    MAS             reduce using rule 51 (expresion -> DECIMAL .)
    MENOS           reduce using rule 51 (expresion -> DECIMAL .)
    POR             reduce using rule 51 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 51 (expresion -> DECIMAL .)
    MODULO          reduce using rule 51 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 51 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 51 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 51 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 51 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 51 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 51 (expresion -> DECIMAL .)
    OR              reduce using rule 51 (expresion -> DECIMAL .)
    AND             reduce using rule 51 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 51 (expresion -> DECIMAL .)
    PARDER          reduce using rule 51 (expresion -> DECIMAL .)
    COMA            reduce using rule 51 (expresion -> DECIMAL .)
    PTO             reduce using rule 51 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 51 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 51 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 51 (expresion -> DECIMAL .)


state 28

    (52) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 52 (expresion -> TRUE .)
    MAS             reduce using rule 52 (expresion -> TRUE .)
    MENOS           reduce using rule 52 (expresion -> TRUE .)
    POR             reduce using rule 52 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 52 (expresion -> TRUE .)
    MODULO          reduce using rule 52 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 52 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 52 (expresion -> TRUE .)
    MENORQUE        reduce using rule 52 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 52 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 52 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 52 (expresion -> TRUE .)
    OR              reduce using rule 52 (expresion -> TRUE .)
    AND             reduce using rule 52 (expresion -> TRUE .)
    PTCOMA          reduce using rule 52 (expresion -> TRUE .)
    PARDER          reduce using rule 52 (expresion -> TRUE .)
    COMA            reduce using rule 52 (expresion -> TRUE .)
    PTO             reduce using rule 52 (expresion -> TRUE .)
    IGUAL           reduce using rule 52 (expresion -> TRUE .)
    BARRAS          reduce using rule 52 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 52 (expresion -> TRUE .)


state 29

    (53) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 53 (expresion -> FALSE .)
    MAS             reduce using rule 53 (expresion -> FALSE .)
    MENOS           reduce using rule 53 (expresion -> FALSE .)
    POR             reduce using rule 53 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 53 (expresion -> FALSE .)
    MODULO          reduce using rule 53 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 53 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 53 (expresion -> FALSE .)
    MENORQUE        reduce using rule 53 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 53 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 53 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 53 (expresion -> FALSE .)
    OR              reduce using rule 53 (expresion -> FALSE .)
    AND             reduce using rule 53 (expresion -> FALSE .)
    PTCOMA          reduce using rule 53 (expresion -> FALSE .)
    PARDER          reduce using rule 53 (expresion -> FALSE .)
    COMA            reduce using rule 53 (expresion -> FALSE .)
    PTO             reduce using rule 53 (expresion -> FALSE .)
    IGUAL           reduce using rule 53 (expresion -> FALSE .)
    BARRAS          reduce using rule 53 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 53 (expresion -> FALSE .)


state 30

    (54) expresion -> tostring .

    LLAVEIZQ        reduce using rule 54 (expresion -> tostring .)
    MAS             reduce using rule 54 (expresion -> tostring .)
    MENOS           reduce using rule 54 (expresion -> tostring .)
    POR             reduce using rule 54 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 54 (expresion -> tostring .)
    MODULO          reduce using rule 54 (expresion -> tostring .)
    IGUALQUE        reduce using rule 54 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 54 (expresion -> tostring .)
    MENORQUE        reduce using rule 54 (expresion -> tostring .)
    MAYORQUE        reduce using rule 54 (expresion -> tostring .)
    MENORIQUE       reduce using rule 54 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 54 (expresion -> tostring .)
    OR              reduce using rule 54 (expresion -> tostring .)
    AND             reduce using rule 54 (expresion -> tostring .)
    PTCOMA          reduce using rule 54 (expresion -> tostring .)
    PARDER          reduce using rule 54 (expresion -> tostring .)
    COMA            reduce using rule 54 (expresion -> tostring .)
    PTO             reduce using rule 54 (expresion -> tostring .)
    IGUAL           reduce using rule 54 (expresion -> tostring .)
    BARRAS          reduce using rule 54 (expresion -> tostring .)
    LLAVEDER        reduce using rule 54 (expresion -> tostring .)


state 31

    (55) expresion -> toowned .

    LLAVEIZQ        reduce using rule 55 (expresion -> toowned .)
    MAS             reduce using rule 55 (expresion -> toowned .)
    MENOS           reduce using rule 55 (expresion -> toowned .)
    POR             reduce using rule 55 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 55 (expresion -> toowned .)
    MODULO          reduce using rule 55 (expresion -> toowned .)
    IGUALQUE        reduce using rule 55 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 55 (expresion -> toowned .)
    MENORQUE        reduce using rule 55 (expresion -> toowned .)
    MAYORQUE        reduce using rule 55 (expresion -> toowned .)
    MENORIQUE       reduce using rule 55 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 55 (expresion -> toowned .)
    OR              reduce using rule 55 (expresion -> toowned .)
    AND             reduce using rule 55 (expresion -> toowned .)
    PTCOMA          reduce using rule 55 (expresion -> toowned .)
    PARDER          reduce using rule 55 (expresion -> toowned .)
    COMA            reduce using rule 55 (expresion -> toowned .)
    PTO             reduce using rule 55 (expresion -> toowned .)
    IGUAL           reduce using rule 55 (expresion -> toowned .)
    BARRAS          reduce using rule 55 (expresion -> toowned .)
    LLAVEDER        reduce using rule 55 (expresion -> toowned .)


state 32

    (58) expresion -> STR .

    LLAVEIZQ        reduce using rule 58 (expresion -> STR .)
    MAS             reduce using rule 58 (expresion -> STR .)
    MENOS           reduce using rule 58 (expresion -> STR .)
    POR             reduce using rule 58 (expresion -> STR .)
    DIVIDIDO        reduce using rule 58 (expresion -> STR .)
    MODULO          reduce using rule 58 (expresion -> STR .)
    IGUALQUE        reduce using rule 58 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 58 (expresion -> STR .)
    MENORQUE        reduce using rule 58 (expresion -> STR .)
    MAYORQUE        reduce using rule 58 (expresion -> STR .)
    MENORIQUE       reduce using rule 58 (expresion -> STR .)
    MAYORIQUE       reduce using rule 58 (expresion -> STR .)
    OR              reduce using rule 58 (expresion -> STR .)
    AND             reduce using rule 58 (expresion -> STR .)
    PTCOMA          reduce using rule 58 (expresion -> STR .)
    PARDER          reduce using rule 58 (expresion -> STR .)
    COMA            reduce using rule 58 (expresion -> STR .)
    PTO             reduce using rule 58 (expresion -> STR .)
    IGUAL           reduce using rule 58 (expresion -> STR .)
    BARRAS          reduce using rule 58 (expresion -> STR .)
    LLAVEDER        reduce using rule 58 (expresion -> STR .)


state 33

    (59) expresion -> CADENA .
    (56) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (57) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 59 (expresion -> CADENA .)
    MAS             reduce using rule 59 (expresion -> CADENA .)
    MENOS           reduce using rule 59 (expresion -> CADENA .)
    POR             reduce using rule 59 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 59 (expresion -> CADENA .)
    MODULO          reduce using rule 59 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 59 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 59 (expresion -> CADENA .)
    MENORQUE        reduce using rule 59 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 59 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 59 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 59 (expresion -> CADENA .)
    OR              reduce using rule 59 (expresion -> CADENA .)
    AND             reduce using rule 59 (expresion -> CADENA .)
    PTCOMA          reduce using rule 59 (expresion -> CADENA .)
    PARDER          reduce using rule 59 (expresion -> CADENA .)
    COMA            reduce using rule 59 (expresion -> CADENA .)
    IGUAL           reduce using rule 59 (expresion -> CADENA .)
    BARRAS          reduce using rule 59 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 59 (expresion -> CADENA .)
    PTO             shift and go to state 68

  ! PTO             [ reduce using rule 59 (expresion -> CADENA .) ]


state 34

    (60) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 60 (expresion -> CARACTER .)
    MAS             reduce using rule 60 (expresion -> CARACTER .)
    MENOS           reduce using rule 60 (expresion -> CARACTER .)
    POR             reduce using rule 60 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 60 (expresion -> CARACTER .)
    MODULO          reduce using rule 60 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 60 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 60 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 60 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 60 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 60 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 60 (expresion -> CARACTER .)
    OR              reduce using rule 60 (expresion -> CARACTER .)
    AND             reduce using rule 60 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 60 (expresion -> CARACTER .)
    PARDER          reduce using rule 60 (expresion -> CARACTER .)
    COMA            reduce using rule 60 (expresion -> CARACTER .)
    PTO             reduce using rule 60 (expresion -> CARACTER .)
    IGUAL           reduce using rule 60 (expresion -> CARACTER .)
    BARRAS          reduce using rule 60 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 60 (expresion -> CARACTER .)


state 35

    (76) expresion -> MENOS . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 69
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 36

    (66) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 70


state 37

    (78) expresion -> PARIZQ . expresion PARDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 71
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 38

    (77) expresion -> NOT . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 72
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 39

    (79) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 79 (expresion -> if_asig .)
    MAS             reduce using rule 79 (expresion -> if_asig .)
    MENOS           reduce using rule 79 (expresion -> if_asig .)
    POR             reduce using rule 79 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 79 (expresion -> if_asig .)
    MODULO          reduce using rule 79 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 79 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 79 (expresion -> if_asig .)
    MENORQUE        reduce using rule 79 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 79 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 79 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 79 (expresion -> if_asig .)
    OR              reduce using rule 79 (expresion -> if_asig .)
    AND             reduce using rule 79 (expresion -> if_asig .)
    PTCOMA          reduce using rule 79 (expresion -> if_asig .)
    PARDER          reduce using rule 79 (expresion -> if_asig .)
    COMA            reduce using rule 79 (expresion -> if_asig .)
    PTO             reduce using rule 79 (expresion -> if_asig .)
    IGUAL           reduce using rule 79 (expresion -> if_asig .)
    BARRAS          reduce using rule 79 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 79 (expresion -> if_asig .)


state 40

    (41) tipo -> I64 .

    DOSPT           reduce using rule 41 (tipo -> I64 .)
    IGUAL           reduce using rule 41 (tipo -> I64 .)


state 41

    (42) tipo -> F64 .

    DOSPT           reduce using rule 42 (tipo -> F64 .)
    IGUAL           reduce using rule 42 (tipo -> F64 .)


state 42

    (43) tipo -> BOOL .

    DOSPT           reduce using rule 43 (tipo -> BOOL .)
    IGUAL           reduce using rule 43 (tipo -> BOOL .)


state 43

    (44) tipo -> CHAR .

    DOSPT           reduce using rule 44 (tipo -> CHAR .)
    IGUAL           reduce using rule 44 (tipo -> CHAR .)


state 44

    (45) tipo -> STRING .

    DOSPT           reduce using rule 45 (tipo -> STRING .)
    IGUAL           reduce using rule 45 (tipo -> STRING .)


state 45

    (46) tipo -> SIGNOI . STR

    STR             shift and go to state 73


state 46

    (26) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 74
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 47

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 75


state 48

    (13) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 76
    IGUAL           shift and go to state 77


state 49

    (15) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR

    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45

    tipo                           shift and go to state 78

state 50

    (16) declaracion -> LET ID IGUAL . expresion PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 79
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 51

    (17) asignacion -> ID IGUAL expresion . PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 80
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 52

    (11) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 81
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 53

    (80) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 82
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 54

    (18) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instrucciones                  shift and go to state 83
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 55

    (61) expresion -> expresion MAS . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 84
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 56

    (62) expresion -> expresion MENOS . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 85
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 57

    (63) expresion -> expresion POR . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 86
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 58

    (64) expresion -> expresion DIVIDIDO . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 87
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 59

    (65) expresion -> expresion MODULO . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 88
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 60

    (68) expresion -> expresion IGUALQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 89
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 61

    (69) expresion -> expresion NOIGUALQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 90
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 62

    (70) expresion -> expresion MENORQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 91
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 63

    (71) expresion -> expresion MAYORQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 92
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 64

    (72) expresion -> expresion MENORIQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 93
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 65

    (73) expresion -> expresion MAYORIQUE . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 94
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 66

    (74) expresion -> expresion OR . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 95
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 67

    (75) expresion -> expresion AND . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 96
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 68

    (56) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (57) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 97
    TOOWNED         shift and go to state 98


state 69

    (76) expresion -> MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 76 (expresion -> MENOS expresion .)
    MAS             reduce using rule 76 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 76 (expresion -> MENOS expresion .)
    POR             reduce using rule 76 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 76 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 76 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 76 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 76 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 76 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 76 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 76 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 76 (expresion -> MENOS expresion .)
    OR              reduce using rule 76 (expresion -> MENOS expresion .)
    AND             reduce using rule 76 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 76 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 76 (expresion -> MENOS expresion .)
    COMA            reduce using rule 76 (expresion -> MENOS expresion .)
    PTO             reduce using rule 76 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 76 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 76 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 76 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! POR             [ shift and go to state 57 ]
  ! DIVIDIDO        [ shift and go to state 58 ]
  ! MODULO          [ shift and go to state 59 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 70

    (66) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 99


state 71

    (78) expresion -> PARIZQ expresion . PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PARDER          shift and go to state 100
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 72

    (77) expresion -> NOT expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 77 (expresion -> NOT expresion .)
    MAS             reduce using rule 77 (expresion -> NOT expresion .)
    MENOS           reduce using rule 77 (expresion -> NOT expresion .)
    POR             reduce using rule 77 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 77 (expresion -> NOT expresion .)
    MODULO          reduce using rule 77 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 77 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 77 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 77 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 77 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 77 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 77 (expresion -> NOT expresion .)
    OR              reduce using rule 77 (expresion -> NOT expresion .)
    AND             reduce using rule 77 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 77 (expresion -> NOT expresion .)
    PARDER          reduce using rule 77 (expresion -> NOT expresion .)
    COMA            reduce using rule 77 (expresion -> NOT expresion .)
    PTO             reduce using rule 77 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 77 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 77 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! POR             [ shift and go to state 57 ]
  ! DIVIDIDO        [ shift and go to state 58 ]
  ! MODULO          [ shift and go to state 59 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 73

    (46) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 46 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 46 (tipo -> SIGNOI STR .)


state 74

    (26) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (27) imatch -> . opmatch COMA dmatch
    (28) opmatch -> . opmatch COMA cmatch
    (29) opmatch -> . opmatch COMA rmatch
    (30) opmatch -> . cmatch
    (31) opmatch -> . rmatch
    (32) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (33) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (38) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (34) bloque_match -> . bloque_match BARRAS expresion
    (35) bloque_match -> . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 101
    imatch                         shift and go to state 102
    opmatch                        shift and go to state 103
    cmatch                         shift and go to state 104
    rmatch                         shift and go to state 105
    bloque_match                   shift and go to state 106
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 75

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 107


state 76

    (13) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR

    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45

    tipo                           shift and go to state 108

state 77

    (14) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 109
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 78

    (15) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 110


state 79

    (16) declaracion -> LET ID IGUAL expresion . PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 111
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 80

    (17) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 17 (asignacion -> ID IGUAL expresion PTCOMA .)


state 81

    (11) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (12) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    COMA            shift and go to state 112
    PARDER          shift and go to state 113
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 82

    (80) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (81) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (82) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (88) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (89) bloque_expresion -> . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 114
    bloque_expresion               shift and go to state 115
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 83

    (18) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (19) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (20) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (21) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 116
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 84

    (61) expresion -> expresion MAS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 61 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 61 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 61 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 61 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 61 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 61 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 61 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 61 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 61 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! POR             [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 85

    (62) expresion -> expresion MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 62 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! POR             [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 86

    (63) expresion -> expresion POR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 63 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 63 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion POR expresion .)
    POR             reduce using rule 63 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 63 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 63 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 63 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 63 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 63 (expresion -> expresion POR expresion .)
    OR              reduce using rule 63 (expresion -> expresion POR expresion .)
    AND             reduce using rule 63 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 63 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 63 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 63 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 63 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 63 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 63 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! POR             [ shift and go to state 57 ]
  ! DIVIDIDO        [ shift and go to state 58 ]
  ! MODULO          [ shift and go to state 59 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 87

    (64) expresion -> expresion DIVIDIDO expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! POR             [ shift and go to state 57 ]
  ! DIVIDIDO        [ shift and go to state 58 ]
  ! MODULO          [ shift and go to state 59 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 88

    (65) expresion -> expresion MODULO expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 65 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 55 ]
  ! MENOS           [ shift and go to state 56 ]
  ! POR             [ shift and go to state 57 ]
  ! DIVIDIDO        [ shift and go to state 58 ]
  ! MODULO          [ shift and go to state 59 ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 89

    (68) expresion -> expresion IGUALQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 68 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 68 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 68 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 68 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 68 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 68 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 90

    (69) expresion -> expresion NOIGUALQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 69 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 91

    (70) expresion -> expresion MENORQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 70 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 70 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 70 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 92

    (71) expresion -> expresion MAYORQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 71 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 71 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 93

    (72) expresion -> expresion MENORIQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 72 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 72 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 94

    (73) expresion -> expresion MAYORIQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 60 ]
  ! NOIGUALQUE      [ shift and go to state 61 ]
  ! MENORQUE        [ shift and go to state 62 ]
  ! MAYORQUE        [ shift and go to state 63 ]
  ! MENORIQUE       [ shift and go to state 64 ]
  ! MAYORIQUE       [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 95

    (74) expresion -> expresion OR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 74 (expresion -> expresion OR expresion .)
    OR              reduce using rule 74 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 74 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 74 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 74 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    AND             shift and go to state 67

  ! MAS             [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 74 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 66 ]


state 96

    (75) expresion -> expresion AND expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 75 (expresion -> expresion AND expresion .)
    OR              reduce using rule 75 (expresion -> expresion AND expresion .)
    AND             reduce using rule 75 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 75 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 75 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 75 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65

  ! MAS             [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 75 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 66 ]
  ! AND             [ shift and go to state 67 ]


state 97

    (56) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 117


state 98

    (57) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 118


state 99

    (66) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 119
    POWF            shift and go to state 120


state 100

    (78) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)


state 101

    (38) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (35) bloque_match -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTO             shift and go to state 121
    IGUAL           reduce using rule 35 (bloque_match -> expresion .)
    BARRAS          reduce using rule 35 (bloque_match -> expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 102

    (26) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 122


state 103

    (27) imatch -> opmatch . COMA dmatch
    (28) opmatch -> opmatch . COMA cmatch
    (29) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 123


state 104

    (30) opmatch -> cmatch .

    COMA            reduce using rule 30 (opmatch -> cmatch .)


state 105

    (31) opmatch -> rmatch .

    COMA            reduce using rule 31 (opmatch -> rmatch .)


state 106

    (32) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (33) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (34) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 124
    BARRAS          shift and go to state 125


state 107

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instrucciones                  shift and go to state 126
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 108

    (13) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 127


state 109

    (14) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 128
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 110

    (15) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 129
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 111

    (16) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 16 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 112

    (11) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (47) expresiones -> . expresiones COMA expresion
    (48) expresiones -> . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 130
    expresiones                    shift and go to state 131
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 113

    (12) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 132


state 114

    (89) bloque_expresion -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 89 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 89 (bloque_expresion -> expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 115

    (80) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (81) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER else
    (82) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif
    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif else
    (88) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 133
    PTCOMA          shift and go to state 134


state 116

    (18) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (19) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (25) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (87) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (22) lelseif -> . lelseif elseif
    (23) lelseif -> . elseif
    (24) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (84) elseif -> . elseif lif
    (85) elseif -> . lif
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 18 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 137

    else                           shift and go to state 135
    lelseif                        shift and go to state 136
    elseif                         shift and go to state 138
    lif                            shift and go to state 139

state 117

    (56) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 140


state 118

    (57) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 141


state 119

    (66) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 142


state 120

    (67) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 143


state 121

    (38) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 144


state 122

    (26) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 26 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 123

    (27) imatch -> opmatch COMA . dmatch
    (28) opmatch -> opmatch COMA . cmatch
    (29) opmatch -> opmatch COMA . rmatch
    (36) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (32) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (33) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (38) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (34) bloque_match -> . bloque_match BARRAS expresion
    (35) bloque_match -> . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    GUIONB          shift and go to state 148
    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    dmatch                         shift and go to state 145
    cmatch                         shift and go to state 146
    rmatch                         shift and go to state 147
    bloque_match                   shift and go to state 106
    expresion                      shift and go to state 101
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 124

    (32) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (33) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 149


state 125

    (34) bloque_match -> bloque_match BARRAS . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 150
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 126

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 151
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 127

    (13) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 152
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 128

    (14) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 14 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 129

    (15) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 153
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 130

    (48) expresiones -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PARDER          reduce using rule 48 (expresiones -> expresion .)
    COMA            reduce using rule 48 (expresiones -> expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 131

    (11) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (47) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 155
    COMA            shift and go to state 154


state 132

    (12) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 133

    (80) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (81) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . else
    (82) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif
    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif else
    (25) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (87) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (24) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (84) elseif -> . elseif lif
    (85) elseif -> . lif
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 80 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 137

    else                           shift and go to state 156
    elseif                         shift and go to state 157
    lif                            shift and go to state 139

state 134

    (88) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 158
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 135

    (19) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 136

    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (22) lelseif -> lelseif . elseif
    (25) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (87) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (24) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (84) elseif -> . elseif lif
    (85) elseif -> . lif
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 137

    else                           shift and go to state 159
    elseif                         shift and go to state 160
    lif                            shift and go to state 139

state 137

    (25) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (87) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (24) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (86) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 161
    IF              shift and go to state 162


state 138

    (23) lelseif -> elseif .
    (84) elseif -> elseif . lif
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 23 (lelseif -> elseif .)
    LET             reduce using rule 23 (lelseif -> elseif .)
    PRINTLN         reduce using rule 23 (lelseif -> elseif .)
    ID              reduce using rule 23 (lelseif -> elseif .)
    IF              reduce using rule 23 (lelseif -> elseif .)
    MATCH           reduce using rule 23 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 23 (lelseif -> elseif .)
    COMA            reduce using rule 23 (lelseif -> elseif .)
    ELSE            shift and go to state 164

  ! ELSE            [ reduce using rule 23 (lelseif -> elseif .) ]

    lif                            shift and go to state 163

state 139

    (85) elseif -> lif .

    ELSE            reduce using rule 85 (elseif -> lif .)
    FN              reduce using rule 85 (elseif -> lif .)
    LET             reduce using rule 85 (elseif -> lif .)
    PRINTLN         reduce using rule 85 (elseif -> lif .)
    ID              reduce using rule 85 (elseif -> lif .)
    IF              reduce using rule 85 (elseif -> lif .)
    MATCH           reduce using rule 85 (elseif -> lif .)
    LLAVEDER        reduce using rule 85 (elseif -> lif .)
    COMA            reduce using rule 85 (elseif -> lif .)
    LLAVEIZQ        reduce using rule 85 (elseif -> lif .)
    MAS             reduce using rule 85 (elseif -> lif .)
    MENOS           reduce using rule 85 (elseif -> lif .)
    POR             reduce using rule 85 (elseif -> lif .)
    DIVIDIDO        reduce using rule 85 (elseif -> lif .)
    MODULO          reduce using rule 85 (elseif -> lif .)
    IGUALQUE        reduce using rule 85 (elseif -> lif .)
    NOIGUALQUE      reduce using rule 85 (elseif -> lif .)
    MENORQUE        reduce using rule 85 (elseif -> lif .)
    MAYORQUE        reduce using rule 85 (elseif -> lif .)
    MENORIQUE       reduce using rule 85 (elseif -> lif .)
    MAYORIQUE       reduce using rule 85 (elseif -> lif .)
    OR              reduce using rule 85 (elseif -> lif .)
    AND             reduce using rule 85 (elseif -> lif .)
    PTCOMA          reduce using rule 85 (elseif -> lif .)
    PARDER          reduce using rule 85 (elseif -> lif .)
    PTO             reduce using rule 85 (elseif -> lif .)
    IGUAL           reduce using rule 85 (elseif -> lif .)
    BARRAS          reduce using rule 85 (elseif -> lif .)


state 140

    (56) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 56 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 141

    (57) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 57 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 142

    (66) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 165
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 143

    (67) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 166
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 144

    (38) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 167


state 145

    (27) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 27 (imatch -> opmatch COMA dmatch .)


state 146

    (28) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 28 (opmatch -> opmatch COMA cmatch .)


state 147

    (29) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 29 (opmatch -> opmatch COMA rmatch .)


state 148

    (36) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 168


state 149

    (32) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (33) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEIZQ        shift and go to state 169
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 170
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 150

    (34) bloque_match -> bloque_match BARRAS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 34 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 34 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 151

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 152

    (13) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 171
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 153

    (15) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 15 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 154

    (47) expresiones -> expresiones COMA . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 172
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 155

    (11) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 173


state 156

    (81) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .

    LLAVEIZQ        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAS             reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENOS           reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    POR             reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    DIVIDIDO        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MODULO          reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUALQUE        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    NOIGUALQUE      reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORQUE        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORQUE        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORIQUE       reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORIQUE       reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    OR              reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    AND             reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTCOMA          reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PARDER          reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    COMA            reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTO             reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUAL           reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    BARRAS          reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    LLAVEDER        reduce using rule 81 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)


state 157

    (82) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .
    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif . else
    (84) elseif -> elseif . lif
    (25) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (87) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAS             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENOS           reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    POR             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    DIVIDIDO        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MODULO          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUALQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    NOIGUALQUE      reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORIQUE       reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORIQUE       reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    OR              reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    AND             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTCOMA          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PARDER          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    COMA            reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTO             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUAL           reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    BARRAS          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    LLAVEDER        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    ELSE            shift and go to state 175

    else                           shift and go to state 174
    lif                            shift and go to state 163

state 158

    (88) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 88 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 88 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 159

    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 160

    (22) lelseif -> lelseif elseif .
    (84) elseif -> elseif . lif
    (86) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 22 (lelseif -> lelseif elseif .)
    LET             reduce using rule 22 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 22 (lelseif -> lelseif elseif .)
    ID              reduce using rule 22 (lelseif -> lelseif elseif .)
    IF              reduce using rule 22 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 22 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 22 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 22 (lelseif -> lelseif elseif .)
    ELSE            shift and go to state 164

  ! ELSE            [ reduce using rule 22 (lelseif -> lelseif elseif .) ]

    lif                            shift and go to state 163

state 161

    (25) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (87) else -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (88) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (89) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 178
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    IF              shift and go to state 179
    MATCH           shift and go to state 15
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45

    instrucciones                  shift and go to state 176
    bloque_expresion               shift and go to state 177
    instruccion                    shift and go to state 4
    expresion                      shift and go to state 114
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 162

    (24) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (86) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 180
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 163

    (84) elseif -> elseif lif .

    ELSE            reduce using rule 84 (elseif -> elseif lif .)
    FN              reduce using rule 84 (elseif -> elseif lif .)
    LET             reduce using rule 84 (elseif -> elseif lif .)
    PRINTLN         reduce using rule 84 (elseif -> elseif lif .)
    ID              reduce using rule 84 (elseif -> elseif lif .)
    IF              reduce using rule 84 (elseif -> elseif lif .)
    MATCH           reduce using rule 84 (elseif -> elseif lif .)
    LLAVEDER        reduce using rule 84 (elseif -> elseif lif .)
    COMA            reduce using rule 84 (elseif -> elseif lif .)
    LLAVEIZQ        reduce using rule 84 (elseif -> elseif lif .)
    MAS             reduce using rule 84 (elseif -> elseif lif .)
    MENOS           reduce using rule 84 (elseif -> elseif lif .)
    POR             reduce using rule 84 (elseif -> elseif lif .)
    DIVIDIDO        reduce using rule 84 (elseif -> elseif lif .)
    MODULO          reduce using rule 84 (elseif -> elseif lif .)
    IGUALQUE        reduce using rule 84 (elseif -> elseif lif .)
    NOIGUALQUE      reduce using rule 84 (elseif -> elseif lif .)
    MENORQUE        reduce using rule 84 (elseif -> elseif lif .)
    MAYORQUE        reduce using rule 84 (elseif -> elseif lif .)
    MENORIQUE       reduce using rule 84 (elseif -> elseif lif .)
    MAYORIQUE       reduce using rule 84 (elseif -> elseif lif .)
    OR              reduce using rule 84 (elseif -> elseif lif .)
    AND             reduce using rule 84 (elseif -> elseif lif .)
    PTCOMA          reduce using rule 84 (elseif -> elseif lif .)
    PARDER          reduce using rule 84 (elseif -> elseif lif .)
    PTO             reduce using rule 84 (elseif -> elseif lif .)
    IGUAL           reduce using rule 84 (elseif -> elseif lif .)
    BARRAS          reduce using rule 84 (elseif -> elseif lif .)


state 164

    (86) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    IF              shift and go to state 181


state 165

    (66) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    COMA            shift and go to state 182
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 166

    (67) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    COMA            shift and go to state 183
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 167

    (38) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 184
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 168

    (36) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (37) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 185


state 169

    (32) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instrucciones                  shift and go to state 186
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 170

    (33) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 33 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 171

    (13) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 13 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 172

    (47) expresiones -> expresiones COMA expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PARDER          reduce using rule 47 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 47 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 173

    (11) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 174

    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .

    LLAVEIZQ        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAS             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENOS           reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    POR             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    DIVIDIDO        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MODULO          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUALQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    NOIGUALQUE      reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORIQUE       reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORIQUE       reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    OR              reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    AND             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTCOMA          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PARDER          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    COMA            reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTO             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUAL           reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    BARRAS          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    LLAVEDER        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)


state 175

    (25) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (87) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (86) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 161
    IF              shift and go to state 181


state 176

    (25) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 187
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 177

    (87) else -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (88) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 188
    PTCOMA          shift and go to state 134


state 178

    (49) expresion -> ID .
    (17) asignacion -> ID . IGUAL expresion PTCOMA

    MAS             reduce using rule 49 (expresion -> ID .)
    MENOS           reduce using rule 49 (expresion -> ID .)
    POR             reduce using rule 49 (expresion -> ID .)
    DIVIDIDO        reduce using rule 49 (expresion -> ID .)
    MODULO          reduce using rule 49 (expresion -> ID .)
    IGUALQUE        reduce using rule 49 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 49 (expresion -> ID .)
    MENORQUE        reduce using rule 49 (expresion -> ID .)
    MAYORQUE        reduce using rule 49 (expresion -> ID .)
    MENORIQUE       reduce using rule 49 (expresion -> ID .)
    MAYORIQUE       reduce using rule 49 (expresion -> ID .)
    OR              reduce using rule 49 (expresion -> ID .)
    AND             reduce using rule 49 (expresion -> ID .)
    LLAVEDER        reduce using rule 49 (expresion -> ID .)
    PTCOMA          reduce using rule 49 (expresion -> ID .)
    IGUAL           shift and go to state 21


state 179

    (18) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (80) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 189
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 180

    (24) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (86) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 190
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 181

    (86) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 191
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 182

    (66) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 192
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 183

    (67) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    tipo                           shift and go to state 36
    expresion                      shift and go to state 193
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    if_asig                        shift and go to state 39

state 184

    (38) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 194
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 185

    (36) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (37) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEIZQ        shift and go to state 195
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 196
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 186

    (32) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 197
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 187

    (25) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 25 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 188

    (87) else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    FN              reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 87 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 189

    (18) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (80) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 198
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 190

    (24) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (86) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (88) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (89) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 178
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    IF              shift and go to state 179
    MATCH           shift and go to state 15
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45

    expresion                      shift and go to state 114
    instrucciones                  shift and go to state 199
    bloque_expresion               shift and go to state 200
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 191

    (86) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 201
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 192

    (66) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PARDER          shift and go to state 202
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 193

    (67) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUALQUE expresion
    (69) expresion -> expresion . NOIGUALQUE expresion
    (70) expresion -> expresion . MENORQUE expresion
    (71) expresion -> expresion . MAYORQUE expresion
    (72) expresion -> expresion . MENORIQUE expresion
    (73) expresion -> expresion . MAYORIQUE expresion
    (74) expresion -> expresion . OR expresion
    (75) expresion -> expresion . AND expresion

    PARDER          shift and go to state 203
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    POR             shift and go to state 57
    DIVIDIDO        shift and go to state 58
    MODULO          shift and go to state 59
    IGUALQUE        shift and go to state 60
    NOIGUALQUE      shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MENORIQUE       shift and go to state 64
    MAYORIQUE       shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67


state 194

    (38) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 204


state 195

    (36) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instrucciones                  shift and go to state 205
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 196

    (37) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 37 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 197

    (32) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 32 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 198

    (18) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (80) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (81) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (82) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (83) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (88) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (89) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 178
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    IF              shift and go to state 179
    MATCH           shift and go to state 15
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45

    expresion                      shift and go to state 114
    instrucciones                  shift and go to state 83
    bloque_expresion               shift and go to state 115
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 199

    (24) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 206
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 200

    (86) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (88) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 207
    PTCOMA          shift and go to state 134


state 201

    (86) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (88) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (89) bloque_expresion -> . expresion
    (49) expresion -> . ID
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . tostring
    (55) expresion -> . toowned
    (58) expresion -> . STR
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (67) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (68) expresion -> . expresion IGUALQUE expresion
    (69) expresion -> . expresion NOIGUALQUE expresion
    (70) expresion -> . expresion MENORQUE expresion
    (71) expresion -> . expresion MAYORQUE expresion
    (72) expresion -> . expresion MENORIQUE expresion
    (73) expresion -> . expresion MAYORIQUE expresion
    (74) expresion -> . expresion OR expresion
    (75) expresion -> . expresion AND expresion
    (76) expresion -> . MENOS expresion
    (77) expresion -> . NOT expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . if_asig
    (56) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (57) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (41) tipo -> . I64
    (42) tipo -> . F64
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (46) tipo -> . SIGNOI STR
    (80) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (81) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else

    ID              shift and go to state 25
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    STR             shift and go to state 32
    CADENA          shift and go to state 33
    CARACTER        shift and go to state 34
    MENOS           shift and go to state 35
    NOT             shift and go to state 38
    PARIZQ          shift and go to state 37
    I64             shift and go to state 40
    F64             shift and go to state 41
    BOOL            shift and go to state 42
    CHAR            shift and go to state 43
    STRING          shift and go to state 44
    SIGNOI          shift and go to state 45
    IF              shift and go to state 23

    expresion                      shift and go to state 114
    bloque_expresion               shift and go to state 200
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    tipo                           shift and go to state 36
    if_asig                        shift and go to state 39

state 202

    (66) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 66 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 203

    (67) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 67 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 204

    (38) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (39) rrmatch -> . instruccion
    (40) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEIZQ        shift and go to state 210
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    rrmatch                        shift and go to state 208
    instruccion                    shift and go to state 209
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 205

    (36) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 211
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 206

    (24) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 24 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 207

    (86) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    FN              reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 86 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 208

    (38) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 38 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 209

    (39) rrmatch -> instruccion .

    COMA            reduce using rule 39 (rrmatch -> instruccion .)


state 210

    (40) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instrucciones                  shift and go to state 212
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 211

    (36) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 36 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 212

    (40) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (13) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (14) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (15) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID IGUAL expresion PTCOMA
    (11) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (17) asignacion -> . ID IGUAL expresion PTCOMA
    (18) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (26) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER

    LLAVEDER        shift and go to state 213
    LET             shift and go to state 11
    PRINTLN         shift and go to state 13
    ID              shift and go to state 12
    IF              shift and go to state 14
    MATCH           shift and go to state 15

    instruccion                    shift and go to state 17
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10

state 213

    (40) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 40 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 33 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 138 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 160 resolved as shift
