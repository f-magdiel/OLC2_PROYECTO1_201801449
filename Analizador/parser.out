Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 22    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 23    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 24    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 25    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 26    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 27    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 28    lparametros -> lparametros COMA lparame
Rule 29    lparametros -> lparame
Rule 30    lparame -> ID DOSPT tipo
Rule 31    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 32    llamada_funciones -> ID PARIZQ PARDER
Rule 33    largumentos -> largumentos COMA expresion
Rule 34    largumentos -> expresion
Rule 35    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 36    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 37    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 38    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 39    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 40    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 41    asignacion -> ID IGUAL expresion PTCOMA
Rule 42    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 43    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 44    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 45    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 46    lelseif -> lelseif elseif
Rule 47    lelseif -> elseif
Rule 48    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 49    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 50    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 51    imatch -> opmatch COMA dmatch
Rule 52    opmatch -> opmatch COMA cmatch
Rule 53    opmatch -> opmatch COMA rmatch
Rule 54    opmatch -> cmatch
Rule 55    opmatch -> rmatch
Rule 56    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 57    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 58    bloque_match -> bloque_match BARRAS expresion
Rule 59    bloque_match -> expresion
Rule 60    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 61    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 62    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 63    rrmatch -> instruccion
Rule 64    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 65    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 66    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 67    break -> BREAK PTCOMA
Rule 68    break -> BREAK expresion PTCOMA
Rule 69    continue -> CONTINUE PTCOMA
Rule 70    return -> RETURN expresion PTCOMA
Rule 71    tipo -> I64
Rule 72    tipo -> F64
Rule 73    tipo -> BOOL
Rule 74    tipo -> CHAR
Rule 75    tipo -> STRING
Rule 76    tipo -> USIZE
Rule 77    tipo -> SIGNOI STR
Rule 78    expresiones -> expresiones COMA expresion
Rule 79    expresiones -> expresion
Rule 80    expresion -> ID
Rule 81    expresion -> ENTERO
Rule 82    expresion -> DECIMAL
Rule 83    expresion -> TRUE
Rule 84    expresion -> FALSE
Rule 85    expresion -> tostring
Rule 86    expresion -> toowned
Rule 87    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 88    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 89    expresion -> STR
Rule 90    expresion -> CADENA
Rule 91    expresion -> CARACTER
Rule 92    expresion -> expresion MAS expresion
Rule 93    expresion -> expresion MENOS expresion
Rule 94    expresion -> expresion POR expresion
Rule 95    expresion -> expresion DIVIDIDO expresion
Rule 96    expresion -> expresion MODULO expresion
Rule 97    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 98    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 99    expresion -> expresion IGUALQUE expresion
Rule 100   expresion -> expresion NOIGUALQUE expresion
Rule 101   expresion -> expresion MENORQUE expresion
Rule 102   expresion -> expresion MAYORQUE expresion
Rule 103   expresion -> expresion MENORIQUE expresion
Rule 104   expresion -> expresion MAYORIQUE expresion
Rule 105   expresion -> expresion OR expresion
Rule 106   expresion -> expresion AND expresion
Rule 107   expresion -> MENOS expresion
Rule 108   expresion -> NOT expresion
Rule 109   expresion -> PARIZQ expresion PARDER
Rule 110   expresion -> llamada_funciones
Rule 111   expresion -> CORIZQ expresiones CORDER
Rule 112   expresion -> ID lindices
Rule 113   lindices -> lindices CORIZQ expresion CORDER
Rule 114   lindices -> CORIZQ expresion CORDER
Rule 115   expresion -> if_asig
Rule 116   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 117   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 118   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 119   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 120   elseifa -> elseifa lif
Rule 121   elseifa -> lif
Rule 122   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 123   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 124   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 125   bloque_expresion -> expresion
Rule 126   expresion -> match_asig
Rule 127   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 128   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 129   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 130   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 131   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 132   opmatch_asig -> cmatch_asig
Rule 133   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 134   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 135   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 136   bloque_match_asig -> expresion
Rule 137   expresion -> loop_asig
Rule 138   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 106
AS                   : 
BARRAS               : 58 135
BOOL                 : 73
BREAK                : 67 68
CADENA               : 87 88 90
CARACTER             : 91
CHAR                 : 74
COMA                 : 28 33 35 51 52 53 78 97 98 128 131
CONTINUE             : 69
CORDER               : 22 23 111 113 114
CORIZQ               : 22 23 111 113 114
DECIMAL              : 82
DIVIDIDO             : 95
DOSPT                : 21 30 37 39 97 97 98 98
ELSE                 : 48 49 122 123
ENTERO               : 81
F64                  : 72
FALSE                : 84
FN                   : 5 24 25 26 27
GUIONB               : 60 61 129 130
I64                  : 71
ID                   : 21 24 25 26 27 30 31 32 37 38 39 40 41 80 112
IF                   : 42 43 44 45 48 116 117 118 119 122
IGUAL                : 21 37 38 39 40 41 56 57 60 61 62 62 129 130 133 134
IGUALQUE             : 99
LET                  : 21 37 38 39 40
LLAVEDER             : 5 24 25 26 27 42 43 44 45 48 49 50 56 60 64 65 66 116 117 118 119 122 123 127 129 133 138
LLAVEIZQ             : 5 24 25 26 27 42 43 44 45 48 49 50 56 60 64 65 66 116 117 118 119 122 123 127 129 133 138
LOOP                 : 65 138
MAIN                 : 5
MAS                  : 92
MATCH                : 50 127
MAYORIQUE            : 104
MAYORQUE             : 24 25 56 57 60 61 62 102 129 130 133 134
MENORIQUE            : 103
MENORQUE             : 101
MENOS                : 24 25 93 107
MODULO               : 96
MUT                  : 21 37 38
NOIGUALQUE           : 100
NOT                  : 35 36 108
OR                   : 105
PARDER               : 5 24 25 26 27 31 32 35 36 87 88 97 98 109
PARIZQ               : 5 24 25 26 27 31 32 35 36 87 88 97 98 109
POR                  : 94
POW                  : 97
POWF                 : 98
PRINTLN              : 35 36
PTCOMA               : 19 21 22 23 35 36 37 38 39 40 41 67 68 69 70 124
PTO                  : 62 62 87 88
RETURN               : 70
SIGNOI               : 77
STR                  : 77 89
STRING               : 75
TOOWNED              : 88
TOSTRING             : 87
TRUE                 : 83
USIZE                : 76
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 116 117 118 119 122 123 124 129 133
bloque_match         : 56 57 58
bloque_match_asig    : 133 134 135
break                : 15
cmatch               : 52 54
cmatch_asig          : 131 132
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
dmatch               : 51
dmatch_asig          : 128
else                 : 43 45
elsea                : 117 119
elseif               : 46 47
elseifa              : 118 119 120
expresion            : 21 22 23 33 34 35 36 37 38 39 40 41 42 43 44 45 48 50 58 59 62 62 66 68 70 78 79 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 108 109 113 114 116 117 118 119 122 124 125 127 130 134 135 136
expresiones          : 35 78 111
funciones            : 18
if                   : 11
if_asig              : 115
imatch               : 50
imatch_asig          : 127
imprimir             : 9
inicio               : 0
instruccion          : 6 7 57 61 63
instrucciones        : 1 1 2 3 5 6 24 25 26 27 42 43 44 45 48 49 56 60 64 65 66 138
largumentos          : 31 33
lelseif              : 44 45 46
lif                  : 120 121
lindices             : 112 113
llamada_funciones    : 19 110
loop                 : 13
loop_asig            : 137
lparame              : 28 29
lparametros          : 24 26 28
main                 : 1 2 3 4
match                : 12
match_asig           : 126
opmatch              : 51 52 53
opmatch_asig         : 128 131
return               : 16
rmatch               : 53 55
rrmatch              : 62
tipo                 : 23 24 25 30 37 39 97 98
tipo_arreglo         : 21 22
toowned              : 86
tostring             : 85
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28

    main                           shift and go to state 29
    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 31
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (24) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 33
    ID              shift and go to state 34


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 35


state 18

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 19

    (37) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> LET . ID IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    MUT             shift and go to state 36
    ID              shift and go to state 37


state 20

    (41) asignacion -> ID . IGUAL expresion PTCOMA
    (31) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (32) llamada_funciones -> ID . PARIZQ PARDER

    IGUAL           shift and go to state 38
    PARIZQ          shift and go to state 39


state 21

    (35) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 40


state 22

    (42) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 42
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 23

    (50) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 71
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 24

    (65) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 72


state 25

    (66) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 73
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 26

    (67) break -> BREAK . PTCOMA
    (68) break -> BREAK . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 74
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 75
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 27

    (70) return -> RETURN . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 76
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 28

    (69) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 77


state 29

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 78
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 30

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 31

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 32

    (24) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 34


state 33

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 79


state 34

    (24) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 80


state 35

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 36

    (37) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    ID              shift and go to state 81


state 37

    (39) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 82
    IGUAL           shift and go to state 83


state 38

    (41) asignacion -> ID IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 84
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 39

    (31) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (32) llamada_funciones -> ID PARIZQ . PARDER
    (33) largumentos -> . largumentos COMA expresion
    (34) largumentos -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 86
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    largumentos                    shift and go to state 85
    expresion                      shift and go to state 87
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 40

    (35) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 88


state 41

    (116) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 89
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 42

    (42) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (43) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 90
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 43

    (80) expresion -> ID .
    (112) expresion -> ID . lindices
    (31) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (32) llamada_funciones -> ID . PARIZQ PARDER
    (113) lindices -> . lindices CORIZQ expresion CORDER
    (114) lindices -> . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 80 (expresion -> ID .)
    MAS             reduce using rule 80 (expresion -> ID .)
    MENOS           reduce using rule 80 (expresion -> ID .)
    POR             reduce using rule 80 (expresion -> ID .)
    DIVIDIDO        reduce using rule 80 (expresion -> ID .)
    MODULO          reduce using rule 80 (expresion -> ID .)
    IGUALQUE        reduce using rule 80 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 80 (expresion -> ID .)
    MENORQUE        reduce using rule 80 (expresion -> ID .)
    MAYORQUE        reduce using rule 80 (expresion -> ID .)
    MENORIQUE       reduce using rule 80 (expresion -> ID .)
    MAYORIQUE       reduce using rule 80 (expresion -> ID .)
    OR              reduce using rule 80 (expresion -> ID .)
    AND             reduce using rule 80 (expresion -> ID .)
    PTCOMA          reduce using rule 80 (expresion -> ID .)
    PARDER          reduce using rule 80 (expresion -> ID .)
    COMA            reduce using rule 80 (expresion -> ID .)
    CORDER          reduce using rule 80 (expresion -> ID .)
    PTO             reduce using rule 80 (expresion -> ID .)
    IGUAL           reduce using rule 80 (expresion -> ID .)
    BARRAS          reduce using rule 80 (expresion -> ID .)
    LLAVEDER        reduce using rule 80 (expresion -> ID .)
    PARIZQ          shift and go to state 39
    CORIZQ          shift and go to state 105

    lindices                       shift and go to state 104

state 44

    (81) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 81 (expresion -> ENTERO .)
    MAS             reduce using rule 81 (expresion -> ENTERO .)
    MENOS           reduce using rule 81 (expresion -> ENTERO .)
    POR             reduce using rule 81 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 81 (expresion -> ENTERO .)
    MODULO          reduce using rule 81 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 81 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 81 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 81 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 81 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 81 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 81 (expresion -> ENTERO .)
    OR              reduce using rule 81 (expresion -> ENTERO .)
    AND             reduce using rule 81 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 81 (expresion -> ENTERO .)
    PARDER          reduce using rule 81 (expresion -> ENTERO .)
    COMA            reduce using rule 81 (expresion -> ENTERO .)
    CORDER          reduce using rule 81 (expresion -> ENTERO .)
    PTO             reduce using rule 81 (expresion -> ENTERO .)
    IGUAL           reduce using rule 81 (expresion -> ENTERO .)
    BARRAS          reduce using rule 81 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 81 (expresion -> ENTERO .)


state 45

    (82) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 82 (expresion -> DECIMAL .)
    MAS             reduce using rule 82 (expresion -> DECIMAL .)
    MENOS           reduce using rule 82 (expresion -> DECIMAL .)
    POR             reduce using rule 82 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 82 (expresion -> DECIMAL .)
    MODULO          reduce using rule 82 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 82 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 82 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 82 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 82 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 82 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 82 (expresion -> DECIMAL .)
    OR              reduce using rule 82 (expresion -> DECIMAL .)
    AND             reduce using rule 82 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 82 (expresion -> DECIMAL .)
    PARDER          reduce using rule 82 (expresion -> DECIMAL .)
    COMA            reduce using rule 82 (expresion -> DECIMAL .)
    CORDER          reduce using rule 82 (expresion -> DECIMAL .)
    PTO             reduce using rule 82 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 82 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 82 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 82 (expresion -> DECIMAL .)


state 46

    (83) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 83 (expresion -> TRUE .)
    MAS             reduce using rule 83 (expresion -> TRUE .)
    MENOS           reduce using rule 83 (expresion -> TRUE .)
    POR             reduce using rule 83 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 83 (expresion -> TRUE .)
    MODULO          reduce using rule 83 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 83 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 83 (expresion -> TRUE .)
    MENORQUE        reduce using rule 83 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 83 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 83 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 83 (expresion -> TRUE .)
    OR              reduce using rule 83 (expresion -> TRUE .)
    AND             reduce using rule 83 (expresion -> TRUE .)
    PTCOMA          reduce using rule 83 (expresion -> TRUE .)
    PARDER          reduce using rule 83 (expresion -> TRUE .)
    COMA            reduce using rule 83 (expresion -> TRUE .)
    CORDER          reduce using rule 83 (expresion -> TRUE .)
    PTO             reduce using rule 83 (expresion -> TRUE .)
    IGUAL           reduce using rule 83 (expresion -> TRUE .)
    BARRAS          reduce using rule 83 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 83 (expresion -> TRUE .)


state 47

    (84) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 84 (expresion -> FALSE .)
    MAS             reduce using rule 84 (expresion -> FALSE .)
    MENOS           reduce using rule 84 (expresion -> FALSE .)
    POR             reduce using rule 84 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 84 (expresion -> FALSE .)
    MODULO          reduce using rule 84 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 84 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 84 (expresion -> FALSE .)
    MENORQUE        reduce using rule 84 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 84 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 84 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 84 (expresion -> FALSE .)
    OR              reduce using rule 84 (expresion -> FALSE .)
    AND             reduce using rule 84 (expresion -> FALSE .)
    PTCOMA          reduce using rule 84 (expresion -> FALSE .)
    PARDER          reduce using rule 84 (expresion -> FALSE .)
    COMA            reduce using rule 84 (expresion -> FALSE .)
    CORDER          reduce using rule 84 (expresion -> FALSE .)
    PTO             reduce using rule 84 (expresion -> FALSE .)
    IGUAL           reduce using rule 84 (expresion -> FALSE .)
    BARRAS          reduce using rule 84 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 84 (expresion -> FALSE .)


state 48

    (85) expresion -> tostring .

    LLAVEIZQ        reduce using rule 85 (expresion -> tostring .)
    MAS             reduce using rule 85 (expresion -> tostring .)
    MENOS           reduce using rule 85 (expresion -> tostring .)
    POR             reduce using rule 85 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 85 (expresion -> tostring .)
    MODULO          reduce using rule 85 (expresion -> tostring .)
    IGUALQUE        reduce using rule 85 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 85 (expresion -> tostring .)
    MENORQUE        reduce using rule 85 (expresion -> tostring .)
    MAYORQUE        reduce using rule 85 (expresion -> tostring .)
    MENORIQUE       reduce using rule 85 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 85 (expresion -> tostring .)
    OR              reduce using rule 85 (expresion -> tostring .)
    AND             reduce using rule 85 (expresion -> tostring .)
    PTCOMA          reduce using rule 85 (expresion -> tostring .)
    PARDER          reduce using rule 85 (expresion -> tostring .)
    COMA            reduce using rule 85 (expresion -> tostring .)
    CORDER          reduce using rule 85 (expresion -> tostring .)
    PTO             reduce using rule 85 (expresion -> tostring .)
    IGUAL           reduce using rule 85 (expresion -> tostring .)
    BARRAS          reduce using rule 85 (expresion -> tostring .)
    LLAVEDER        reduce using rule 85 (expresion -> tostring .)


state 49

    (86) expresion -> toowned .

    LLAVEIZQ        reduce using rule 86 (expresion -> toowned .)
    MAS             reduce using rule 86 (expresion -> toowned .)
    MENOS           reduce using rule 86 (expresion -> toowned .)
    POR             reduce using rule 86 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 86 (expresion -> toowned .)
    MODULO          reduce using rule 86 (expresion -> toowned .)
    IGUALQUE        reduce using rule 86 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 86 (expresion -> toowned .)
    MENORQUE        reduce using rule 86 (expresion -> toowned .)
    MAYORQUE        reduce using rule 86 (expresion -> toowned .)
    MENORIQUE       reduce using rule 86 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 86 (expresion -> toowned .)
    OR              reduce using rule 86 (expresion -> toowned .)
    AND             reduce using rule 86 (expresion -> toowned .)
    PTCOMA          reduce using rule 86 (expresion -> toowned .)
    PARDER          reduce using rule 86 (expresion -> toowned .)
    COMA            reduce using rule 86 (expresion -> toowned .)
    CORDER          reduce using rule 86 (expresion -> toowned .)
    PTO             reduce using rule 86 (expresion -> toowned .)
    IGUAL           reduce using rule 86 (expresion -> toowned .)
    BARRAS          reduce using rule 86 (expresion -> toowned .)
    LLAVEDER        reduce using rule 86 (expresion -> toowned .)


state 50

    (89) expresion -> STR .

    LLAVEIZQ        reduce using rule 89 (expresion -> STR .)
    MAS             reduce using rule 89 (expresion -> STR .)
    MENOS           reduce using rule 89 (expresion -> STR .)
    POR             reduce using rule 89 (expresion -> STR .)
    DIVIDIDO        reduce using rule 89 (expresion -> STR .)
    MODULO          reduce using rule 89 (expresion -> STR .)
    IGUALQUE        reduce using rule 89 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 89 (expresion -> STR .)
    MENORQUE        reduce using rule 89 (expresion -> STR .)
    MAYORQUE        reduce using rule 89 (expresion -> STR .)
    MENORIQUE       reduce using rule 89 (expresion -> STR .)
    MAYORIQUE       reduce using rule 89 (expresion -> STR .)
    OR              reduce using rule 89 (expresion -> STR .)
    AND             reduce using rule 89 (expresion -> STR .)
    PTCOMA          reduce using rule 89 (expresion -> STR .)
    PARDER          reduce using rule 89 (expresion -> STR .)
    COMA            reduce using rule 89 (expresion -> STR .)
    CORDER          reduce using rule 89 (expresion -> STR .)
    PTO             reduce using rule 89 (expresion -> STR .)
    IGUAL           reduce using rule 89 (expresion -> STR .)
    BARRAS          reduce using rule 89 (expresion -> STR .)
    LLAVEDER        reduce using rule 89 (expresion -> STR .)


state 51

    (90) expresion -> CADENA .
    (87) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (88) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 90 (expresion -> CADENA .)
    MAS             reduce using rule 90 (expresion -> CADENA .)
    MENOS           reduce using rule 90 (expresion -> CADENA .)
    POR             reduce using rule 90 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 90 (expresion -> CADENA .)
    MODULO          reduce using rule 90 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 90 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 90 (expresion -> CADENA .)
    MENORQUE        reduce using rule 90 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 90 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 90 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 90 (expresion -> CADENA .)
    OR              reduce using rule 90 (expresion -> CADENA .)
    AND             reduce using rule 90 (expresion -> CADENA .)
    PTCOMA          reduce using rule 90 (expresion -> CADENA .)
    PARDER          reduce using rule 90 (expresion -> CADENA .)
    COMA            reduce using rule 90 (expresion -> CADENA .)
    CORDER          reduce using rule 90 (expresion -> CADENA .)
    IGUAL           reduce using rule 90 (expresion -> CADENA .)
    BARRAS          reduce using rule 90 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 90 (expresion -> CADENA .)
    PTO             shift and go to state 106

  ! PTO             [ reduce using rule 90 (expresion -> CADENA .) ]


state 52

    (91) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 91 (expresion -> CARACTER .)
    MAS             reduce using rule 91 (expresion -> CARACTER .)
    MENOS           reduce using rule 91 (expresion -> CARACTER .)
    POR             reduce using rule 91 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 91 (expresion -> CARACTER .)
    MODULO          reduce using rule 91 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 91 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 91 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 91 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 91 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 91 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 91 (expresion -> CARACTER .)
    OR              reduce using rule 91 (expresion -> CARACTER .)
    AND             reduce using rule 91 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 91 (expresion -> CARACTER .)
    PARDER          reduce using rule 91 (expresion -> CARACTER .)
    COMA            reduce using rule 91 (expresion -> CARACTER .)
    CORDER          reduce using rule 91 (expresion -> CARACTER .)
    PTO             reduce using rule 91 (expresion -> CARACTER .)
    IGUAL           reduce using rule 91 (expresion -> CARACTER .)
    BARRAS          reduce using rule 91 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 91 (expresion -> CARACTER .)


state 53

    (107) expresion -> MENOS . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 107
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 54

    (97) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 108


state 55

    (109) expresion -> PARIZQ . expresion PARDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 109
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 56

    (108) expresion -> NOT . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 110
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 57

    (110) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 110 (expresion -> llamada_funciones .)
    MAS             reduce using rule 110 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 110 (expresion -> llamada_funciones .)
    POR             reduce using rule 110 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 110 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 110 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 110 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 110 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 110 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 110 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 110 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 110 (expresion -> llamada_funciones .)
    OR              reduce using rule 110 (expresion -> llamada_funciones .)
    AND             reduce using rule 110 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 110 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 110 (expresion -> llamada_funciones .)
    COMA            reduce using rule 110 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 110 (expresion -> llamada_funciones .)
    PTO             reduce using rule 110 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 110 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 110 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 110 (expresion -> llamada_funciones .)


state 58

    (111) expresion -> CORIZQ . expresiones CORDER
    (78) expresiones -> . expresiones COMA expresion
    (79) expresiones -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresiones                    shift and go to state 111
    expresion                      shift and go to state 112
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 59

    (115) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 115 (expresion -> if_asig .)
    MAS             reduce using rule 115 (expresion -> if_asig .)
    MENOS           reduce using rule 115 (expresion -> if_asig .)
    POR             reduce using rule 115 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 115 (expresion -> if_asig .)
    MODULO          reduce using rule 115 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 115 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 115 (expresion -> if_asig .)
    MENORQUE        reduce using rule 115 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 115 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 115 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 115 (expresion -> if_asig .)
    OR              reduce using rule 115 (expresion -> if_asig .)
    AND             reduce using rule 115 (expresion -> if_asig .)
    PTCOMA          reduce using rule 115 (expresion -> if_asig .)
    PARDER          reduce using rule 115 (expresion -> if_asig .)
    COMA            reduce using rule 115 (expresion -> if_asig .)
    CORDER          reduce using rule 115 (expresion -> if_asig .)
    PTO             reduce using rule 115 (expresion -> if_asig .)
    IGUAL           reduce using rule 115 (expresion -> if_asig .)
    BARRAS          reduce using rule 115 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 115 (expresion -> if_asig .)


state 60

    (126) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 126 (expresion -> match_asig .)
    MAS             reduce using rule 126 (expresion -> match_asig .)
    MENOS           reduce using rule 126 (expresion -> match_asig .)
    POR             reduce using rule 126 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 126 (expresion -> match_asig .)
    MODULO          reduce using rule 126 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 126 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 126 (expresion -> match_asig .)
    MENORQUE        reduce using rule 126 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 126 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 126 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 126 (expresion -> match_asig .)
    OR              reduce using rule 126 (expresion -> match_asig .)
    AND             reduce using rule 126 (expresion -> match_asig .)
    PTCOMA          reduce using rule 126 (expresion -> match_asig .)
    PARDER          reduce using rule 126 (expresion -> match_asig .)
    COMA            reduce using rule 126 (expresion -> match_asig .)
    CORDER          reduce using rule 126 (expresion -> match_asig .)
    PTO             reduce using rule 126 (expresion -> match_asig .)
    IGUAL           reduce using rule 126 (expresion -> match_asig .)
    BARRAS          reduce using rule 126 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 126 (expresion -> match_asig .)


state 61

    (137) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 137 (expresion -> loop_asig .)
    MAS             reduce using rule 137 (expresion -> loop_asig .)
    MENOS           reduce using rule 137 (expresion -> loop_asig .)
    POR             reduce using rule 137 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 137 (expresion -> loop_asig .)
    MODULO          reduce using rule 137 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 137 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 137 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 137 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 137 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 137 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 137 (expresion -> loop_asig .)
    OR              reduce using rule 137 (expresion -> loop_asig .)
    AND             reduce using rule 137 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 137 (expresion -> loop_asig .)
    PARDER          reduce using rule 137 (expresion -> loop_asig .)
    COMA            reduce using rule 137 (expresion -> loop_asig .)
    CORDER          reduce using rule 137 (expresion -> loop_asig .)
    PTO             reduce using rule 137 (expresion -> loop_asig .)
    IGUAL           reduce using rule 137 (expresion -> loop_asig .)
    BARRAS          reduce using rule 137 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 137 (expresion -> loop_asig .)


state 62

    (71) tipo -> I64 .

    DOSPT           reduce using rule 71 (tipo -> I64 .)
    IGUAL           reduce using rule 71 (tipo -> I64 .)
    PARDER          reduce using rule 71 (tipo -> I64 .)
    COMA            reduce using rule 71 (tipo -> I64 .)
    PTCOMA          reduce using rule 71 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 71 (tipo -> I64 .)


state 63

    (72) tipo -> F64 .

    DOSPT           reduce using rule 72 (tipo -> F64 .)
    IGUAL           reduce using rule 72 (tipo -> F64 .)
    PARDER          reduce using rule 72 (tipo -> F64 .)
    COMA            reduce using rule 72 (tipo -> F64 .)
    PTCOMA          reduce using rule 72 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 72 (tipo -> F64 .)


state 64

    (73) tipo -> BOOL .

    DOSPT           reduce using rule 73 (tipo -> BOOL .)
    IGUAL           reduce using rule 73 (tipo -> BOOL .)
    PARDER          reduce using rule 73 (tipo -> BOOL .)
    COMA            reduce using rule 73 (tipo -> BOOL .)
    PTCOMA          reduce using rule 73 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 73 (tipo -> BOOL .)


state 65

    (74) tipo -> CHAR .

    DOSPT           reduce using rule 74 (tipo -> CHAR .)
    IGUAL           reduce using rule 74 (tipo -> CHAR .)
    PARDER          reduce using rule 74 (tipo -> CHAR .)
    COMA            reduce using rule 74 (tipo -> CHAR .)
    PTCOMA          reduce using rule 74 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 74 (tipo -> CHAR .)


state 66

    (75) tipo -> STRING .

    DOSPT           reduce using rule 75 (tipo -> STRING .)
    IGUAL           reduce using rule 75 (tipo -> STRING .)
    PARDER          reduce using rule 75 (tipo -> STRING .)
    COMA            reduce using rule 75 (tipo -> STRING .)
    PTCOMA          reduce using rule 75 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 75 (tipo -> STRING .)


state 67

    (76) tipo -> USIZE .

    DOSPT           reduce using rule 76 (tipo -> USIZE .)
    IGUAL           reduce using rule 76 (tipo -> USIZE .)
    PARDER          reduce using rule 76 (tipo -> USIZE .)
    COMA            reduce using rule 76 (tipo -> USIZE .)
    PTCOMA          reduce using rule 76 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 76 (tipo -> USIZE .)


state 68

    (77) tipo -> SIGNOI . STR

    STR             shift and go to state 113


state 69

    (127) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 114
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 70

    (138) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 115


state 71

    (50) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 116
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 72

    (65) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 73

    (66) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 118
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 74

    (67) break -> BREAK PTCOMA .

    FN              reduce using rule 67 (break -> BREAK PTCOMA .)
    LET             reduce using rule 67 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 67 (break -> BREAK PTCOMA .)
    ID              reduce using rule 67 (break -> BREAK PTCOMA .)
    IF              reduce using rule 67 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 67 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 67 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 67 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 67 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 67 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 67 (break -> BREAK PTCOMA .)
    $end            reduce using rule 67 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 67 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 67 (break -> BREAK PTCOMA .)


state 75

    (68) break -> BREAK expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 119
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 76

    (70) return -> RETURN expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 120
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 77

    (69) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 69 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 69 (continue -> CONTINUE PTCOMA .)


state 78

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 79

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 121


state 80

    (24) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) lparametros -> . lparametros COMA lparame
    (29) lparametros -> . lparame
    (30) lparame -> . ID DOSPT tipo

    PARDER          shift and go to state 124
    ID              shift and go to state 122

    lparametros                    shift and go to state 123
    lparame                        shift and go to state 125

state 81

    (37) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA

    DOSPT           shift and go to state 126
    IGUAL           shift and go to state 127


state 82

    (39) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR

    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68

    tipo                           shift and go to state 128

state 83

    (40) declaracion -> LET ID IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 129
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 84

    (41) asignacion -> ID IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 130
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 85

    (31) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (33) largumentos -> largumentos . COMA expresion

    PARDER          shift and go to state 131
    COMA            shift and go to state 132


state 86

    (32) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 32 (llamada_funciones -> ID PARIZQ PARDER .)


state 87

    (34) largumentos -> expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PARDER          reduce using rule 34 (largumentos -> expresion .)
    COMA            reduce using rule 34 (largumentos -> expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 88

    (35) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 133
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 89

    (116) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 134
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 90

    (42) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (43) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (44) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (45) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 135
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 91

    (92) expresion -> expresion MAS . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 136
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 92

    (93) expresion -> expresion MENOS . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 137
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 93

    (94) expresion -> expresion POR . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 138
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 94

    (95) expresion -> expresion DIVIDIDO . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 139
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 95

    (96) expresion -> expresion MODULO . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 140
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 96

    (99) expresion -> expresion IGUALQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 141
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 97

    (100) expresion -> expresion NOIGUALQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 142
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 98

    (101) expresion -> expresion MENORQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 143
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 99

    (102) expresion -> expresion MAYORQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 144
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 100

    (103) expresion -> expresion MENORIQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 145
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 101

    (104) expresion -> expresion MAYORIQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 146
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 102

    (105) expresion -> expresion OR . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 147
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 103

    (106) expresion -> expresion AND . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 148
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 104

    (112) expresion -> ID lindices .
    (113) lindices -> lindices . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 112 (expresion -> ID lindices .)
    MAS             reduce using rule 112 (expresion -> ID lindices .)
    MENOS           reduce using rule 112 (expresion -> ID lindices .)
    POR             reduce using rule 112 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 112 (expresion -> ID lindices .)
    MODULO          reduce using rule 112 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 112 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 112 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 112 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 112 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 112 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 112 (expresion -> ID lindices .)
    OR              reduce using rule 112 (expresion -> ID lindices .)
    AND             reduce using rule 112 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 112 (expresion -> ID lindices .)
    PARDER          reduce using rule 112 (expresion -> ID lindices .)
    COMA            reduce using rule 112 (expresion -> ID lindices .)
    CORDER          reduce using rule 112 (expresion -> ID lindices .)
    PTO             reduce using rule 112 (expresion -> ID lindices .)
    IGUAL           reduce using rule 112 (expresion -> ID lindices .)
    BARRAS          reduce using rule 112 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 112 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 149


state 105

    (114) lindices -> CORIZQ . expresion CORDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 150
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 106

    (87) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (88) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 151
    TOOWNED         shift and go to state 152


state 107

    (107) expresion -> MENOS expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 107 (expresion -> MENOS expresion .)
    MAS             reduce using rule 107 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 107 (expresion -> MENOS expresion .)
    POR             reduce using rule 107 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 107 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 107 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 107 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 107 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 107 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 107 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 107 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 107 (expresion -> MENOS expresion .)
    OR              reduce using rule 107 (expresion -> MENOS expresion .)
    AND             reduce using rule 107 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 107 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 107 (expresion -> MENOS expresion .)
    COMA            reduce using rule 107 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 107 (expresion -> MENOS expresion .)
    PTO             reduce using rule 107 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 107 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 107 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 107 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! POR             [ shift and go to state 93 ]
  ! DIVIDIDO        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 108

    (97) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 153


state 109

    (109) expresion -> PARIZQ expresion . PARDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PARDER          shift and go to state 154
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 110

    (108) expresion -> NOT expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 108 (expresion -> NOT expresion .)
    MAS             reduce using rule 108 (expresion -> NOT expresion .)
    MENOS           reduce using rule 108 (expresion -> NOT expresion .)
    POR             reduce using rule 108 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 108 (expresion -> NOT expresion .)
    MODULO          reduce using rule 108 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 108 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 108 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 108 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 108 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 108 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 108 (expresion -> NOT expresion .)
    OR              reduce using rule 108 (expresion -> NOT expresion .)
    AND             reduce using rule 108 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 108 (expresion -> NOT expresion .)
    PARDER          reduce using rule 108 (expresion -> NOT expresion .)
    COMA            reduce using rule 108 (expresion -> NOT expresion .)
    CORDER          reduce using rule 108 (expresion -> NOT expresion .)
    PTO             reduce using rule 108 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 108 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 108 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 108 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! POR             [ shift and go to state 93 ]
  ! DIVIDIDO        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 111

    (111) expresion -> CORIZQ expresiones . CORDER
    (78) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 155
    COMA            shift and go to state 156


state 112

    (79) expresiones -> expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          reduce using rule 79 (expresiones -> expresion .)
    COMA            reduce using rule 79 (expresiones -> expresion .)
    PARDER          reduce using rule 79 (expresiones -> expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 113

    (77) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 77 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 77 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 77 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 77 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 77 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 77 (tipo -> SIGNOI STR .)


state 114

    (127) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 157
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 115

    (138) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 158
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 116

    (50) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (51) imatch -> . opmatch COMA dmatch
    (52) opmatch -> . opmatch COMA cmatch
    (53) opmatch -> . opmatch COMA rmatch
    (54) opmatch -> . cmatch
    (55) opmatch -> . rmatch
    (56) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (62) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (58) bloque_match -> . bloque_match BARRAS expresion
    (59) bloque_match -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 159
    imatch                         shift and go to state 160
    opmatch                        shift and go to state 161
    cmatch                         shift and go to state 162
    rmatch                         shift and go to state 163
    bloque_match                   shift and go to state 164
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 117

    (65) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 165
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 118

    (66) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 166
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 119

    (68) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 68 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 68 (break -> BREAK expresion PTCOMA .)


state 120

    (70) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 70 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 70 (return -> RETURN expresion PTCOMA .)


state 121

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 167


state 122

    (30) lparame -> ID . DOSPT tipo

    DOSPT           shift and go to state 168


state 123

    (24) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 169
    COMA            shift and go to state 170


state 124

    (25) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 171
    LLAVEIZQ        shift and go to state 172


state 125

    (29) lparametros -> lparame .

    PARDER          reduce using rule 29 (lparametros -> lparame .)
    COMA            reduce using rule 29 (lparametros -> lparame .)


state 126

    (37) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (21) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (22) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    CORIZQ          shift and go to state 175

    tipo                           shift and go to state 173
    tipo_arreglo                   shift and go to state 174

state 127

    (38) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 176
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 128

    (39) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 177


state 129

    (40) declaracion -> LET ID IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 178
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 130

    (41) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 41 (asignacion -> ID IGUAL expresion PTCOMA .)


state 131

    (31) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 31 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 132

    (33) largumentos -> largumentos COMA . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 179
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 133

    (35) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (36) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    COMA            shift and go to state 180
    PARDER          shift and go to state 181
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 134

    (116) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (117) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (118) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (119) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (124) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (125) bloque_expresion -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 182
    bloque_expresion               shift and go to state 183
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 135

    (42) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (43) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (44) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (45) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 184
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 136

    (92) expresion -> expresion MAS expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 92 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 92 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 92 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 92 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 92 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 92 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 92 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 92 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 92 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 92 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 92 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 92 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 92 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 92 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 92 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 92 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! POR             [ reduce using rule 92 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 92 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 137

    (93) expresion -> expresion MENOS expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 93 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 93 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 93 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 93 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 93 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 93 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 93 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 93 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 93 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 93 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! POR             [ reduce using rule 93 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 138

    (94) expresion -> expresion POR expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 94 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 94 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 94 (expresion -> expresion POR expresion .)
    POR             reduce using rule 94 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 94 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 94 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 94 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 94 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 94 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 94 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 94 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 94 (expresion -> expresion POR expresion .)
    OR              reduce using rule 94 (expresion -> expresion POR expresion .)
    AND             reduce using rule 94 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 94 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 94 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 94 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! POR             [ shift and go to state 93 ]
  ! DIVIDIDO        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 139

    (95) expresion -> expresion DIVIDIDO expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! POR             [ shift and go to state 93 ]
  ! DIVIDIDO        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 140

    (96) expresion -> expresion MODULO expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 96 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 96 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 96 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 96 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 96 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 96 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 96 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 96 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 96 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 96 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 96 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 91 ]
  ! MENOS           [ shift and go to state 92 ]
  ! POR             [ shift and go to state 93 ]
  ! DIVIDIDO        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 141

    (99) expresion -> expresion IGUALQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 99 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 142

    (100) expresion -> expresion NOIGUALQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 143

    (101) expresion -> expresion MENORQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 101 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 101 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 101 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 144

    (102) expresion -> expresion MAYORQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 102 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 102 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 102 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 102 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 145

    (103) expresion -> expresion MENORIQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 103 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 103 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 103 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 103 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 146

    (104) expresion -> expresion MAYORIQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 104 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 96 ]
  ! NOIGUALQUE      [ shift and go to state 97 ]
  ! MENORQUE        [ shift and go to state 98 ]
  ! MAYORQUE        [ shift and go to state 99 ]
  ! MENORIQUE       [ shift and go to state 100 ]
  ! MAYORIQUE       [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 147

    (105) expresion -> expresion OR expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 105 (expresion -> expresion OR expresion .)
    OR              reduce using rule 105 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 105 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 105 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 105 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 105 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 105 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 105 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 105 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 105 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    AND             shift and go to state 103

  ! MAS             [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 105 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 102 ]


state 148

    (106) expresion -> expresion AND expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 106 (expresion -> expresion AND expresion .)
    OR              reduce using rule 106 (expresion -> expresion AND expresion .)
    AND             reduce using rule 106 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 106 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 106 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 106 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 106 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 106 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 106 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 106 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 106 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101

  ! MAS             [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 106 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 102 ]
  ! AND             [ shift and go to state 103 ]


state 149

    (113) lindices -> lindices CORIZQ . expresion CORDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 185
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 150

    (114) lindices -> CORIZQ expresion . CORDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          shift and go to state 186
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 151

    (87) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 187


state 152

    (88) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 188


state 153

    (97) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 189
    POWF            shift and go to state 190


state 154

    (109) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 109 (expresion -> PARIZQ expresion PARDER .)


state 155

    (111) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 111 (expresion -> CORIZQ expresiones CORDER .)


state 156

    (78) expresiones -> expresiones COMA . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 191
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 157

    (127) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (128) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (131) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (132) opmatch_asig -> . cmatch_asig
    (133) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (134) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (135) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (136) bloque_match_asig -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 192
    imatch_asig                    shift and go to state 193
    opmatch_asig                   shift and go to state 194
    cmatch_asig                    shift and go to state 195
    bloque_match_asig              shift and go to state 196
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 158

    (138) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 197
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 159

    (62) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (59) bloque_match -> expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTO             shift and go to state 198
    IGUAL           reduce using rule 59 (bloque_match -> expresion .)
    BARRAS          reduce using rule 59 (bloque_match -> expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 160

    (50) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 199


state 161

    (51) imatch -> opmatch . COMA dmatch
    (52) opmatch -> opmatch . COMA cmatch
    (53) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 200


state 162

    (54) opmatch -> cmatch .

    COMA            reduce using rule 54 (opmatch -> cmatch .)


state 163

    (55) opmatch -> rmatch .

    COMA            reduce using rule 55 (opmatch -> rmatch .)


state 164

    (56) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (58) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 201
    BARRAS          shift and go to state 202


state 165

    (65) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 65 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 166

    (66) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 203
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 167

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 204
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 168

    (30) lparame -> ID DOSPT . tipo
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR

    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68

    tipo                           shift and go to state 205

state 169

    (24) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 206
    LLAVEIZQ        shift and go to state 207


state 170

    (28) lparametros -> lparametros COMA . lparame
    (30) lparame -> . ID DOSPT tipo

    ID              shift and go to state 122

    lparame                        shift and go to state 208

state 171

    (25) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 209


state 172

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 210
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 173

    (37) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 211


state 174

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 212


state 175

    (22) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (22) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (23) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 175
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68

    tipo_arreglo                   shift and go to state 213
    tipo                           shift and go to state 214

state 176

    (38) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 215
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 177

    (39) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 216
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 178

    (40) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 40 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 179

    (33) largumentos -> largumentos COMA expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PARDER          reduce using rule 33 (largumentos -> largumentos COMA expresion .)
    COMA            reduce using rule 33 (largumentos -> largumentos COMA expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 180

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (78) expresiones -> . expresiones COMA expresion
    (79) expresiones -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 112
    expresiones                    shift and go to state 217
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 181

    (36) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 218


state 182

    (125) bloque_expresion -> expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 125 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 125 (bloque_expresion -> expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 183

    (116) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (117) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (124) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 219
    PTCOMA          shift and go to state 220


state 184

    (42) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (43) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (44) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (45) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (49) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (46) lelseif -> . lelseif elseif
    (47) lelseif -> . elseif
    (48) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 42 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 223

    else                           shift and go to state 221
    lelseif                        shift and go to state 222
    elseif                         shift and go to state 224

state 185

    (113) lindices -> lindices CORIZQ expresion . CORDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          shift and go to state 225
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 186

    (114) lindices -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 114 (lindices -> CORIZQ expresion CORDER .)


state 187

    (87) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 226


state 188

    (88) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 227


state 189

    (97) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 228


state 190

    (98) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 229


state 191

    (78) expresiones -> expresiones COMA expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          reduce using rule 78 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 78 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 78 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 192

    (136) bloque_match_asig -> expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 136 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 136 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 193

    (127) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 230


state 194

    (128) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (131) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 231


state 195

    (132) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 132 (opmatch_asig -> cmatch_asig .)


state 196

    (133) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (134) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (135) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 232
    BARRAS          shift and go to state 233


state 197

    (138) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 138 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 198

    (62) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 234


state 199

    (50) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 50 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 200

    (51) imatch -> opmatch COMA . dmatch
    (52) opmatch -> opmatch COMA . cmatch
    (53) opmatch -> opmatch COMA . rmatch
    (60) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (61) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (56) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (62) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (58) bloque_match -> . bloque_match BARRAS expresion
    (59) bloque_match -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 238
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    dmatch                         shift and go to state 235
    cmatch                         shift and go to state 236
    rmatch                         shift and go to state 237
    bloque_match                   shift and go to state 164
    expresion                      shift and go to state 159
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 201

    (56) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (57) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 239


state 202

    (58) bloque_match -> bloque_match BARRAS . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 240
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 203

    (66) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 66 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 204

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 241
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 205

    (30) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 30 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 30 (lparame -> ID DOSPT tipo .)


state 206

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 242


state 207

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 208

    (28) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 28 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 28 (lparametros -> lparametros COMA lparame .)


state 209

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR

    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68

    tipo                           shift and go to state 244

state 210

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 245
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 211

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 246
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 212

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 247
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 213

    (22) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 248


state 214

    (23) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 249


state 215

    (38) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 38 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 216

    (39) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 250
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 217

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (78) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 251
    COMA            shift and go to state 156


state 218

    (36) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 36 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 219

    (116) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (117) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (123) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (120) elseifa -> . elseifa lif
    (121) elseifa -> . lif
    (122) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 116 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 254

    elsea                          shift and go to state 252
    elseifa                        shift and go to state 253
    lif                            shift and go to state 255

state 220

    (124) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 256
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 221

    (43) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 43 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 222

    (44) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (45) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (46) lelseif -> lelseif . elseif
    (49) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (48) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 44 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 223

    else                           shift and go to state 257
    elseif                         shift and go to state 258

state 223

    (49) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (48) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 259
    IF              shift and go to state 260


state 224

    (47) lelseif -> elseif .

    ELSE            reduce using rule 47 (lelseif -> elseif .)
    FN              reduce using rule 47 (lelseif -> elseif .)
    LET             reduce using rule 47 (lelseif -> elseif .)
    PRINTLN         reduce using rule 47 (lelseif -> elseif .)
    ID              reduce using rule 47 (lelseif -> elseif .)
    IF              reduce using rule 47 (lelseif -> elseif .)
    MATCH           reduce using rule 47 (lelseif -> elseif .)
    LOOP            reduce using rule 47 (lelseif -> elseif .)
    WHILE           reduce using rule 47 (lelseif -> elseif .)
    BREAK           reduce using rule 47 (lelseif -> elseif .)
    RETURN          reduce using rule 47 (lelseif -> elseif .)
    CONTINUE        reduce using rule 47 (lelseif -> elseif .)
    $end            reduce using rule 47 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 47 (lelseif -> elseif .)
    COMA            reduce using rule 47 (lelseif -> elseif .)


state 225

    (113) lindices -> lindices CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 113 (lindices -> lindices CORIZQ expresion CORDER .)


state 226

    (87) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 87 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 227

    (88) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 88 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 228

    (97) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 261
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 229

    (98) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 262
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 230

    (127) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 127 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 231

    (128) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (131) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (129) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (130) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (133) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (134) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (135) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (136) bloque_match_asig -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 265
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    dmatch_asig                    shift and go to state 263
    cmatch_asig                    shift and go to state 264
    expresion                      shift and go to state 192
    bloque_match_asig              shift and go to state 196
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 232

    (133) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (134) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 266


state 233

    (135) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 267
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 234

    (62) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 268


state 235

    (51) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 51 (imatch -> opmatch COMA dmatch .)


state 236

    (52) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 52 (opmatch -> opmatch COMA cmatch .)


state 237

    (53) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 53 (opmatch -> opmatch COMA rmatch .)


state 238

    (60) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (61) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 269


state 239

    (56) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (57) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 270
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 271
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 240

    (58) bloque_match -> bloque_match BARRAS expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 58 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 58 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 241

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 242

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR

    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68

    tipo                           shift and go to state 272

state 243

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 273
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 244

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 274


state 245

    (27) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 27 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 246

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 275
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 247

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 276
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 248

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 277
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 249

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 278
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 250

    (39) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 39 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 251

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 279


state 252

    (117) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 117 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 253

    (118) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (120) elseifa -> elseifa . lif
    (123) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (122) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 118 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 254

    elsea                          shift and go to state 280
    lif                            shift and go to state 281

state 254

    (123) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (122) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 282
    IF              shift and go to state 283


state 255

    (121) elseifa -> lif .

    ELSE            reduce using rule 121 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 121 (elseifa -> lif .)
    MAS             reduce using rule 121 (elseifa -> lif .)
    MENOS           reduce using rule 121 (elseifa -> lif .)
    POR             reduce using rule 121 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 121 (elseifa -> lif .)
    MODULO          reduce using rule 121 (elseifa -> lif .)
    IGUALQUE        reduce using rule 121 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 121 (elseifa -> lif .)
    MENORQUE        reduce using rule 121 (elseifa -> lif .)
    MAYORQUE        reduce using rule 121 (elseifa -> lif .)
    MENORIQUE       reduce using rule 121 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 121 (elseifa -> lif .)
    OR              reduce using rule 121 (elseifa -> lif .)
    AND             reduce using rule 121 (elseifa -> lif .)
    PTCOMA          reduce using rule 121 (elseifa -> lif .)
    PARDER          reduce using rule 121 (elseifa -> lif .)
    COMA            reduce using rule 121 (elseifa -> lif .)
    CORDER          reduce using rule 121 (elseifa -> lif .)
    PTO             reduce using rule 121 (elseifa -> lif .)
    IGUAL           reduce using rule 121 (elseifa -> lif .)
    BARRAS          reduce using rule 121 (elseifa -> lif .)
    LLAVEDER        reduce using rule 121 (elseifa -> lif .)


state 256

    (124) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 124 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 124 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 257

    (45) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 45 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 258

    (46) lelseif -> lelseif elseif .

    ELSE            reduce using rule 46 (lelseif -> lelseif elseif .)
    FN              reduce using rule 46 (lelseif -> lelseif elseif .)
    LET             reduce using rule 46 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 46 (lelseif -> lelseif elseif .)
    ID              reduce using rule 46 (lelseif -> lelseif elseif .)
    IF              reduce using rule 46 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 46 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 46 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 46 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 46 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 46 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 46 (lelseif -> lelseif elseif .)
    $end            reduce using rule 46 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 46 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 46 (lelseif -> lelseif elseif .)


state 259

    (49) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 284
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 260

    (48) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 285
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 261

    (97) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    COMA            shift and go to state 286
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 262

    (98) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    COMA            shift and go to state 287
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 263

    (128) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 128 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 264

    (131) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 131 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 265

    (129) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (130) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 288


state 266

    (133) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 289
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 290
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 267

    (135) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 135 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 135 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 268

    (62) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 291
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 269

    (60) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (61) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 292


state 270

    (56) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 293
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 271

    (57) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 57 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 272

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 294


state 273

    (26) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 26 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 274

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 295
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 275

    (37) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 37 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 276

    (21) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 21 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 277

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          shift and go to state 296
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 278

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    CORDER          shift and go to state 297
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 279

    (35) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 35 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 280

    (119) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 119 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 281

    (120) elseifa -> elseifa lif .

    ELSE            reduce using rule 120 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 120 (elseifa -> elseifa lif .)
    MAS             reduce using rule 120 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 120 (elseifa -> elseifa lif .)
    POR             reduce using rule 120 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 120 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 120 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 120 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 120 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 120 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 120 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 120 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 120 (elseifa -> elseifa lif .)
    OR              reduce using rule 120 (elseifa -> elseifa lif .)
    AND             reduce using rule 120 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 120 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 120 (elseifa -> elseifa lif .)
    COMA            reduce using rule 120 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 120 (elseifa -> elseifa lif .)
    PTO             reduce using rule 120 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 120 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 120 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 120 (elseifa -> elseifa lif .)


state 282

    (123) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (124) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (125) bloque_expresion -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    bloque_expresion               shift and go to state 298
    expresion                      shift and go to state 182
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 283

    (122) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 299
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 284

    (49) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 300
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 285

    (48) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 301
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 286

    (97) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 302
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 287

    (98) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    tipo                           shift and go to state 54
    expresion                      shift and go to state 303
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 288

    (129) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (130) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 304


state 289

    (133) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (124) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (125) bloque_expresion -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    bloque_expresion               shift and go to state 305
    expresion                      shift and go to state 182
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 290

    (134) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    COMA            reduce using rule 134 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 291

    (62) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 306
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 292

    (60) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (61) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 307
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 308
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 293

    (56) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 309
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 294

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 310
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 295

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 311
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 296

    (22) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 22 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 22 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 297

    (23) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 23 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 23 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 298

    (123) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (124) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 312
    PTCOMA          shift and go to state 220


state 299

    (122) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 313
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 300

    (49) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 49 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 301

    (48) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 314
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 302

    (97) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PARDER          shift and go to state 315
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 303

    (98) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    PARDER          shift and go to state 316
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 304

    (129) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 317
    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 318
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 305

    (133) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (124) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 319
    PTCOMA          shift and go to state 220


state 306

    (62) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 320


state 307

    (60) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 321
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 308

    (61) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 61 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 309

    (56) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 56 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 310

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 322
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 311

    (25) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 25 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 312

    (123) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 123 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 313

    (122) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (124) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (125) bloque_expresion -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    expresion                      shift and go to state 182
    bloque_expresion               shift and go to state 323
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 314

    (48) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 324
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 315

    (97) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 97 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 316

    (98) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 98 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 317

    (129) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (124) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (125) bloque_expresion -> . expresion
    (80) expresion -> . ID
    (81) expresion -> . ENTERO
    (82) expresion -> . DECIMAL
    (83) expresion -> . TRUE
    (84) expresion -> . FALSE
    (85) expresion -> . tostring
    (86) expresion -> . toowned
    (89) expresion -> . STR
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . expresion MAS expresion
    (93) expresion -> . expresion MENOS expresion
    (94) expresion -> . expresion POR expresion
    (95) expresion -> . expresion DIVIDIDO expresion
    (96) expresion -> . expresion MODULO expresion
    (97) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (98) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (99) expresion -> . expresion IGUALQUE expresion
    (100) expresion -> . expresion NOIGUALQUE expresion
    (101) expresion -> . expresion MENORQUE expresion
    (102) expresion -> . expresion MAYORQUE expresion
    (103) expresion -> . expresion MENORIQUE expresion
    (104) expresion -> . expresion MAYORIQUE expresion
    (105) expresion -> . expresion OR expresion
    (106) expresion -> . expresion AND expresion
    (107) expresion -> . MENOS expresion
    (108) expresion -> . NOT expresion
    (109) expresion -> . PARIZQ expresion PARDER
    (110) expresion -> . llamada_funciones
    (111) expresion -> . CORIZQ expresiones CORDER
    (112) expresion -> . ID lindices
    (115) expresion -> . if_asig
    (126) expresion -> . match_asig
    (137) expresion -> . loop_asig
    (87) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (88) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (71) tipo -> . I64
    (72) tipo -> . F64
    (73) tipo -> . BOOL
    (74) tipo -> . CHAR
    (75) tipo -> . STRING
    (76) tipo -> . USIZE
    (77) tipo -> . SIGNOI STR
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (116) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (117) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (118) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (119) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (127) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (138) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47
    STR             shift and go to state 50
    CADENA          shift and go to state 51
    CARACTER        shift and go to state 52
    MENOS           shift and go to state 53
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 55
    CORIZQ          shift and go to state 58
    I64             shift and go to state 62
    F64             shift and go to state 63
    BOOL            shift and go to state 64
    CHAR            shift and go to state 65
    STRING          shift and go to state 66
    USIZE           shift and go to state 67
    SIGNOI          shift and go to state 68
    IF              shift and go to state 41
    MATCH           shift and go to state 69
    LOOP            shift and go to state 70

    bloque_expresion               shift and go to state 325
    expresion                      shift and go to state 182
    tostring                       shift and go to state 48
    toowned                        shift and go to state 49
    tipo                           shift and go to state 54
    llamada_funciones              shift and go to state 57
    if_asig                        shift and go to state 59
    match_asig                     shift and go to state 60
    loop_asig                      shift and go to state 61

state 318

    (130) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (92) expresion -> expresion . MAS expresion
    (93) expresion -> expresion . MENOS expresion
    (94) expresion -> expresion . POR expresion
    (95) expresion -> expresion . DIVIDIDO expresion
    (96) expresion -> expresion . MODULO expresion
    (99) expresion -> expresion . IGUALQUE expresion
    (100) expresion -> expresion . NOIGUALQUE expresion
    (101) expresion -> expresion . MENORQUE expresion
    (102) expresion -> expresion . MAYORQUE expresion
    (103) expresion -> expresion . MENORIQUE expresion
    (104) expresion -> expresion . MAYORIQUE expresion
    (105) expresion -> expresion . OR expresion
    (106) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 130 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    POR             shift and go to state 93
    DIVIDIDO        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALQUE        shift and go to state 96
    NOIGUALQUE      shift and go to state 97
    MENORQUE        shift and go to state 98
    MAYORQUE        shift and go to state 99
    MENORIQUE       shift and go to state 100
    MAYORIQUE       shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 319

    (133) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 133 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 320

    (62) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (63) rrmatch -> . instruccion
    (64) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEIZQ        shift and go to state 328
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    rrmatch                        shift and go to state 326
    instruccion                    shift and go to state 327
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 321

    (60) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 329
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 322

    (24) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 24 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 323

    (122) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (124) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 330
    PTCOMA          shift and go to state 220


state 324

    (48) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 48 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 325

    (129) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (124) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 331
    PTCOMA          shift and go to state 220


state 326

    (62) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 62 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 327

    (63) rrmatch -> instruccion .

    COMA            reduce using rule 63 (rrmatch -> instruccion .)


state 328

    (64) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instrucciones                  shift and go to state 332
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 329

    (60) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 60 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 330

    (122) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 122 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 331

    (129) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 129 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 332

    (64) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (37) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (38) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (39) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (40) declaracion -> . LET ID IGUAL expresion PTCOMA
    (35) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (36) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (41) asignacion -> . ID IGUAL expresion PTCOMA
    (42) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (43) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (44) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (45) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (50) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (65) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (66) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (67) break -> . BREAK PTCOMA
    (68) break -> . BREAK expresion PTCOMA
    (70) return -> . RETURN expresion PTCOMA
    (69) continue -> . CONTINUE PTCOMA
    (24) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (32) llamada_funciones -> . ID PARIZQ PARDER
    (21) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    LLAVEDER        shift and go to state 333
    LET             shift and go to state 19
    PRINTLN         shift and go to state 21
    ID              shift and go to state 20
    IF              shift and go to state 22
    MATCH           shift and go to state 23
    LOOP            shift and go to state 24
    WHILE           shift and go to state 25
    BREAK           shift and go to state 26
    RETURN          shift and go to state 27
    CONTINUE        shift and go to state 28
    FN              shift and go to state 32

    instruccion                    shift and go to state 30
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18

state 333

    (64) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 64 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 51 resolved as shift
