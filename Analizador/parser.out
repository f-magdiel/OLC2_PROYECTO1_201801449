Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    instruccion -> declaracion_vector
Rule 22    instruccion -> forin
Rule 23    instruccion -> nativas_vector
Rule 24    declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 25    declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
Rule 26    expresion -> VEC NOT CORIZQ expresiones CORDER
Rule 27    expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER
Rule 28    expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
Rule 29    expresion -> nativas_vec
Rule 30    nativas_vec -> expresion PTO LEN PARIZQ PARDER
Rule 31    expresion -> expresion PTO CAPACITY PARIZQ PARDER
Rule 32    nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
Rule 33    nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
Rule 34    nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
Rule 35    expresion -> expresion PTO REMOVE PARIZQ expresion PARDER
Rule 36    expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
Rule 37    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 38    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 39    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 40    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 41    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 42    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 43    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 44    lparametros -> lparametros COMA lparame
Rule 45    lparametros -> lparame
Rule 46    lparame -> ID DOSPT tipo
Rule 47    lparame -> ID DOSPT SIGNOI MUT tipo_arreglo
Rule 48    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 49    llamada_funciones -> ID PARIZQ PARDER
Rule 50    largumentos -> largumentos COMA largumento
Rule 51    largumentos -> largumento
Rule 52    largumento -> expresion
Rule 53    largumento -> SIGNOI MUT expresion
Rule 54    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 55    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 56    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 57    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 58    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 59    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 60    asignacion -> ID IGUAL expresion PTCOMA
Rule 61    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 62    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 63    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 64    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 65    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 66    lelseif -> lelseif elseif
Rule 67    lelseif -> elseif
Rule 68    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 69    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 70    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 71    imatch -> opmatch COMA dmatch
Rule 72    opmatch -> opmatch COMA cmatch
Rule 73    opmatch -> opmatch COMA rmatch
Rule 74    opmatch -> cmatch
Rule 75    opmatch -> rmatch
Rule 76    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 77    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 78    bloque_match -> bloque_match BARRAS expresion
Rule 79    bloque_match -> expresion
Rule 80    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 81    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 82    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 83    rrmatch -> instruccion
Rule 84    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 85    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 86    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 87    forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
Rule 88    forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
Rule 89    break -> BREAK PTCOMA
Rule 90    break -> BREAK expresion PTCOMA
Rule 91    continue -> CONTINUE PTCOMA
Rule 92    return -> RETURN expresion PTCOMA
Rule 93    tipo -> I64
Rule 94    tipo -> F64
Rule 95    tipo -> BOOL
Rule 96    tipo -> CHAR
Rule 97    tipo -> STRING
Rule 98    tipo -> USIZE
Rule 99    tipo -> SIGNOI STR
Rule 100   expresiones -> expresiones COMA expresion
Rule 101   expresiones -> expresion
Rule 102   expresion -> ID
Rule 103   expresion -> ENTERO
Rule 104   expresion -> DECIMAL
Rule 105   expresion -> TRUE
Rule 106   expresion -> FALSE
Rule 107   expresion -> tostring
Rule 108   expresion -> toowned
Rule 109   tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 110   toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 111   expresion -> STR
Rule 112   expresion -> CADENA
Rule 113   expresion -> CARACTER
Rule 114   expresion -> expresion MAS expresion
Rule 115   expresion -> expresion MENOS expresion
Rule 116   expresion -> expresion POR expresion
Rule 117   expresion -> expresion DIVIDIDO expresion
Rule 118   expresion -> expresion MODULO expresion
Rule 119   expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 120   expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 121   expresion -> expresion IGUALQUE expresion
Rule 122   expresion -> expresion NOIGUALQUE expresion
Rule 123   expresion -> expresion MENORQUE expresion
Rule 124   expresion -> expresion MAYORQUE expresion
Rule 125   expresion -> expresion MENORIQUE expresion
Rule 126   expresion -> expresion MAYORIQUE expresion
Rule 127   expresion -> expresion OR expresion
Rule 128   expresion -> expresion AND expresion
Rule 129   expresion -> MENOS expresion
Rule 130   expresion -> NOT expresion
Rule 131   expresion -> PARIZQ expresion PARDER
Rule 132   expresion -> llamada_funciones
Rule 133   expresion -> CORIZQ expresiones CORDER
Rule 134   expresion -> ID lindices
Rule 135   lindices -> lindices CORIZQ expresion CORDER
Rule 136   lindices -> CORIZQ expresion CORDER
Rule 137   expresion -> if_asig
Rule 138   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 139   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 140   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 141   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 142   elseifa -> elseifa lif
Rule 143   elseifa -> lif
Rule 144   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 145   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 146   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 147   bloque_expresion -> expresion
Rule 148   expresion -> match_asig
Rule 149   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 150   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 151   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 152   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 153   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 154   opmatch_asig -> cmatch_asig
Rule 155   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 156   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 157   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 158   bloque_match_asig -> expresion
Rule 159   expresion -> loop_asig
Rule 160   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 161   expresion -> PARIZQ expresion AS tipo PARDER
Rule 162   expresion -> nativas_fun
Rule 163   nativas_fun -> expresion PTO ABS PARIZQ PARDER
Rule 164   nativas_fun -> expresion PTO SQRT PARIZQ PARDER
Rule 165   nativas_fun -> expresion PTO CLONE PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 163
AND                  : 128
AS                   : 161
BARRAS               : 78 157
BOOL                 : 95
BREAK                : 89 90
CADENA               : 109 110 112
CAPACITY             : 31
CARACTER             : 113
CHAR                 : 96
CLONE                : 165
COMA                 : 33 44 50 54 71 72 73 100 119 120 150 153
CONTAINS             : 36
CONTINUE             : 91
CORDER               : 26 38 39 133 135 136
CORIZQ               : 26 38 39 133 135 136
DECIMAL              : 104
DIVIDIDO             : 117
DOSPT                : 24 25 27 27 28 28 37 46 47 56 58 119 119 120 120
ELSE                 : 68 69 144 145
ENTERO               : 103
F64                  : 94
FALSE                : 106
FN                   : 5 40 41 42 43
FOR                  : 87 88
GUIONB               : 80 81 151 152
I64                  : 93
ID                   : 24 25 36 37 40 41 42 43 46 47 48 49 56 57 58 59 60 61 87 88 102 134
IF                   : 62 63 64 65 68 138 139 140 141 144
IGUAL                : 24 25 37 56 57 58 59 60 61 76 77 80 81 82 82 151 152 155 156
IGUALQUE             : 121
IN                   : 87 88
INSERT               : 33
LEN                  : 30
LET                  : 24 25 37 56 57 58 59
LLAVEDER             : 5 40 41 42 43 62 63 64 65 68 69 70 76 80 84 85 86 87 88 138 139 140 141 144 145 149 151 155 160
LLAVEIZQ             : 5 40 41 42 43 62 63 64 65 68 69 70 76 80 84 85 86 87 88 138 139 140 141 144 145 149 151 155 160
LOOP                 : 85 160
MAIN                 : 5
MAS                  : 114
MATCH                : 70 149
MAYORIQUE            : 126
MAYORQUE             : 24 25 40 41 76 77 80 81 82 124 151 152 155 156
MENORIQUE            : 125
MENORQUE             : 24 25 123
MENOS                : 40 41 115 129
MODULO               : 118
MUT                  : 24 37 47 53 56 57
NEW                  : 27
NOIGUALQUE           : 122
NOT                  : 26 54 55 130
OR                   : 127
PARDER               : 5 27 28 30 31 32 33 34 35 36 40 41 42 43 48 49 54 55 109 110 119 120 131 161 163 164 165
PARIZQ               : 5 27 28 30 31 32 33 34 35 36 40 41 42 43 48 49 54 55 109 110 119 120 131 161 163 164 165
POR                  : 116
POW                  : 119
POWF                 : 120
PRINTLN              : 54 55
PTCOMA               : 19 24 25 32 33 34 37 38 39 54 55 56 57 58 59 60 61 89 90 91 92 146
PTO                  : 30 31 32 33 34 35 82 82 88 88 109 110 163 164 165
PUSH                 : 32
REMOVE               : 34 35
RETURN               : 92
SIGNOI               : 36 47 53 99
SQRT                 : 164
STR                  : 99 111
STRING               : 97
TOOWNED              : 110
TOSTRING             : 109
TRUE                 : 105
USIZE                : 98
VEC                  : 26
VVEC                 : 24 25 27 28
WHILE                : 86
WITH_CAPACITY        : 28
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 138 139 140 141 144 145 146 151 155
bloque_match         : 76 77 78
bloque_match_asig    : 155 156 157
break                : 15
cmatch               : 72 74
cmatch_asig          : 153 154
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
declaracion_vector   : 21
dmatch               : 71
dmatch_asig          : 150
else                 : 63 65
elsea                : 139 141
elseif               : 66 67
elseifa              : 140 141 142
expresion            : 24 25 28 30 31 32 32 33 33 33 34 34 35 35 36 36 37 38 39 52 53 54 55 56 57 58 59 60 61 62 63 64 65 68 70 78 79 82 82 86 87 88 88 90 92 100 101 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 130 131 135 136 138 139 140 141 144 146 147 149 152 156 157 158 161 163 164 165
expresiones          : 26 54 100 133
forin                : 22
funciones            : 18
if                   : 11
if_asig              : 137
imatch               : 70
imatch_asig          : 149
imprimir             : 9
inicio               : 0
instruccion          : 6 7 77 81 83
instrucciones        : 1 1 2 3 5 6 40 41 42 43 62 63 64 65 68 69 76 80 84 85 86 87 88 160
largumento           : 50 51
largumentos          : 48 50
lelseif              : 64 65 66
lif                  : 142 143
lindices             : 61 134 135
llamada_funciones    : 19 132
loop                 : 13
loop_asig            : 159
lparame              : 44 45
lparametros          : 40 42 44
main                 : 1 2 3 4
match                : 12
match_asig           : 148
nativas_fun          : 162
nativas_vec          : 29
nativas_vector       : 23
opmatch              : 71 72 73
opmatch_asig         : 150 153
return               : 16
rmatch               : 73 75
rrmatch              : 82
tipo                 : 24 25 39 40 41 46 56 58 119 120 161
tipo_arreglo         : 37 38 47
toowned              : 108
tostring             : 107
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    FN              shift and go to state 5
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    main                           shift and go to state 62
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 64
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    FOR             reduce using rule 7 (instrucciones -> instruccion .)
    VEC             reduce using rule 7 (instrucciones -> instruccion .)
    VVEC            reduce using rule 7 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 7 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 7 (instrucciones -> instruccion .)
    TRUE            reduce using rule 7 (instrucciones -> instruccion .)
    FALSE           reduce using rule 7 (instrucciones -> instruccion .)
    STR             reduce using rule 7 (instrucciones -> instruccion .)
    CADENA          reduce using rule 7 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 7 (instrucciones -> instruccion .)
    MENOS           reduce using rule 7 (instrucciones -> instruccion .)
    NOT             reduce using rule 7 (instrucciones -> instruccion .)
    PARIZQ          reduce using rule 7 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 7 (instrucciones -> instruccion .)
    I64             reduce using rule 7 (instrucciones -> instruccion .)
    F64             reduce using rule 7 (instrucciones -> instruccion .)
    BOOL            reduce using rule 7 (instrucciones -> instruccion .)
    CHAR            reduce using rule 7 (instrucciones -> instruccion .)
    STRING          reduce using rule 7 (instrucciones -> instruccion .)
    USIZE           reduce using rule 7 (instrucciones -> instruccion .)
    SIGNOI          reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (40) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 66
    ID              shift and go to state 67


state 6

    (131) expresion -> PARIZQ . expresion PARDER
    (161) expresion -> PARIZQ . expresion AS tipo PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 68
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 7

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    FOR             reduce using rule 8 (instruccion -> declaracion .)
    VEC             reduce using rule 8 (instruccion -> declaracion .)
    VVEC            reduce using rule 8 (instruccion -> declaracion .)
    ENTERO          reduce using rule 8 (instruccion -> declaracion .)
    DECIMAL         reduce using rule 8 (instruccion -> declaracion .)
    TRUE            reduce using rule 8 (instruccion -> declaracion .)
    FALSE           reduce using rule 8 (instruccion -> declaracion .)
    STR             reduce using rule 8 (instruccion -> declaracion .)
    CADENA          reduce using rule 8 (instruccion -> declaracion .)
    CARACTER        reduce using rule 8 (instruccion -> declaracion .)
    MENOS           reduce using rule 8 (instruccion -> declaracion .)
    NOT             reduce using rule 8 (instruccion -> declaracion .)
    PARIZQ          reduce using rule 8 (instruccion -> declaracion .)
    CORIZQ          reduce using rule 8 (instruccion -> declaracion .)
    I64             reduce using rule 8 (instruccion -> declaracion .)
    F64             reduce using rule 8 (instruccion -> declaracion .)
    BOOL            reduce using rule 8 (instruccion -> declaracion .)
    CHAR            reduce using rule 8 (instruccion -> declaracion .)
    STRING          reduce using rule 8 (instruccion -> declaracion .)
    USIZE           reduce using rule 8 (instruccion -> declaracion .)
    SIGNOI          reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 8

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    FOR             reduce using rule 9 (instruccion -> imprimir .)
    VEC             reduce using rule 9 (instruccion -> imprimir .)
    VVEC            reduce using rule 9 (instruccion -> imprimir .)
    ENTERO          reduce using rule 9 (instruccion -> imprimir .)
    DECIMAL         reduce using rule 9 (instruccion -> imprimir .)
    TRUE            reduce using rule 9 (instruccion -> imprimir .)
    FALSE           reduce using rule 9 (instruccion -> imprimir .)
    STR             reduce using rule 9 (instruccion -> imprimir .)
    CADENA          reduce using rule 9 (instruccion -> imprimir .)
    CARACTER        reduce using rule 9 (instruccion -> imprimir .)
    MENOS           reduce using rule 9 (instruccion -> imprimir .)
    NOT             reduce using rule 9 (instruccion -> imprimir .)
    PARIZQ          reduce using rule 9 (instruccion -> imprimir .)
    CORIZQ          reduce using rule 9 (instruccion -> imprimir .)
    I64             reduce using rule 9 (instruccion -> imprimir .)
    F64             reduce using rule 9 (instruccion -> imprimir .)
    BOOL            reduce using rule 9 (instruccion -> imprimir .)
    CHAR            reduce using rule 9 (instruccion -> imprimir .)
    STRING          reduce using rule 9 (instruccion -> imprimir .)
    USIZE           reduce using rule 9 (instruccion -> imprimir .)
    SIGNOI          reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 9

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    FOR             reduce using rule 10 (instruccion -> asignacion .)
    VEC             reduce using rule 10 (instruccion -> asignacion .)
    VVEC            reduce using rule 10 (instruccion -> asignacion .)
    ENTERO          reduce using rule 10 (instruccion -> asignacion .)
    DECIMAL         reduce using rule 10 (instruccion -> asignacion .)
    TRUE            reduce using rule 10 (instruccion -> asignacion .)
    FALSE           reduce using rule 10 (instruccion -> asignacion .)
    STR             reduce using rule 10 (instruccion -> asignacion .)
    CADENA          reduce using rule 10 (instruccion -> asignacion .)
    CARACTER        reduce using rule 10 (instruccion -> asignacion .)
    MENOS           reduce using rule 10 (instruccion -> asignacion .)
    NOT             reduce using rule 10 (instruccion -> asignacion .)
    PARIZQ          reduce using rule 10 (instruccion -> asignacion .)
    CORIZQ          reduce using rule 10 (instruccion -> asignacion .)
    I64             reduce using rule 10 (instruccion -> asignacion .)
    F64             reduce using rule 10 (instruccion -> asignacion .)
    BOOL            reduce using rule 10 (instruccion -> asignacion .)
    CHAR            reduce using rule 10 (instruccion -> asignacion .)
    STRING          reduce using rule 10 (instruccion -> asignacion .)
    USIZE           reduce using rule 10 (instruccion -> asignacion .)
    SIGNOI          reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 10

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    FOR             reduce using rule 11 (instruccion -> if .)
    VEC             reduce using rule 11 (instruccion -> if .)
    VVEC            reduce using rule 11 (instruccion -> if .)
    ENTERO          reduce using rule 11 (instruccion -> if .)
    DECIMAL         reduce using rule 11 (instruccion -> if .)
    TRUE            reduce using rule 11 (instruccion -> if .)
    FALSE           reduce using rule 11 (instruccion -> if .)
    STR             reduce using rule 11 (instruccion -> if .)
    CADENA          reduce using rule 11 (instruccion -> if .)
    CARACTER        reduce using rule 11 (instruccion -> if .)
    MENOS           reduce using rule 11 (instruccion -> if .)
    NOT             reduce using rule 11 (instruccion -> if .)
    PARIZQ          reduce using rule 11 (instruccion -> if .)
    CORIZQ          reduce using rule 11 (instruccion -> if .)
    I64             reduce using rule 11 (instruccion -> if .)
    F64             reduce using rule 11 (instruccion -> if .)
    BOOL            reduce using rule 11 (instruccion -> if .)
    CHAR            reduce using rule 11 (instruccion -> if .)
    STRING          reduce using rule 11 (instruccion -> if .)
    USIZE           reduce using rule 11 (instruccion -> if .)
    SIGNOI          reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 11

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    FOR             reduce using rule 12 (instruccion -> match .)
    VEC             reduce using rule 12 (instruccion -> match .)
    VVEC            reduce using rule 12 (instruccion -> match .)
    ENTERO          reduce using rule 12 (instruccion -> match .)
    DECIMAL         reduce using rule 12 (instruccion -> match .)
    TRUE            reduce using rule 12 (instruccion -> match .)
    FALSE           reduce using rule 12 (instruccion -> match .)
    STR             reduce using rule 12 (instruccion -> match .)
    CADENA          reduce using rule 12 (instruccion -> match .)
    CARACTER        reduce using rule 12 (instruccion -> match .)
    MENOS           reduce using rule 12 (instruccion -> match .)
    NOT             reduce using rule 12 (instruccion -> match .)
    PARIZQ          reduce using rule 12 (instruccion -> match .)
    CORIZQ          reduce using rule 12 (instruccion -> match .)
    I64             reduce using rule 12 (instruccion -> match .)
    F64             reduce using rule 12 (instruccion -> match .)
    BOOL            reduce using rule 12 (instruccion -> match .)
    CHAR            reduce using rule 12 (instruccion -> match .)
    STRING          reduce using rule 12 (instruccion -> match .)
    USIZE           reduce using rule 12 (instruccion -> match .)
    SIGNOI          reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 12

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    FOR             reduce using rule 13 (instruccion -> loop .)
    VEC             reduce using rule 13 (instruccion -> loop .)
    VVEC            reduce using rule 13 (instruccion -> loop .)
    ENTERO          reduce using rule 13 (instruccion -> loop .)
    DECIMAL         reduce using rule 13 (instruccion -> loop .)
    TRUE            reduce using rule 13 (instruccion -> loop .)
    FALSE           reduce using rule 13 (instruccion -> loop .)
    STR             reduce using rule 13 (instruccion -> loop .)
    CADENA          reduce using rule 13 (instruccion -> loop .)
    CARACTER        reduce using rule 13 (instruccion -> loop .)
    MENOS           reduce using rule 13 (instruccion -> loop .)
    NOT             reduce using rule 13 (instruccion -> loop .)
    PARIZQ          reduce using rule 13 (instruccion -> loop .)
    CORIZQ          reduce using rule 13 (instruccion -> loop .)
    I64             reduce using rule 13 (instruccion -> loop .)
    F64             reduce using rule 13 (instruccion -> loop .)
    BOOL            reduce using rule 13 (instruccion -> loop .)
    CHAR            reduce using rule 13 (instruccion -> loop .)
    STRING          reduce using rule 13 (instruccion -> loop .)
    USIZE           reduce using rule 13 (instruccion -> loop .)
    SIGNOI          reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 13

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    FOR             reduce using rule 14 (instruccion -> while .)
    VEC             reduce using rule 14 (instruccion -> while .)
    VVEC            reduce using rule 14 (instruccion -> while .)
    ENTERO          reduce using rule 14 (instruccion -> while .)
    DECIMAL         reduce using rule 14 (instruccion -> while .)
    TRUE            reduce using rule 14 (instruccion -> while .)
    FALSE           reduce using rule 14 (instruccion -> while .)
    STR             reduce using rule 14 (instruccion -> while .)
    CADENA          reduce using rule 14 (instruccion -> while .)
    CARACTER        reduce using rule 14 (instruccion -> while .)
    MENOS           reduce using rule 14 (instruccion -> while .)
    NOT             reduce using rule 14 (instruccion -> while .)
    PARIZQ          reduce using rule 14 (instruccion -> while .)
    CORIZQ          reduce using rule 14 (instruccion -> while .)
    I64             reduce using rule 14 (instruccion -> while .)
    F64             reduce using rule 14 (instruccion -> while .)
    BOOL            reduce using rule 14 (instruccion -> while .)
    CHAR            reduce using rule 14 (instruccion -> while .)
    STRING          reduce using rule 14 (instruccion -> while .)
    USIZE           reduce using rule 14 (instruccion -> while .)
    SIGNOI          reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 14

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    FOR             reduce using rule 15 (instruccion -> break .)
    VEC             reduce using rule 15 (instruccion -> break .)
    VVEC            reduce using rule 15 (instruccion -> break .)
    ENTERO          reduce using rule 15 (instruccion -> break .)
    DECIMAL         reduce using rule 15 (instruccion -> break .)
    TRUE            reduce using rule 15 (instruccion -> break .)
    FALSE           reduce using rule 15 (instruccion -> break .)
    STR             reduce using rule 15 (instruccion -> break .)
    CADENA          reduce using rule 15 (instruccion -> break .)
    CARACTER        reduce using rule 15 (instruccion -> break .)
    MENOS           reduce using rule 15 (instruccion -> break .)
    NOT             reduce using rule 15 (instruccion -> break .)
    PARIZQ          reduce using rule 15 (instruccion -> break .)
    CORIZQ          reduce using rule 15 (instruccion -> break .)
    I64             reduce using rule 15 (instruccion -> break .)
    F64             reduce using rule 15 (instruccion -> break .)
    BOOL            reduce using rule 15 (instruccion -> break .)
    CHAR            reduce using rule 15 (instruccion -> break .)
    STRING          reduce using rule 15 (instruccion -> break .)
    USIZE           reduce using rule 15 (instruccion -> break .)
    SIGNOI          reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 15

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    FOR             reduce using rule 16 (instruccion -> return .)
    VEC             reduce using rule 16 (instruccion -> return .)
    VVEC            reduce using rule 16 (instruccion -> return .)
    ENTERO          reduce using rule 16 (instruccion -> return .)
    DECIMAL         reduce using rule 16 (instruccion -> return .)
    TRUE            reduce using rule 16 (instruccion -> return .)
    FALSE           reduce using rule 16 (instruccion -> return .)
    STR             reduce using rule 16 (instruccion -> return .)
    CADENA          reduce using rule 16 (instruccion -> return .)
    CARACTER        reduce using rule 16 (instruccion -> return .)
    MENOS           reduce using rule 16 (instruccion -> return .)
    NOT             reduce using rule 16 (instruccion -> return .)
    PARIZQ          reduce using rule 16 (instruccion -> return .)
    CORIZQ          reduce using rule 16 (instruccion -> return .)
    I64             reduce using rule 16 (instruccion -> return .)
    F64             reduce using rule 16 (instruccion -> return .)
    BOOL            reduce using rule 16 (instruccion -> return .)
    CHAR            reduce using rule 16 (instruccion -> return .)
    STRING          reduce using rule 16 (instruccion -> return .)
    USIZE           reduce using rule 16 (instruccion -> return .)
    SIGNOI          reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 16

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    FOR             reduce using rule 17 (instruccion -> continue .)
    VEC             reduce using rule 17 (instruccion -> continue .)
    VVEC            reduce using rule 17 (instruccion -> continue .)
    ENTERO          reduce using rule 17 (instruccion -> continue .)
    DECIMAL         reduce using rule 17 (instruccion -> continue .)
    TRUE            reduce using rule 17 (instruccion -> continue .)
    FALSE           reduce using rule 17 (instruccion -> continue .)
    STR             reduce using rule 17 (instruccion -> continue .)
    CADENA          reduce using rule 17 (instruccion -> continue .)
    CARACTER        reduce using rule 17 (instruccion -> continue .)
    MENOS           reduce using rule 17 (instruccion -> continue .)
    NOT             reduce using rule 17 (instruccion -> continue .)
    PARIZQ          reduce using rule 17 (instruccion -> continue .)
    CORIZQ          reduce using rule 17 (instruccion -> continue .)
    I64             reduce using rule 17 (instruccion -> continue .)
    F64             reduce using rule 17 (instruccion -> continue .)
    BOOL            reduce using rule 17 (instruccion -> continue .)
    CHAR            reduce using rule 17 (instruccion -> continue .)
    STRING          reduce using rule 17 (instruccion -> continue .)
    USIZE           reduce using rule 17 (instruccion -> continue .)
    SIGNOI          reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 17

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    FOR             reduce using rule 18 (instruccion -> funciones .)
    VEC             reduce using rule 18 (instruccion -> funciones .)
    VVEC            reduce using rule 18 (instruccion -> funciones .)
    ENTERO          reduce using rule 18 (instruccion -> funciones .)
    DECIMAL         reduce using rule 18 (instruccion -> funciones .)
    TRUE            reduce using rule 18 (instruccion -> funciones .)
    FALSE           reduce using rule 18 (instruccion -> funciones .)
    STR             reduce using rule 18 (instruccion -> funciones .)
    CADENA          reduce using rule 18 (instruccion -> funciones .)
    CARACTER        reduce using rule 18 (instruccion -> funciones .)
    MENOS           reduce using rule 18 (instruccion -> funciones .)
    NOT             reduce using rule 18 (instruccion -> funciones .)
    PARIZQ          reduce using rule 18 (instruccion -> funciones .)
    CORIZQ          reduce using rule 18 (instruccion -> funciones .)
    I64             reduce using rule 18 (instruccion -> funciones .)
    F64             reduce using rule 18 (instruccion -> funciones .)
    BOOL            reduce using rule 18 (instruccion -> funciones .)
    CHAR            reduce using rule 18 (instruccion -> funciones .)
    STRING          reduce using rule 18 (instruccion -> funciones .)
    USIZE           reduce using rule 18 (instruccion -> funciones .)
    SIGNOI          reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 18

    (19) instruccion -> llamada_funciones . PTCOMA
    (132) expresion -> llamada_funciones .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 74
    PTO             reduce using rule 132 (expresion -> llamada_funciones .)
    MAS             reduce using rule 132 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 132 (expresion -> llamada_funciones .)
    POR             reduce using rule 132 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 132 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 132 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 132 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 132 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 132 (expresion -> llamada_funciones .)
    OR              reduce using rule 132 (expresion -> llamada_funciones .)
    AND             reduce using rule 132 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 132 (expresion -> llamada_funciones .)

  ! PTCOMA          [ reduce using rule 132 (expresion -> llamada_funciones .) ]


state 19

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FOR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    VEC             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    VVEC            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ENTERO          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    DECIMAL         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    TRUE            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FALSE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    STR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CADENA          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CARACTER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MENOS           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    NOT             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PARIZQ          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CORIZQ          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    I64             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    F64             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BOOL            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CHAR            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    STRING          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    USIZE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    SIGNOI          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 20

    (21) instruccion -> declaracion_vector .

    FN              reduce using rule 21 (instruccion -> declaracion_vector .)
    LET             reduce using rule 21 (instruccion -> declaracion_vector .)
    PRINTLN         reduce using rule 21 (instruccion -> declaracion_vector .)
    ID              reduce using rule 21 (instruccion -> declaracion_vector .)
    IF              reduce using rule 21 (instruccion -> declaracion_vector .)
    MATCH           reduce using rule 21 (instruccion -> declaracion_vector .)
    LOOP            reduce using rule 21 (instruccion -> declaracion_vector .)
    WHILE           reduce using rule 21 (instruccion -> declaracion_vector .)
    BREAK           reduce using rule 21 (instruccion -> declaracion_vector .)
    RETURN          reduce using rule 21 (instruccion -> declaracion_vector .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion_vector .)
    FOR             reduce using rule 21 (instruccion -> declaracion_vector .)
    VEC             reduce using rule 21 (instruccion -> declaracion_vector .)
    VVEC            reduce using rule 21 (instruccion -> declaracion_vector .)
    ENTERO          reduce using rule 21 (instruccion -> declaracion_vector .)
    DECIMAL         reduce using rule 21 (instruccion -> declaracion_vector .)
    TRUE            reduce using rule 21 (instruccion -> declaracion_vector .)
    FALSE           reduce using rule 21 (instruccion -> declaracion_vector .)
    STR             reduce using rule 21 (instruccion -> declaracion_vector .)
    CADENA          reduce using rule 21 (instruccion -> declaracion_vector .)
    CARACTER        reduce using rule 21 (instruccion -> declaracion_vector .)
    MENOS           reduce using rule 21 (instruccion -> declaracion_vector .)
    NOT             reduce using rule 21 (instruccion -> declaracion_vector .)
    PARIZQ          reduce using rule 21 (instruccion -> declaracion_vector .)
    CORIZQ          reduce using rule 21 (instruccion -> declaracion_vector .)
    I64             reduce using rule 21 (instruccion -> declaracion_vector .)
    F64             reduce using rule 21 (instruccion -> declaracion_vector .)
    BOOL            reduce using rule 21 (instruccion -> declaracion_vector .)
    CHAR            reduce using rule 21 (instruccion -> declaracion_vector .)
    STRING          reduce using rule 21 (instruccion -> declaracion_vector .)
    USIZE           reduce using rule 21 (instruccion -> declaracion_vector .)
    SIGNOI          reduce using rule 21 (instruccion -> declaracion_vector .)
    $end            reduce using rule 21 (instruccion -> declaracion_vector .)
    LLAVEDER        reduce using rule 21 (instruccion -> declaracion_vector .)
    COMA            reduce using rule 21 (instruccion -> declaracion_vector .)


state 21

    (22) instruccion -> forin .

    FN              reduce using rule 22 (instruccion -> forin .)
    LET             reduce using rule 22 (instruccion -> forin .)
    PRINTLN         reduce using rule 22 (instruccion -> forin .)
    ID              reduce using rule 22 (instruccion -> forin .)
    IF              reduce using rule 22 (instruccion -> forin .)
    MATCH           reduce using rule 22 (instruccion -> forin .)
    LOOP            reduce using rule 22 (instruccion -> forin .)
    WHILE           reduce using rule 22 (instruccion -> forin .)
    BREAK           reduce using rule 22 (instruccion -> forin .)
    RETURN          reduce using rule 22 (instruccion -> forin .)
    CONTINUE        reduce using rule 22 (instruccion -> forin .)
    FOR             reduce using rule 22 (instruccion -> forin .)
    VEC             reduce using rule 22 (instruccion -> forin .)
    VVEC            reduce using rule 22 (instruccion -> forin .)
    ENTERO          reduce using rule 22 (instruccion -> forin .)
    DECIMAL         reduce using rule 22 (instruccion -> forin .)
    TRUE            reduce using rule 22 (instruccion -> forin .)
    FALSE           reduce using rule 22 (instruccion -> forin .)
    STR             reduce using rule 22 (instruccion -> forin .)
    CADENA          reduce using rule 22 (instruccion -> forin .)
    CARACTER        reduce using rule 22 (instruccion -> forin .)
    MENOS           reduce using rule 22 (instruccion -> forin .)
    NOT             reduce using rule 22 (instruccion -> forin .)
    PARIZQ          reduce using rule 22 (instruccion -> forin .)
    CORIZQ          reduce using rule 22 (instruccion -> forin .)
    I64             reduce using rule 22 (instruccion -> forin .)
    F64             reduce using rule 22 (instruccion -> forin .)
    BOOL            reduce using rule 22 (instruccion -> forin .)
    CHAR            reduce using rule 22 (instruccion -> forin .)
    STRING          reduce using rule 22 (instruccion -> forin .)
    USIZE           reduce using rule 22 (instruccion -> forin .)
    SIGNOI          reduce using rule 22 (instruccion -> forin .)
    $end            reduce using rule 22 (instruccion -> forin .)
    LLAVEDER        reduce using rule 22 (instruccion -> forin .)
    COMA            reduce using rule 22 (instruccion -> forin .)


state 22

    (23) instruccion -> nativas_vector .

    FN              reduce using rule 23 (instruccion -> nativas_vector .)
    LET             reduce using rule 23 (instruccion -> nativas_vector .)
    PRINTLN         reduce using rule 23 (instruccion -> nativas_vector .)
    ID              reduce using rule 23 (instruccion -> nativas_vector .)
    IF              reduce using rule 23 (instruccion -> nativas_vector .)
    MATCH           reduce using rule 23 (instruccion -> nativas_vector .)
    LOOP            reduce using rule 23 (instruccion -> nativas_vector .)
    WHILE           reduce using rule 23 (instruccion -> nativas_vector .)
    BREAK           reduce using rule 23 (instruccion -> nativas_vector .)
    RETURN          reduce using rule 23 (instruccion -> nativas_vector .)
    CONTINUE        reduce using rule 23 (instruccion -> nativas_vector .)
    FOR             reduce using rule 23 (instruccion -> nativas_vector .)
    VEC             reduce using rule 23 (instruccion -> nativas_vector .)
    VVEC            reduce using rule 23 (instruccion -> nativas_vector .)
    ENTERO          reduce using rule 23 (instruccion -> nativas_vector .)
    DECIMAL         reduce using rule 23 (instruccion -> nativas_vector .)
    TRUE            reduce using rule 23 (instruccion -> nativas_vector .)
    FALSE           reduce using rule 23 (instruccion -> nativas_vector .)
    STR             reduce using rule 23 (instruccion -> nativas_vector .)
    CADENA          reduce using rule 23 (instruccion -> nativas_vector .)
    CARACTER        reduce using rule 23 (instruccion -> nativas_vector .)
    MENOS           reduce using rule 23 (instruccion -> nativas_vector .)
    NOT             reduce using rule 23 (instruccion -> nativas_vector .)
    PARIZQ          reduce using rule 23 (instruccion -> nativas_vector .)
    CORIZQ          reduce using rule 23 (instruccion -> nativas_vector .)
    I64             reduce using rule 23 (instruccion -> nativas_vector .)
    F64             reduce using rule 23 (instruccion -> nativas_vector .)
    BOOL            reduce using rule 23 (instruccion -> nativas_vector .)
    CHAR            reduce using rule 23 (instruccion -> nativas_vector .)
    STRING          reduce using rule 23 (instruccion -> nativas_vector .)
    USIZE           reduce using rule 23 (instruccion -> nativas_vector .)
    SIGNOI          reduce using rule 23 (instruccion -> nativas_vector .)
    $end            reduce using rule 23 (instruccion -> nativas_vector .)
    LLAVEDER        reduce using rule 23 (instruccion -> nativas_vector .)
    COMA            reduce using rule 23 (instruccion -> nativas_vector .)


state 23

    (56) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> LET . ID IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET . MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MUT             shift and go to state 75
    ID              shift and go to state 76


state 24

    (60) asignacion -> ID . IGUAL expresion PTCOMA
    (61) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (48) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (49) llamada_funciones -> ID . PARIZQ PARDER
    (36) expresion -> ID . expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> ID .
    (134) expresion -> ID . lindices
    (135) lindices -> . lindices CORIZQ expresion CORDER
    (136) lindices -> . CORIZQ expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for MENOS resolved as shift
    IGUAL           shift and go to state 77
    PARIZQ          shift and go to state 80
    PTO             reduce using rule 102 (expresion -> ID .)
    MAS             reduce using rule 102 (expresion -> ID .)
    POR             reduce using rule 102 (expresion -> ID .)
    DIVIDIDO        reduce using rule 102 (expresion -> ID .)
    MODULO          reduce using rule 102 (expresion -> ID .)
    IGUALQUE        reduce using rule 102 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 102 (expresion -> ID .)
    MENORQUE        reduce using rule 102 (expresion -> ID .)
    MAYORQUE        reduce using rule 102 (expresion -> ID .)
    MENORIQUE       reduce using rule 102 (expresion -> ID .)
    MAYORIQUE       reduce using rule 102 (expresion -> ID .)
    OR              reduce using rule 102 (expresion -> ID .)
    AND             reduce using rule 102 (expresion -> ID .)
    CORIZQ          shift and go to state 81
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

  ! MENOS           [ reduce using rule 102 (expresion -> ID .) ]

    expresion                      shift and go to state 78
    lindices                       shift and go to state 79
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 25

    (119) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 82


state 26

    (32) nativas_vector -> expresion . PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion . PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion . PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             shift and go to state 83
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 27

    (54) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 97


state 28

    (130) expresion -> NOT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 98
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 29

    (62) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (138) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 99
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 30

    (70) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (149) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 100
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 31

    (85) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER
    (160) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 101


state 32

    (86) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 102
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 33

    (89) break -> BREAK . PTCOMA
    (90) break -> BREAK . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 103
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 104
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 34

    (92) return -> RETURN . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 105
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 35

    (91) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 106


state 36

    (129) expresion -> MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 107
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 37

    (27) expresion -> VVEC . DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC . DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 108


state 38

    (87) forin -> FOR . ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> FOR . ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 109


state 39

    (26) expresion -> VEC . NOT CORIZQ expresiones CORDER

    NOT             shift and go to state 110


state 40

    (133) expresion -> CORIZQ . expresiones CORDER
    (100) expresiones -> . expresiones COMA expresion
    (101) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresiones                    shift and go to state 111
    expresion                      shift and go to state 112
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 41

    (29) expresion -> nativas_vec .

    PTO             reduce using rule 29 (expresion -> nativas_vec .)
    MAS             reduce using rule 29 (expresion -> nativas_vec .)
    MENOS           reduce using rule 29 (expresion -> nativas_vec .)
    POR             reduce using rule 29 (expresion -> nativas_vec .)
    DIVIDIDO        reduce using rule 29 (expresion -> nativas_vec .)
    MODULO          reduce using rule 29 (expresion -> nativas_vec .)
    IGUALQUE        reduce using rule 29 (expresion -> nativas_vec .)
    NOIGUALQUE      reduce using rule 29 (expresion -> nativas_vec .)
    MENORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MAYORQUE        reduce using rule 29 (expresion -> nativas_vec .)
    MENORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    MAYORIQUE       reduce using rule 29 (expresion -> nativas_vec .)
    OR              reduce using rule 29 (expresion -> nativas_vec .)
    AND             reduce using rule 29 (expresion -> nativas_vec .)
    PARDER          reduce using rule 29 (expresion -> nativas_vec .)
    AS              reduce using rule 29 (expresion -> nativas_vec .)
    CONTAINS        reduce using rule 29 (expresion -> nativas_vec .)
    LLAVEIZQ        reduce using rule 29 (expresion -> nativas_vec .)
    PTCOMA          reduce using rule 29 (expresion -> nativas_vec .)
    CORDER          reduce using rule 29 (expresion -> nativas_vec .)
    COMA            reduce using rule 29 (expresion -> nativas_vec .)
    LLAVEDER        reduce using rule 29 (expresion -> nativas_vec .)
    IGUAL           reduce using rule 29 (expresion -> nativas_vec .)
    BARRAS          reduce using rule 29 (expresion -> nativas_vec .)


state 42

    (99) tipo -> SIGNOI . STR

    STR             shift and go to state 113


state 43

    (103) expresion -> ENTERO .

    PTO             reduce using rule 103 (expresion -> ENTERO .)
    MAS             reduce using rule 103 (expresion -> ENTERO .)
    MENOS           reduce using rule 103 (expresion -> ENTERO .)
    POR             reduce using rule 103 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 103 (expresion -> ENTERO .)
    MODULO          reduce using rule 103 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 103 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 103 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 103 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 103 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 103 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 103 (expresion -> ENTERO .)
    OR              reduce using rule 103 (expresion -> ENTERO .)
    AND             reduce using rule 103 (expresion -> ENTERO .)
    PARDER          reduce using rule 103 (expresion -> ENTERO .)
    AS              reduce using rule 103 (expresion -> ENTERO .)
    CONTAINS        reduce using rule 103 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 103 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 103 (expresion -> ENTERO .)
    CORDER          reduce using rule 103 (expresion -> ENTERO .)
    COMA            reduce using rule 103 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 103 (expresion -> ENTERO .)
    IGUAL           reduce using rule 103 (expresion -> ENTERO .)
    BARRAS          reduce using rule 103 (expresion -> ENTERO .)


state 44

    (104) expresion -> DECIMAL .

    PTO             reduce using rule 104 (expresion -> DECIMAL .)
    MAS             reduce using rule 104 (expresion -> DECIMAL .)
    MENOS           reduce using rule 104 (expresion -> DECIMAL .)
    POR             reduce using rule 104 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 104 (expresion -> DECIMAL .)
    MODULO          reduce using rule 104 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 104 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 104 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 104 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 104 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 104 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 104 (expresion -> DECIMAL .)
    OR              reduce using rule 104 (expresion -> DECIMAL .)
    AND             reduce using rule 104 (expresion -> DECIMAL .)
    PARDER          reduce using rule 104 (expresion -> DECIMAL .)
    AS              reduce using rule 104 (expresion -> DECIMAL .)
    CONTAINS        reduce using rule 104 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 104 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 104 (expresion -> DECIMAL .)
    CORDER          reduce using rule 104 (expresion -> DECIMAL .)
    COMA            reduce using rule 104 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 104 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 104 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 104 (expresion -> DECIMAL .)


state 45

    (105) expresion -> TRUE .

    PTO             reduce using rule 105 (expresion -> TRUE .)
    MAS             reduce using rule 105 (expresion -> TRUE .)
    MENOS           reduce using rule 105 (expresion -> TRUE .)
    POR             reduce using rule 105 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 105 (expresion -> TRUE .)
    MODULO          reduce using rule 105 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 105 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 105 (expresion -> TRUE .)
    MENORQUE        reduce using rule 105 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 105 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 105 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 105 (expresion -> TRUE .)
    OR              reduce using rule 105 (expresion -> TRUE .)
    AND             reduce using rule 105 (expresion -> TRUE .)
    PARDER          reduce using rule 105 (expresion -> TRUE .)
    AS              reduce using rule 105 (expresion -> TRUE .)
    CONTAINS        reduce using rule 105 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 105 (expresion -> TRUE .)
    PTCOMA          reduce using rule 105 (expresion -> TRUE .)
    CORDER          reduce using rule 105 (expresion -> TRUE .)
    COMA            reduce using rule 105 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 105 (expresion -> TRUE .)
    IGUAL           reduce using rule 105 (expresion -> TRUE .)
    BARRAS          reduce using rule 105 (expresion -> TRUE .)


state 46

    (106) expresion -> FALSE .

    PTO             reduce using rule 106 (expresion -> FALSE .)
    MAS             reduce using rule 106 (expresion -> FALSE .)
    MENOS           reduce using rule 106 (expresion -> FALSE .)
    POR             reduce using rule 106 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 106 (expresion -> FALSE .)
    MODULO          reduce using rule 106 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 106 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 106 (expresion -> FALSE .)
    MENORQUE        reduce using rule 106 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 106 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 106 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 106 (expresion -> FALSE .)
    OR              reduce using rule 106 (expresion -> FALSE .)
    AND             reduce using rule 106 (expresion -> FALSE .)
    PARDER          reduce using rule 106 (expresion -> FALSE .)
    AS              reduce using rule 106 (expresion -> FALSE .)
    CONTAINS        reduce using rule 106 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 106 (expresion -> FALSE .)
    PTCOMA          reduce using rule 106 (expresion -> FALSE .)
    CORDER          reduce using rule 106 (expresion -> FALSE .)
    COMA            reduce using rule 106 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 106 (expresion -> FALSE .)
    IGUAL           reduce using rule 106 (expresion -> FALSE .)
    BARRAS          reduce using rule 106 (expresion -> FALSE .)


state 47

    (107) expresion -> tostring .

    PTO             reduce using rule 107 (expresion -> tostring .)
    MAS             reduce using rule 107 (expresion -> tostring .)
    MENOS           reduce using rule 107 (expresion -> tostring .)
    POR             reduce using rule 107 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 107 (expresion -> tostring .)
    MODULO          reduce using rule 107 (expresion -> tostring .)
    IGUALQUE        reduce using rule 107 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 107 (expresion -> tostring .)
    MENORQUE        reduce using rule 107 (expresion -> tostring .)
    MAYORQUE        reduce using rule 107 (expresion -> tostring .)
    MENORIQUE       reduce using rule 107 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 107 (expresion -> tostring .)
    OR              reduce using rule 107 (expresion -> tostring .)
    AND             reduce using rule 107 (expresion -> tostring .)
    PARDER          reduce using rule 107 (expresion -> tostring .)
    AS              reduce using rule 107 (expresion -> tostring .)
    CONTAINS        reduce using rule 107 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 107 (expresion -> tostring .)
    PTCOMA          reduce using rule 107 (expresion -> tostring .)
    CORDER          reduce using rule 107 (expresion -> tostring .)
    COMA            reduce using rule 107 (expresion -> tostring .)
    LLAVEDER        reduce using rule 107 (expresion -> tostring .)
    IGUAL           reduce using rule 107 (expresion -> tostring .)
    BARRAS          reduce using rule 107 (expresion -> tostring .)


state 48

    (108) expresion -> toowned .

    PTO             reduce using rule 108 (expresion -> toowned .)
    MAS             reduce using rule 108 (expresion -> toowned .)
    MENOS           reduce using rule 108 (expresion -> toowned .)
    POR             reduce using rule 108 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 108 (expresion -> toowned .)
    MODULO          reduce using rule 108 (expresion -> toowned .)
    IGUALQUE        reduce using rule 108 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 108 (expresion -> toowned .)
    MENORQUE        reduce using rule 108 (expresion -> toowned .)
    MAYORQUE        reduce using rule 108 (expresion -> toowned .)
    MENORIQUE       reduce using rule 108 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 108 (expresion -> toowned .)
    OR              reduce using rule 108 (expresion -> toowned .)
    AND             reduce using rule 108 (expresion -> toowned .)
    PARDER          reduce using rule 108 (expresion -> toowned .)
    AS              reduce using rule 108 (expresion -> toowned .)
    CONTAINS        reduce using rule 108 (expresion -> toowned .)
    LLAVEIZQ        reduce using rule 108 (expresion -> toowned .)
    PTCOMA          reduce using rule 108 (expresion -> toowned .)
    CORDER          reduce using rule 108 (expresion -> toowned .)
    COMA            reduce using rule 108 (expresion -> toowned .)
    LLAVEDER        reduce using rule 108 (expresion -> toowned .)
    IGUAL           reduce using rule 108 (expresion -> toowned .)
    BARRAS          reduce using rule 108 (expresion -> toowned .)


state 49

    (111) expresion -> STR .

    PTO             reduce using rule 111 (expresion -> STR .)
    MAS             reduce using rule 111 (expresion -> STR .)
    MENOS           reduce using rule 111 (expresion -> STR .)
    POR             reduce using rule 111 (expresion -> STR .)
    DIVIDIDO        reduce using rule 111 (expresion -> STR .)
    MODULO          reduce using rule 111 (expresion -> STR .)
    IGUALQUE        reduce using rule 111 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 111 (expresion -> STR .)
    MENORQUE        reduce using rule 111 (expresion -> STR .)
    MAYORQUE        reduce using rule 111 (expresion -> STR .)
    MENORIQUE       reduce using rule 111 (expresion -> STR .)
    MAYORIQUE       reduce using rule 111 (expresion -> STR .)
    OR              reduce using rule 111 (expresion -> STR .)
    AND             reduce using rule 111 (expresion -> STR .)
    PARDER          reduce using rule 111 (expresion -> STR .)
    AS              reduce using rule 111 (expresion -> STR .)
    CONTAINS        reduce using rule 111 (expresion -> STR .)
    LLAVEIZQ        reduce using rule 111 (expresion -> STR .)
    PTCOMA          reduce using rule 111 (expresion -> STR .)
    CORDER          reduce using rule 111 (expresion -> STR .)
    COMA            reduce using rule 111 (expresion -> STR .)
    LLAVEDER        reduce using rule 111 (expresion -> STR .)
    IGUAL           reduce using rule 111 (expresion -> STR .)
    BARRAS          reduce using rule 111 (expresion -> STR .)


state 50

    (112) expresion -> CADENA .
    (109) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (110) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    MAS             reduce using rule 112 (expresion -> CADENA .)
    MENOS           reduce using rule 112 (expresion -> CADENA .)
    POR             reduce using rule 112 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 112 (expresion -> CADENA .)
    MODULO          reduce using rule 112 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 112 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 112 (expresion -> CADENA .)
    MENORQUE        reduce using rule 112 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 112 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 112 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 112 (expresion -> CADENA .)
    OR              reduce using rule 112 (expresion -> CADENA .)
    AND             reduce using rule 112 (expresion -> CADENA .)
    PARDER          reduce using rule 112 (expresion -> CADENA .)
    AS              reduce using rule 112 (expresion -> CADENA .)
    CONTAINS        reduce using rule 112 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 112 (expresion -> CADENA .)
    PTCOMA          reduce using rule 112 (expresion -> CADENA .)
    CORDER          reduce using rule 112 (expresion -> CADENA .)
    COMA            reduce using rule 112 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 112 (expresion -> CADENA .)
    IGUAL           reduce using rule 112 (expresion -> CADENA .)
    BARRAS          reduce using rule 112 (expresion -> CADENA .)
    PTO             shift and go to state 114

  ! PTO             [ reduce using rule 112 (expresion -> CADENA .) ]


state 51

    (113) expresion -> CARACTER .

    PTO             reduce using rule 113 (expresion -> CARACTER .)
    MAS             reduce using rule 113 (expresion -> CARACTER .)
    MENOS           reduce using rule 113 (expresion -> CARACTER .)
    POR             reduce using rule 113 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 113 (expresion -> CARACTER .)
    MODULO          reduce using rule 113 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 113 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 113 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 113 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 113 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 113 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 113 (expresion -> CARACTER .)
    OR              reduce using rule 113 (expresion -> CARACTER .)
    AND             reduce using rule 113 (expresion -> CARACTER .)
    PARDER          reduce using rule 113 (expresion -> CARACTER .)
    AS              reduce using rule 113 (expresion -> CARACTER .)
    CONTAINS        reduce using rule 113 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 113 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 113 (expresion -> CARACTER .)
    CORDER          reduce using rule 113 (expresion -> CARACTER .)
    COMA            reduce using rule 113 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 113 (expresion -> CARACTER .)
    IGUAL           reduce using rule 113 (expresion -> CARACTER .)
    BARRAS          reduce using rule 113 (expresion -> CARACTER .)


state 52

    (137) expresion -> if_asig .

    PTO             reduce using rule 137 (expresion -> if_asig .)
    MAS             reduce using rule 137 (expresion -> if_asig .)
    MENOS           reduce using rule 137 (expresion -> if_asig .)
    POR             reduce using rule 137 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 137 (expresion -> if_asig .)
    MODULO          reduce using rule 137 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 137 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 137 (expresion -> if_asig .)
    MENORQUE        reduce using rule 137 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 137 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 137 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 137 (expresion -> if_asig .)
    OR              reduce using rule 137 (expresion -> if_asig .)
    AND             reduce using rule 137 (expresion -> if_asig .)
    PARDER          reduce using rule 137 (expresion -> if_asig .)
    AS              reduce using rule 137 (expresion -> if_asig .)
    CONTAINS        reduce using rule 137 (expresion -> if_asig .)
    LLAVEIZQ        reduce using rule 137 (expresion -> if_asig .)
    PTCOMA          reduce using rule 137 (expresion -> if_asig .)
    CORDER          reduce using rule 137 (expresion -> if_asig .)
    COMA            reduce using rule 137 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 137 (expresion -> if_asig .)
    IGUAL           reduce using rule 137 (expresion -> if_asig .)
    BARRAS          reduce using rule 137 (expresion -> if_asig .)


state 53

    (148) expresion -> match_asig .

    PTO             reduce using rule 148 (expresion -> match_asig .)
    MAS             reduce using rule 148 (expresion -> match_asig .)
    MENOS           reduce using rule 148 (expresion -> match_asig .)
    POR             reduce using rule 148 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 148 (expresion -> match_asig .)
    MODULO          reduce using rule 148 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 148 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 148 (expresion -> match_asig .)
    MENORQUE        reduce using rule 148 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 148 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 148 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 148 (expresion -> match_asig .)
    OR              reduce using rule 148 (expresion -> match_asig .)
    AND             reduce using rule 148 (expresion -> match_asig .)
    PARDER          reduce using rule 148 (expresion -> match_asig .)
    AS              reduce using rule 148 (expresion -> match_asig .)
    CONTAINS        reduce using rule 148 (expresion -> match_asig .)
    LLAVEIZQ        reduce using rule 148 (expresion -> match_asig .)
    PTCOMA          reduce using rule 148 (expresion -> match_asig .)
    CORDER          reduce using rule 148 (expresion -> match_asig .)
    COMA            reduce using rule 148 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 148 (expresion -> match_asig .)
    IGUAL           reduce using rule 148 (expresion -> match_asig .)
    BARRAS          reduce using rule 148 (expresion -> match_asig .)


state 54

    (159) expresion -> loop_asig .

    PTO             reduce using rule 159 (expresion -> loop_asig .)
    MAS             reduce using rule 159 (expresion -> loop_asig .)
    MENOS           reduce using rule 159 (expresion -> loop_asig .)
    POR             reduce using rule 159 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 159 (expresion -> loop_asig .)
    MODULO          reduce using rule 159 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 159 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 159 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 159 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 159 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 159 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 159 (expresion -> loop_asig .)
    OR              reduce using rule 159 (expresion -> loop_asig .)
    AND             reduce using rule 159 (expresion -> loop_asig .)
    PARDER          reduce using rule 159 (expresion -> loop_asig .)
    AS              reduce using rule 159 (expresion -> loop_asig .)
    CONTAINS        reduce using rule 159 (expresion -> loop_asig .)
    LLAVEIZQ        reduce using rule 159 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 159 (expresion -> loop_asig .)
    CORDER          reduce using rule 159 (expresion -> loop_asig .)
    COMA            reduce using rule 159 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 159 (expresion -> loop_asig .)
    IGUAL           reduce using rule 159 (expresion -> loop_asig .)
    BARRAS          reduce using rule 159 (expresion -> loop_asig .)


state 55

    (162) expresion -> nativas_fun .

    PTO             reduce using rule 162 (expresion -> nativas_fun .)
    MAS             reduce using rule 162 (expresion -> nativas_fun .)
    MENOS           reduce using rule 162 (expresion -> nativas_fun .)
    POR             reduce using rule 162 (expresion -> nativas_fun .)
    DIVIDIDO        reduce using rule 162 (expresion -> nativas_fun .)
    MODULO          reduce using rule 162 (expresion -> nativas_fun .)
    IGUALQUE        reduce using rule 162 (expresion -> nativas_fun .)
    NOIGUALQUE      reduce using rule 162 (expresion -> nativas_fun .)
    MENORQUE        reduce using rule 162 (expresion -> nativas_fun .)
    MAYORQUE        reduce using rule 162 (expresion -> nativas_fun .)
    MENORIQUE       reduce using rule 162 (expresion -> nativas_fun .)
    MAYORIQUE       reduce using rule 162 (expresion -> nativas_fun .)
    OR              reduce using rule 162 (expresion -> nativas_fun .)
    AND             reduce using rule 162 (expresion -> nativas_fun .)
    PARDER          reduce using rule 162 (expresion -> nativas_fun .)
    AS              reduce using rule 162 (expresion -> nativas_fun .)
    CONTAINS        reduce using rule 162 (expresion -> nativas_fun .)
    LLAVEIZQ        reduce using rule 162 (expresion -> nativas_fun .)
    PTCOMA          reduce using rule 162 (expresion -> nativas_fun .)
    CORDER          reduce using rule 162 (expresion -> nativas_fun .)
    COMA            reduce using rule 162 (expresion -> nativas_fun .)
    LLAVEDER        reduce using rule 162 (expresion -> nativas_fun .)
    IGUAL           reduce using rule 162 (expresion -> nativas_fun .)
    BARRAS          reduce using rule 162 (expresion -> nativas_fun .)


state 56

    (93) tipo -> I64 .

    DOSPT           reduce using rule 93 (tipo -> I64 .)
    PARDER          reduce using rule 93 (tipo -> I64 .)
    IGUAL           reduce using rule 93 (tipo -> I64 .)
    COMA            reduce using rule 93 (tipo -> I64 .)
    PTCOMA          reduce using rule 93 (tipo -> I64 .)
    MAYORQUE        reduce using rule 93 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 93 (tipo -> I64 .)


state 57

    (94) tipo -> F64 .

    DOSPT           reduce using rule 94 (tipo -> F64 .)
    PARDER          reduce using rule 94 (tipo -> F64 .)
    IGUAL           reduce using rule 94 (tipo -> F64 .)
    COMA            reduce using rule 94 (tipo -> F64 .)
    PTCOMA          reduce using rule 94 (tipo -> F64 .)
    MAYORQUE        reduce using rule 94 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 94 (tipo -> F64 .)


state 58

    (95) tipo -> BOOL .

    DOSPT           reduce using rule 95 (tipo -> BOOL .)
    PARDER          reduce using rule 95 (tipo -> BOOL .)
    IGUAL           reduce using rule 95 (tipo -> BOOL .)
    COMA            reduce using rule 95 (tipo -> BOOL .)
    PTCOMA          reduce using rule 95 (tipo -> BOOL .)
    MAYORQUE        reduce using rule 95 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 95 (tipo -> BOOL .)


state 59

    (96) tipo -> CHAR .

    DOSPT           reduce using rule 96 (tipo -> CHAR .)
    PARDER          reduce using rule 96 (tipo -> CHAR .)
    IGUAL           reduce using rule 96 (tipo -> CHAR .)
    COMA            reduce using rule 96 (tipo -> CHAR .)
    PTCOMA          reduce using rule 96 (tipo -> CHAR .)
    MAYORQUE        reduce using rule 96 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 96 (tipo -> CHAR .)


state 60

    (97) tipo -> STRING .

    DOSPT           reduce using rule 97 (tipo -> STRING .)
    PARDER          reduce using rule 97 (tipo -> STRING .)
    IGUAL           reduce using rule 97 (tipo -> STRING .)
    COMA            reduce using rule 97 (tipo -> STRING .)
    PTCOMA          reduce using rule 97 (tipo -> STRING .)
    MAYORQUE        reduce using rule 97 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 97 (tipo -> STRING .)


state 61

    (98) tipo -> USIZE .

    DOSPT           reduce using rule 98 (tipo -> USIZE .)
    PARDER          reduce using rule 98 (tipo -> USIZE .)
    IGUAL           reduce using rule 98 (tipo -> USIZE .)
    COMA            reduce using rule 98 (tipo -> USIZE .)
    PTCOMA          reduce using rule 98 (tipo -> USIZE .)
    MAYORQUE        reduce using rule 98 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 98 (tipo -> USIZE .)


state 62

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 115
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 63

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    VEC             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    VVEC            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    STR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PARIZQ          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    F64             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BOOL            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    USIZE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    SIGNOI          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 64

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 65

    (40) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 67


state 66

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 116


state 67

    (40) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 117


state 68

    (131) expresion -> PARIZQ expresion . PARDER
    (161) expresion -> PARIZQ expresion . AS tipo PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 118
    AS              shift and go to state 119
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 69

    (36) expresion -> ID . expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> ID .
    (134) expresion -> ID . lindices
    (48) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (49) llamada_funciones -> ID . PARIZQ PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (135) lindices -> . lindices CORIZQ expresion CORDER
    (136) lindices -> . CORIZQ expresion CORDER
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for MENOS resolved as shift
    PARDER          reduce using rule 102 (expresion -> ID .)
    AS              reduce using rule 102 (expresion -> ID .)
    PTO             reduce using rule 102 (expresion -> ID .)
    MAS             reduce using rule 102 (expresion -> ID .)
    POR             reduce using rule 102 (expresion -> ID .)
    DIVIDIDO        reduce using rule 102 (expresion -> ID .)
    MODULO          reduce using rule 102 (expresion -> ID .)
    IGUALQUE        reduce using rule 102 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 102 (expresion -> ID .)
    MENORQUE        reduce using rule 102 (expresion -> ID .)
    MAYORQUE        reduce using rule 102 (expresion -> ID .)
    MENORIQUE       reduce using rule 102 (expresion -> ID .)
    MAYORIQUE       reduce using rule 102 (expresion -> ID .)
    OR              reduce using rule 102 (expresion -> ID .)
    AND             reduce using rule 102 (expresion -> ID .)
    CONTAINS        reduce using rule 102 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 102 (expresion -> ID .)
    PTCOMA          reduce using rule 102 (expresion -> ID .)
    CORDER          reduce using rule 102 (expresion -> ID .)
    COMA            reduce using rule 102 (expresion -> ID .)
    LLAVEDER        reduce using rule 102 (expresion -> ID .)
    IGUAL           reduce using rule 102 (expresion -> ID .)
    BARRAS          reduce using rule 102 (expresion -> ID .)
    PARIZQ          shift and go to state 80
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    CORIZQ          shift and go to state 122
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

  ! MENOS           [ reduce using rule 102 (expresion -> ID .) ]

    expresion                      shift and go to state 78
    lindices                       shift and go to state 121
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 70

    (132) expresion -> llamada_funciones .

    PARDER          reduce using rule 132 (expresion -> llamada_funciones .)
    AS              reduce using rule 132 (expresion -> llamada_funciones .)
    PTO             reduce using rule 132 (expresion -> llamada_funciones .)
    MAS             reduce using rule 132 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 132 (expresion -> llamada_funciones .)
    POR             reduce using rule 132 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 132 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 132 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 132 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 132 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 132 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 132 (expresion -> llamada_funciones .)
    OR              reduce using rule 132 (expresion -> llamada_funciones .)
    AND             reduce using rule 132 (expresion -> llamada_funciones .)
    CONTAINS        reduce using rule 132 (expresion -> llamada_funciones .)
    LLAVEIZQ        reduce using rule 132 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 132 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 132 (expresion -> llamada_funciones .)
    COMA            reduce using rule 132 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 132 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 132 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 132 (expresion -> llamada_funciones .)


state 71

    (138) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 123
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 72

    (149) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 124
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 73

    (160) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 125


state 74

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    VEC             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    VVEC            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ENTERO          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    DECIMAL         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    TRUE            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FALSE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    STR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CADENA          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CARACTER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MENOS           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    NOT             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PARIZQ          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CORIZQ          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    I64             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    F64             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BOOL            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CHAR            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    STRING          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    USIZE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    SIGNOI          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 75

    (56) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT . ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    ID              shift and go to state 126


state 76

    (58) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> LET ID . IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 127
    IGUAL           shift and go to state 128


state 77

    (60) asignacion -> ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 129
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 78

    (36) expresion -> ID expresion . CONTAINS PARIZQ SIGNOI expresion PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CONTAINS        shift and go to state 130
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 79

    (61) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (134) expresion -> ID lindices .
    (135) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 131
    PTO             reduce using rule 134 (expresion -> ID lindices .)
    MAS             reduce using rule 134 (expresion -> ID lindices .)
    MENOS           reduce using rule 134 (expresion -> ID lindices .)
    POR             reduce using rule 134 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 134 (expresion -> ID lindices .)
    MODULO          reduce using rule 134 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 134 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 134 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    OR              reduce using rule 134 (expresion -> ID lindices .)
    AND             reduce using rule 134 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 132


state 80

    (48) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (49) llamada_funciones -> ID PARIZQ . PARDER
    (131) expresion -> PARIZQ . expresion PARDER
    (161) expresion -> PARIZQ . expresion AS tipo PARDER
    (50) largumentos -> . largumentos COMA largumento
    (51) largumentos -> . largumento
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (52) largumento -> . expresion
    (53) largumento -> . SIGNOI MUT expresion
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 134
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    SIGNOI          shift and go to state 137
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    largumentos                    shift and go to state 133
    expresion                      shift and go to state 135
    tipo                           shift and go to state 25
    largumento                     shift and go to state 136
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 81

    (136) lindices -> CORIZQ . expresion CORDER
    (133) expresion -> CORIZQ . expresiones CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (100) expresiones -> . expresiones COMA expresion
    (101) expresiones -> . expresion
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 138
    expresiones                    shift and go to state 111
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 82

    (119) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 139


state 83

    (32) nativas_vector -> expresion PTO . PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion PTO . INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion PTO . REMOVE PARIZQ expresion PARDER PTCOMA
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (163) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (164) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PUSH            shift and go to state 140
    INSERT          shift and go to state 141
    REMOVE          shift and go to state 142
    CAPACITY        shift and go to state 143
    LEN             shift and go to state 144
    ABS             shift and go to state 145
    SQRT            shift and go to state 146
    CLONE           shift and go to state 147


state 84

    (114) expresion -> expresion MAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 148
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 85

    (115) expresion -> expresion MENOS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 149
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 86

    (116) expresion -> expresion POR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 150
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 87

    (117) expresion -> expresion DIVIDIDO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 151
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 88

    (118) expresion -> expresion MODULO . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 152
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 89

    (121) expresion -> expresion IGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 153
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 90

    (122) expresion -> expresion NOIGUALQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 154
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 91

    (123) expresion -> expresion MENORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 155
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 92

    (124) expresion -> expresion MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 156
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 93

    (125) expresion -> expresion MENORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 157
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 94

    (126) expresion -> expresion MAYORIQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 158
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 95

    (127) expresion -> expresion OR . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 159
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 96

    (128) expresion -> expresion AND . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 160
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 97

    (54) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 161


state 98

    (130) expresion -> NOT expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 130 (expresion -> NOT expresion .)
    MAS             reduce using rule 130 (expresion -> NOT expresion .)
    MENOS           reduce using rule 130 (expresion -> NOT expresion .)
    POR             reduce using rule 130 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 130 (expresion -> NOT expresion .)
    MODULO          reduce using rule 130 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 130 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 130 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 130 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 130 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 130 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 130 (expresion -> NOT expresion .)
    OR              reduce using rule 130 (expresion -> NOT expresion .)
    AND             reduce using rule 130 (expresion -> NOT expresion .)
    PARDER          reduce using rule 130 (expresion -> NOT expresion .)
    AS              reduce using rule 130 (expresion -> NOT expresion .)
    CONTAINS        reduce using rule 130 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 130 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 130 (expresion -> NOT expresion .)
    CORDER          reduce using rule 130 (expresion -> NOT expresion .)
    COMA            reduce using rule 130 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 130 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 130 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 130 (expresion -> NOT expresion .)

  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 99

    (62) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (63) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (138) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 162
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 100

    (70) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (149) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 163
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 101

    (85) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (160) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 164
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 102

    (86) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 165
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 103

    (89) break -> BREAK PTCOMA .

    FN              reduce using rule 89 (break -> BREAK PTCOMA .)
    LET             reduce using rule 89 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 89 (break -> BREAK PTCOMA .)
    ID              reduce using rule 89 (break -> BREAK PTCOMA .)
    IF              reduce using rule 89 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 89 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 89 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 89 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 89 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 89 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 89 (break -> BREAK PTCOMA .)
    FOR             reduce using rule 89 (break -> BREAK PTCOMA .)
    VEC             reduce using rule 89 (break -> BREAK PTCOMA .)
    VVEC            reduce using rule 89 (break -> BREAK PTCOMA .)
    ENTERO          reduce using rule 89 (break -> BREAK PTCOMA .)
    DECIMAL         reduce using rule 89 (break -> BREAK PTCOMA .)
    TRUE            reduce using rule 89 (break -> BREAK PTCOMA .)
    FALSE           reduce using rule 89 (break -> BREAK PTCOMA .)
    STR             reduce using rule 89 (break -> BREAK PTCOMA .)
    CADENA          reduce using rule 89 (break -> BREAK PTCOMA .)
    CARACTER        reduce using rule 89 (break -> BREAK PTCOMA .)
    MENOS           reduce using rule 89 (break -> BREAK PTCOMA .)
    NOT             reduce using rule 89 (break -> BREAK PTCOMA .)
    PARIZQ          reduce using rule 89 (break -> BREAK PTCOMA .)
    CORIZQ          reduce using rule 89 (break -> BREAK PTCOMA .)
    I64             reduce using rule 89 (break -> BREAK PTCOMA .)
    F64             reduce using rule 89 (break -> BREAK PTCOMA .)
    BOOL            reduce using rule 89 (break -> BREAK PTCOMA .)
    CHAR            reduce using rule 89 (break -> BREAK PTCOMA .)
    STRING          reduce using rule 89 (break -> BREAK PTCOMA .)
    USIZE           reduce using rule 89 (break -> BREAK PTCOMA .)
    SIGNOI          reduce using rule 89 (break -> BREAK PTCOMA .)
    $end            reduce using rule 89 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 89 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 89 (break -> BREAK PTCOMA .)


state 104

    (90) break -> BREAK expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 166
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 105

    (92) return -> RETURN expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 167
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 106

    (91) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    VEC             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    VVEC            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    ENTERO          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    TRUE            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    FALSE           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    STR             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    CADENA          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    CARACTER        reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    MENOS           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    NOT             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    CORIZQ          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    I64             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    F64             reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    BOOL            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    STRING          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    USIZE           reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    SIGNOI          reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 91 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 91 (continue -> CONTINUE PTCOMA .)


state 107

    (129) expresion -> MENOS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 129 (expresion -> MENOS expresion .)
    MAS             reduce using rule 129 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 129 (expresion -> MENOS expresion .)
    POR             reduce using rule 129 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 129 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 129 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 129 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 129 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 129 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 129 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 129 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 129 (expresion -> MENOS expresion .)
    OR              reduce using rule 129 (expresion -> MENOS expresion .)
    AND             reduce using rule 129 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 129 (expresion -> MENOS expresion .)
    AS              reduce using rule 129 (expresion -> MENOS expresion .)
    CONTAINS        reduce using rule 129 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 129 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 129 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 129 (expresion -> MENOS expresion .)
    COMA            reduce using rule 129 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 129 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 129 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 129 (expresion -> MENOS expresion .)

  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 108

    (27) expresion -> VVEC DOSPT . DOSPT NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT . DOSPT WITH_CAPACITY PARIZQ expresion PARDER

    DOSPT           shift and go to state 168


state 109

    (87) forin -> FOR ID . IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> FOR ID . IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    IN              shift and go to state 169


state 110

    (26) expresion -> VEC NOT . CORIZQ expresiones CORDER

    CORIZQ          shift and go to state 170


state 111

    (133) expresion -> CORIZQ expresiones . CORDER
    (100) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 171
    COMA            shift and go to state 172


state 112

    (101) expresiones -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 101 (expresiones -> expresion .)
    COMA            reduce using rule 101 (expresiones -> expresion .)
    PARDER          reduce using rule 101 (expresiones -> expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 113

    (99) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 99 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 99 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 99 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 99 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 99 (tipo -> SIGNOI STR .)
    MAYORQUE        reduce using rule 99 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 99 (tipo -> SIGNOI STR .)


state 114

    (109) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (110) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 173
    TOOWNED         shift and go to state 174


state 115

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 116

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 175


state 117

    (40) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) lparametros -> . lparametros COMA lparame
    (45) lparametros -> . lparame
    (46) lparame -> . ID DOSPT tipo
    (47) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    PARDER          shift and go to state 178
    ID              shift and go to state 176

    lparametros                    shift and go to state 177
    lparame                        shift and go to state 179

state 118

    (131) expresion -> PARIZQ expresion PARDER .

    PTO             reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    AS              reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    CONTAINS        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 131 (expresion -> PARIZQ expresion PARDER .)


state 119

    (161) expresion -> PARIZQ expresion AS . tipo PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 180

state 120

    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (163) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (164) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    CAPACITY        shift and go to state 143
    REMOVE          shift and go to state 181
    LEN             shift and go to state 144
    ABS             shift and go to state 145
    SQRT            shift and go to state 146
    CLONE           shift and go to state 147


state 121

    (134) expresion -> ID lindices .
    (135) lindices -> lindices . CORIZQ expresion CORDER

    PARDER          reduce using rule 134 (expresion -> ID lindices .)
    AS              reduce using rule 134 (expresion -> ID lindices .)
    PTO             reduce using rule 134 (expresion -> ID lindices .)
    MAS             reduce using rule 134 (expresion -> ID lindices .)
    MENOS           reduce using rule 134 (expresion -> ID lindices .)
    POR             reduce using rule 134 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 134 (expresion -> ID lindices .)
    MODULO          reduce using rule 134 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 134 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 134 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    OR              reduce using rule 134 (expresion -> ID lindices .)
    AND             reduce using rule 134 (expresion -> ID lindices .)
    CONTAINS        reduce using rule 134 (expresion -> ID lindices .)
    LLAVEIZQ        reduce using rule 134 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 134 (expresion -> ID lindices .)
    CORDER          reduce using rule 134 (expresion -> ID lindices .)
    COMA            reduce using rule 134 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 134 (expresion -> ID lindices .)
    IGUAL           reduce using rule 134 (expresion -> ID lindices .)
    BARRAS          reduce using rule 134 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 132


state 122

    (133) expresion -> CORIZQ . expresiones CORDER
    (136) lindices -> CORIZQ . expresion CORDER
    (100) expresiones -> . expresiones COMA expresion
    (101) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresiones                    shift and go to state 111
    expresion                      shift and go to state 182
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 123

    (138) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 183
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 124

    (149) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 184
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 125

    (160) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 185
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 126

    (56) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID . DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    DOSPT           shift and go to state 186
    IGUAL           shift and go to state 187


state 127

    (58) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (25) declaracion_vector -> LET ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    VVEC            shift and go to state 189
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 188

state 128

    (59) declaracion -> LET ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 190
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 129

    (60) asignacion -> ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 191
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 130

    (36) expresion -> ID expresion CONTAINS . PARIZQ SIGNOI expresion PARDER

    PARIZQ          shift and go to state 192


state 131

    (61) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 193
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 132

    (135) lindices -> lindices CORIZQ . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 194
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 133

    (48) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (50) largumentos -> largumentos . COMA largumento

    PARDER          shift and go to state 195
    COMA            shift and go to state 196


state 134

    (49) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    AS              reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    CONTAINS        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 49 (llamada_funciones -> ID PARIZQ PARDER .)


state 135

    (131) expresion -> PARIZQ expresion . PARDER
    (161) expresion -> PARIZQ expresion . AS tipo PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (52) largumento -> expresion .
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 118
    AS              shift and go to state 119
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96
    COMA            reduce using rule 52 (largumento -> expresion .)

  ! PARDER          [ reduce using rule 52 (largumento -> expresion .) ]


state 136

    (51) largumentos -> largumento .

    PARDER          reduce using rule 51 (largumentos -> largumento .)
    COMA            reduce using rule 51 (largumentos -> largumento .)


state 137

    (53) largumento -> SIGNOI . MUT expresion
    (99) tipo -> SIGNOI . STR

    MUT             shift and go to state 197
    STR             shift and go to state 113


state 138

    (136) lindices -> CORIZQ expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (101) expresiones -> expresion .
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for CORDER resolved as shift
    CORDER          shift and go to state 198
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96
    COMA            reduce using rule 101 (expresiones -> expresion .)

  ! CORDER          [ reduce using rule 101 (expresiones -> expresion .) ]


state 139

    (119) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 199
    POWF            shift and go to state 200


state 140

    (32) nativas_vector -> expresion PTO PUSH . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 201


state 141

    (33) nativas_vector -> expresion PTO INSERT . PARIZQ expresion COMA expresion PARDER PTCOMA

    PARIZQ          shift and go to state 202


state 142

    (34) nativas_vector -> expresion PTO REMOVE . PARIZQ expresion PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 203


state 143

    (31) expresion -> expresion PTO CAPACITY . PARIZQ PARDER

    PARIZQ          shift and go to state 204


state 144

    (30) nativas_vec -> expresion PTO LEN . PARIZQ PARDER

    PARIZQ          shift and go to state 205


state 145

    (163) nativas_fun -> expresion PTO ABS . PARIZQ PARDER

    PARIZQ          shift and go to state 206


state 146

    (164) nativas_fun -> expresion PTO SQRT . PARIZQ PARDER

    PARIZQ          shift and go to state 207


state 147

    (165) nativas_fun -> expresion PTO CLONE . PARIZQ PARDER

    PARIZQ          shift and go to state 208


state 148

    (114) expresion -> expresion MAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 114 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 114 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 114 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 114 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 114 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 114 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 114 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 114 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 114 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 114 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 114 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 114 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 114 (expresion -> expresion MAS expresion .)
    CONTAINS        reduce using rule 114 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 114 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 114 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 114 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 114 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 114 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 114 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 114 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! POR             [ reduce using rule 114 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 114 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 114 (expresion -> expresion MAS expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 149

    (115) expresion -> expresion MENOS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 115 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 115 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 115 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 115 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 115 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 115 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 115 (expresion -> expresion MENOS expresion .)
    CONTAINS        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 115 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 115 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 115 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 115 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 115 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 115 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! POR             [ reduce using rule 115 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 115 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 115 (expresion -> expresion MENOS expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 150

    (116) expresion -> expresion POR expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 116 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 116 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 116 (expresion -> expresion POR expresion .)
    POR             reduce using rule 116 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 116 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 116 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 116 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 116 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 116 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 116 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 116 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 116 (expresion -> expresion POR expresion .)
    OR              reduce using rule 116 (expresion -> expresion POR expresion .)
    AND             reduce using rule 116 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 116 (expresion -> expresion POR expresion .)
    AS              reduce using rule 116 (expresion -> expresion POR expresion .)
    CONTAINS        reduce using rule 116 (expresion -> expresion POR expresion .)
    LLAVEIZQ        reduce using rule 116 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 116 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 116 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 116 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 116 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 116 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 116 (expresion -> expresion POR expresion .)

  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 151

    (117) expresion -> expresion DIVIDIDO expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    AS              reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    CONTAINS        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEIZQ        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 117 (expresion -> expresion DIVIDIDO expresion .)

  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 152

    (118) expresion -> expresion MODULO expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 118 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 118 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 118 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 118 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 118 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 118 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 118 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 118 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 118 (expresion -> expresion MODULO expresion .)
    CONTAINS        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 118 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 118 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 118 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 118 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 118 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 118 (expresion -> expresion MODULO expresion .)

  ! PTO             [ shift and go to state 120 ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIVIDIDO        [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 153

    (121) expresion -> expresion IGUALQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    AS              reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    CONTAINS        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    LLAVEIZQ        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 121 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 121 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 121 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 121 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 121 (expresion -> expresion IGUALQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 154

    (122) expresion -> expresion NOIGUALQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    AS              reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    CONTAINS        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEIZQ        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 122 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 155

    (123) expresion -> expresion MENORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    AS              reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    CONTAINS        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    LLAVEIZQ        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 123 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 123 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 123 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 123 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 123 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 123 (expresion -> expresion MENORQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 156

    (124) expresion -> expresion MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    AS              reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    CONTAINS        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    LLAVEIZQ        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 124 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 124 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 124 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 124 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 124 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 124 (expresion -> expresion MAYORQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 157

    (125) expresion -> expresion MENORIQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    AS              reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    CONTAINS        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    LLAVEIZQ        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 125 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 125 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 125 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 125 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 125 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 125 (expresion -> expresion MENORIQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 158

    (126) expresion -> expresion MAYORIQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    AS              reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    CONTAINS        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEIZQ        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88

  ! MAS             [ reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 126 (expresion -> expresion MAYORIQUE expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! IGUALQUE        [ shift and go to state 89 ]
  ! NOIGUALQUE      [ shift and go to state 90 ]
  ! MENORQUE        [ shift and go to state 91 ]
  ! MAYORQUE        [ shift and go to state 92 ]
  ! MENORIQUE       [ shift and go to state 93 ]
  ! MAYORIQUE       [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 159

    (127) expresion -> expresion OR expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 127 (expresion -> expresion OR expresion .)
    OR              reduce using rule 127 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 127 (expresion -> expresion OR expresion .)
    AS              reduce using rule 127 (expresion -> expresion OR expresion .)
    CONTAINS        reduce using rule 127 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 127 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 127 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 127 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 127 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 127 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 127 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 127 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    AND             shift and go to state 96

  ! MAS             [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 127 (expresion -> expresion OR expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! OR              [ shift and go to state 95 ]


state 160

    (128) expresion -> expresion AND expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             reduce using rule 128 (expresion -> expresion AND expresion .)
    OR              reduce using rule 128 (expresion -> expresion AND expresion .)
    AND             reduce using rule 128 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 128 (expresion -> expresion AND expresion .)
    AS              reduce using rule 128 (expresion -> expresion AND expresion .)
    CONTAINS        reduce using rule 128 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 128 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 128 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 128 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 128 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 128 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 128 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 128 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94

  ! MAS             [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 128 (expresion -> expresion AND expresion .) ]
  ! PTO             [ shift and go to state 120 ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 161

    (54) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 209
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 162

    (62) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (63) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (64) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (65) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (138) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (139) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 213
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 210
    instrucciones                  shift and go to state 211
    bloque_expresion               shift and go to state 212
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 163

    (70) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (149) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (71) imatch -> . opmatch COMA dmatch
    (150) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (72) opmatch -> . opmatch COMA cmatch
    (73) opmatch -> . opmatch COMA rmatch
    (74) opmatch -> . cmatch
    (75) opmatch -> . rmatch
    (153) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (154) opmatch_asig -> . cmatch_asig
    (76) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (77) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (82) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (155) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (78) bloque_match -> . bloque_match BARRAS expresion
    (79) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (157) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (158) bloque_match_asig -> . expresion
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 214
    imatch                         shift and go to state 215
    imatch_asig                    shift and go to state 216
    opmatch                        shift and go to state 217
    opmatch_asig                   shift and go to state 218
    cmatch                         shift and go to state 219
    rmatch                         shift and go to state 220
    cmatch_asig                    shift and go to state 221
    bloque_match                   shift and go to state 222
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 164

    (85) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (160) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 224
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 165

    (86) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 225
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 166

    (90) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    FOR             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    VEC             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    VVEC            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    ENTERO          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    DECIMAL         reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    TRUE            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    FALSE           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    STR             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    CADENA          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    CARACTER        reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    MENOS           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    NOT             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    PARIZQ          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    CORIZQ          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    I64             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    F64             reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    BOOL            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    CHAR            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    STRING          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    USIZE           reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    SIGNOI          reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 90 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 90 (break -> BREAK expresion PTCOMA .)


state 167

    (92) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    VEC             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    VVEC            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    ENTERO          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    DECIMAL         reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    TRUE            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    FALSE           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    STR             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    CADENA          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    CARACTER        reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    MENOS           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    NOT             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    PARIZQ          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    CORIZQ          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    I64             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    F64             reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    BOOL            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    CHAR            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    STRING          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    USIZE           reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    SIGNOI          reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 92 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 92 (return -> RETURN expresion PTCOMA .)


state 168

    (27) expresion -> VVEC DOSPT DOSPT . NEW PARIZQ PARDER
    (28) expresion -> VVEC DOSPT DOSPT . WITH_CAPACITY PARIZQ expresion PARDER

    NEW             shift and go to state 226
    WITH_CAPACITY   shift and go to state 227


state 169

    (87) forin -> FOR ID IN . expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> FOR ID IN . expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 228
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 170

    (26) expresion -> VEC NOT CORIZQ . expresiones CORDER
    (100) expresiones -> . expresiones COMA expresion
    (101) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresiones                    shift and go to state 229
    expresion                      shift and go to state 112
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 171

    (133) expresion -> CORIZQ expresiones CORDER .

    PTO             reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    AS              reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    CONTAINS        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEIZQ        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 133 (expresion -> CORIZQ expresiones CORDER .)


state 172

    (100) expresiones -> expresiones COMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 230
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 173

    (109) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 231


state 174

    (110) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 232


state 175

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 233


state 176

    (46) lparame -> ID . DOSPT tipo
    (47) lparame -> ID . DOSPT SIGNOI MUT tipo_arreglo

    DOSPT           shift and go to state 234


state 177

    (40) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (44) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 235
    COMA            shift and go to state 236


state 178

    (41) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 237
    LLAVEIZQ        shift and go to state 238


state 179

    (45) lparametros -> lparame .

    PARDER          reduce using rule 45 (lparametros -> lparame .)
    COMA            reduce using rule 45 (lparametros -> lparame .)


state 180

    (161) expresion -> PARIZQ expresion AS tipo . PARDER

    PARDER          shift and go to state 239


state 181

    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 240


state 182

    (136) lindices -> CORIZQ expresion . CORDER
    (101) expresiones -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for CORDER resolved as shift
    CORDER          shift and go to state 198
    COMA            reduce using rule 101 (expresiones -> expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96

  ! CORDER          [ reduce using rule 101 (expresiones -> expresion .) ]


state 183

    (138) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (139) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (140) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (141) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 241
    bloque_expresion               shift and go to state 212
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 184

    (149) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (150) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (153) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (154) opmatch_asig -> . cmatch_asig
    (155) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (157) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (158) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 242
    imatch_asig                    shift and go to state 216
    opmatch_asig                   shift and go to state 218
    cmatch_asig                    shift and go to state 221
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 185

    (160) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 243
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 186

    (56) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (37) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> LET MUT ID DOSPT . VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (38) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (39) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    VVEC            shift and go to state 246
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    CORIZQ          shift and go to state 247

    tipo                           shift and go to state 244
    tipo_arreglo                   shift and go to state 245

state 187

    (57) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 248
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 188

    (58) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 249


state 189

    (25) declaracion_vector -> LET ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 250


state 190

    (59) declaracion -> LET ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 251
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 191

    (60) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 60 (asignacion -> ID IGUAL expresion PTCOMA .)


state 192

    (36) expresion -> ID expresion CONTAINS PARIZQ . SIGNOI expresion PARDER

    SIGNOI          shift and go to state 252


state 193

    (61) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 253
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 194

    (135) lindices -> lindices CORIZQ expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 254
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 195

    (48) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AS              reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CONTAINS        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 48 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 196

    (50) largumentos -> largumentos COMA . largumento
    (52) largumento -> . expresion
    (53) largumento -> . SIGNOI MUT expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    SIGNOI          shift and go to state 137
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    largumento                     shift and go to state 255
    expresion                      shift and go to state 256
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 197

    (53) largumento -> SIGNOI MUT . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 257
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 198

    (136) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    CONTAINS        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    AS              reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 136 (lindices -> CORIZQ expresion CORDER .)


state 199

    (119) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 258


state 200

    (120) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 259


state 201

    (32) nativas_vector -> expresion PTO PUSH PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 260
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 202

    (33) nativas_vector -> expresion PTO INSERT PARIZQ . expresion COMA expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 261
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 203

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ . expresion PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 262
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 204

    (31) expresion -> expresion PTO CAPACITY PARIZQ . PARDER

    PARDER          shift and go to state 263


state 205

    (30) nativas_vec -> expresion PTO LEN PARIZQ . PARDER

    PARDER          shift and go to state 264


state 206

    (163) nativas_fun -> expresion PTO ABS PARIZQ . PARDER

    PARDER          shift and go to state 265


state 207

    (164) nativas_fun -> expresion PTO SQRT PARIZQ . PARDER

    PARDER          shift and go to state 266


state 208

    (165) nativas_fun -> expresion PTO CLONE PARIZQ . PARDER

    PARDER          shift and go to state 267


state 209

    (54) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (55) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 268
    PARDER          shift and go to state 269
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 210

    (147) bloque_expresion -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (32) nativas_vector -> expresion . PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion . PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion . PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 147 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 147 (bloque_expresion -> expresion .)
    PTO             shift and go to state 270
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 211

    (62) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (63) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (64) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (65) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 271
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 212

    (138) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (140) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (146) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 272
    PTCOMA          shift and go to state 273


state 213

    (36) expresion -> ID . expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> ID .
    (134) expresion -> ID . lindices
    (60) asignacion -> ID . IGUAL expresion PTCOMA
    (61) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (48) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (49) llamada_funciones -> ID . PARIZQ PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (135) lindices -> . lindices CORIZQ expresion CORDER
    (136) lindices -> . CORIZQ expresion CORDER
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

  ! shift/reduce conflict for MENOS resolved as shift
    PTO             reduce using rule 102 (expresion -> ID .)
    MAS             reduce using rule 102 (expresion -> ID .)
    POR             reduce using rule 102 (expresion -> ID .)
    DIVIDIDO        reduce using rule 102 (expresion -> ID .)
    MODULO          reduce using rule 102 (expresion -> ID .)
    IGUALQUE        reduce using rule 102 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 102 (expresion -> ID .)
    MENORQUE        reduce using rule 102 (expresion -> ID .)
    MAYORQUE        reduce using rule 102 (expresion -> ID .)
    MENORIQUE       reduce using rule 102 (expresion -> ID .)
    MAYORIQUE       reduce using rule 102 (expresion -> ID .)
    OR              reduce using rule 102 (expresion -> ID .)
    AND             reduce using rule 102 (expresion -> ID .)
    LLAVEDER        reduce using rule 102 (expresion -> ID .)
    PTCOMA          reduce using rule 102 (expresion -> ID .)
    IGUAL           shift and go to state 77
    PARIZQ          shift and go to state 80
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    CORIZQ          shift and go to state 122
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

  ! MENOS           [ reduce using rule 102 (expresion -> ID .) ]

    expresion                      shift and go to state 78
    lindices                       shift and go to state 274
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 214

    (82) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (79) bloque_match -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (158) bloque_match_asig -> expresion .
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

  ! reduce/reduce conflict for IGUAL resolved using rule 79 (bloque_match -> expresion .)
  ! reduce/reduce conflict for BARRAS resolved using rule 79 (bloque_match -> expresion .)
    PTO             shift and go to state 275
    IGUAL           reduce using rule 79 (bloque_match -> expresion .)
    BARRAS          reduce using rule 79 (bloque_match -> expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96

  ! IGUAL           [ reduce using rule 158 (bloque_match_asig -> expresion .) ]
  ! BARRAS          [ reduce using rule 158 (bloque_match_asig -> expresion .) ]


state 215

    (70) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 276


state 216

    (149) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 277


state 217

    (71) imatch -> opmatch . COMA dmatch
    (72) opmatch -> opmatch . COMA cmatch
    (73) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 278


state 218

    (150) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (153) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 279


state 219

    (74) opmatch -> cmatch .

    COMA            reduce using rule 74 (opmatch -> cmatch .)


state 220

    (75) opmatch -> rmatch .

    COMA            reduce using rule 75 (opmatch -> rmatch .)


state 221

    (154) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 154 (opmatch_asig -> cmatch_asig .)


state 222

    (76) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (77) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (78) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 280
    BARRAS          shift and go to state 281


state 223

    (155) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (157) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 282
    BARRAS          shift and go to state 283


state 224

    (85) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .
    (160) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

  ! reduce/reduce conflict for MENOS resolved using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 85 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)

  ! MENOS           [ reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .) ]
  ! LLAVEDER        [ reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .) ]


state 225

    (86) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 284
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 226

    (27) expresion -> VVEC DOSPT DOSPT NEW . PARIZQ PARDER

    PARIZQ          shift and go to state 285


state 227

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 286


state 228

    (87) forin -> FOR ID IN expresion . LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> FOR ID IN expresion . PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 287
    PTO             shift and go to state 288
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 229

    (26) expresion -> VEC NOT CORIZQ expresiones . CORDER
    (100) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 289
    COMA            shift and go to state 172


state 230

    (100) expresiones -> expresiones COMA expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 100 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 100 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 100 (expresiones -> expresiones COMA expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 231

    (109) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 290


state 232

    (110) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 291


state 233

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 292
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 234

    (46) lparame -> ID DOSPT . tipo
    (47) lparame -> ID DOSPT . SIGNOI MUT tipo_arreglo
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    SIGNOI          shift and go to state 294
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61

    tipo                           shift and go to state 293

state 235

    (40) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 295
    LLAVEIZQ        shift and go to state 296


state 236

    (44) lparametros -> lparametros COMA . lparame
    (46) lparame -> . ID DOSPT tipo
    (47) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    ID              shift and go to state 176

    lparame                        shift and go to state 297

state 237

    (41) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 298


state 238

    (43) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 299
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 239

    (161) expresion -> PARIZQ expresion AS tipo PARDER .

    PTO             reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAS             reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENOS           reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    POR             reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    DIVIDIDO        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MODULO          reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUALQUE        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    NOIGUALQUE      reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORQUE        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORQUE        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORIQUE       reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORIQUE       reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    OR              reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AND             reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PARDER          reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AS              reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    CONTAINS        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    LLAVEIZQ        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PTCOMA          reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    CORDER          reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    COMA            reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    LLAVEDER        reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUAL           reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)
    BARRAS          reduce using rule 161 (expresion -> PARIZQ expresion AS tipo PARDER .)


state 240

    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 300
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 241

    (147) bloque_expresion -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 147 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 147 (bloque_expresion -> expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 242

    (158) bloque_match_asig -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 158 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 158 (bloque_match_asig -> expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 243

    (160) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    PARDER          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTAINS        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 160 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 244

    (56) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 301


state 245

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 302


state 246

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC . MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA

    MENORQUE        shift and go to state 303


state 247

    (38) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (39) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (38) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (39) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 247
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo_arreglo                   shift and go to state 304
    tipo                           shift and go to state 305

state 248

    (57) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 306
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 249

    (58) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 307
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 250

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 308

state 251

    (59) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 59 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 252

    (36) expresion -> ID expresion CONTAINS PARIZQ SIGNOI . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 309
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 253

    (61) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FOR             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    VEC             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    STR             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    NOT             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    I64             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    F64             reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    STRING          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 61 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 254

    (135) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    CONTAINS        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    AS              reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 135 (lindices -> lindices CORIZQ expresion CORDER .)


state 255

    (50) largumentos -> largumentos COMA largumento .

    PARDER          reduce using rule 50 (largumentos -> largumentos COMA largumento .)
    COMA            reduce using rule 50 (largumentos -> largumentos COMA largumento .)


state 256

    (52) largumento -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 52 (largumento -> expresion .)
    COMA            reduce using rule 52 (largumento -> expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 257

    (53) largumento -> SIGNOI MUT expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 53 (largumento -> SIGNOI MUT expresion .)
    COMA            reduce using rule 53 (largumento -> SIGNOI MUT expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 258

    (119) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 310
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 259

    (120) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 311
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 260

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 312
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 261

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion . COMA expresion PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 313
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 262

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion . PARDER PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 314
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 263

    (31) expresion -> expresion PTO CAPACITY PARIZQ PARDER .

    PTO             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAS             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENOS           reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    POR             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MODULO          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    IGUALQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENORQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAYORQUE        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MENORIQUE       reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    OR              reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    AND             reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    PARDER          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    AS              reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    CONTAINS        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    PTCOMA          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    CORDER          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    COMA            reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    LLAVEDER        reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    IGUAL           reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)
    BARRAS          reduce using rule 31 (expresion -> expresion PTO CAPACITY PARIZQ PARDER .)


state 264

    (30) nativas_vec -> expresion PTO LEN PARIZQ PARDER .

    PTO             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAS             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENOS           reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    POR             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MODULO          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    IGUALQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENORQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAYORQUE        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MENORIQUE       reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    OR              reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    AND             reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    PARDER          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    AS              reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    CONTAINS        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    PTCOMA          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    CORDER          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    COMA            reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    IGUAL           reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)
    BARRAS          reduce using rule 30 (nativas_vec -> expresion PTO LEN PARIZQ PARDER .)


state 265

    (163) nativas_fun -> expresion PTO ABS PARIZQ PARDER .

    PTO             reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAS             reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENOS           reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    POR             reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MODULO          reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUALQUE        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORQUE        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORQUE        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORIQUE       reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    OR              reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AND             reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PARDER          reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AS              reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    CONTAINS        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PTCOMA          reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    CORDER          reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    COMA            reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    LLAVEDER        reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUAL           reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    BARRAS          reduce using rule 163 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)


state 266

    (164) nativas_fun -> expresion PTO SQRT PARIZQ PARDER .

    PTO             reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAS             reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENOS           reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    POR             reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MODULO          reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUALQUE        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORQUE        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORQUE        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORIQUE       reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    OR              reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AND             reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PARDER          reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AS              reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    CONTAINS        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PTCOMA          reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    CORDER          reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    COMA            reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    LLAVEDER        reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUAL           reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    BARRAS          reduce using rule 164 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)


state 267

    (165) nativas_fun -> expresion PTO CLONE PARIZQ PARDER .

    PTO             reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAS             reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENOS           reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    POR             reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MODULO          reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUALQUE        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORQUE        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORIQUE       reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    OR              reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AND             reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PARDER          reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AS              reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    CONTAINS        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PTCOMA          reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    CORDER          reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    COMA            reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUAL           reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    BARRAS          reduce using rule 165 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)


state 268

    (54) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (100) expresiones -> . expresiones COMA expresion
    (101) expresiones -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 112
    expresiones                    shift and go to state 315
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 269

    (55) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 316


state 270

    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (32) nativas_vector -> expresion PTO . PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> expresion PTO . INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> expresion PTO . REMOVE PARIZQ expresion PARDER PTCOMA
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (163) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (164) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    CAPACITY        shift and go to state 143
    REMOVE          shift and go to state 317
    PUSH            shift and go to state 140
    INSERT          shift and go to state 141
    LEN             shift and go to state 144
    ABS             shift and go to state 145
    SQRT            shift and go to state 146
    CLONE           shift and go to state 147


state 271

    (62) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (63) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (64) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (65) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (69) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (66) lelseif -> . lelseif elseif
    (67) lelseif -> . elseif
    (68) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 62 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 320

    else                           shift and go to state 318
    lelseif                        shift and go to state 319
    elseif                         shift and go to state 321

state 272

    (138) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (140) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (145) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (142) elseifa -> . elseifa lif
    (143) elseifa -> . lif
    (144) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    PTO             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CONTAINS        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 138 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 324

    elsea                          shift and go to state 322
    elseifa                        shift and go to state 323
    lif                            shift and go to state 325

state 273

    (146) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 326
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 274

    (134) expresion -> ID lindices .
    (61) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (135) lindices -> lindices . CORIZQ expresion CORDER

    PTO             reduce using rule 134 (expresion -> ID lindices .)
    MAS             reduce using rule 134 (expresion -> ID lindices .)
    MENOS           reduce using rule 134 (expresion -> ID lindices .)
    POR             reduce using rule 134 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 134 (expresion -> ID lindices .)
    MODULO          reduce using rule 134 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 134 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 134 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 134 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 134 (expresion -> ID lindices .)
    OR              reduce using rule 134 (expresion -> ID lindices .)
    AND             reduce using rule 134 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 134 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 134 (expresion -> ID lindices .)
    IGUAL           shift and go to state 131
    CORIZQ          shift and go to state 132


state 275

    (82) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (163) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (164) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PTO             shift and go to state 327
    CAPACITY        shift and go to state 143
    REMOVE          shift and go to state 181
    LEN             shift and go to state 144
    ABS             shift and go to state 145
    SQRT            shift and go to state 146
    CLONE           shift and go to state 147


state 276

    (70) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FOR             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    VEC             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    VVEC            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ENTERO          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    DECIMAL         reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    TRUE            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FALSE           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    STR             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CADENA          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CARACTER        reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MENOS           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    NOT             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PARIZQ          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CORIZQ          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    I64             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    F64             reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BOOL            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CHAR            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    STRING          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    USIZE           reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    SIGNOI          reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 70 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 277

    (149) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    PTO             reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AS              reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CONTAINS        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEIZQ        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 149 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 278

    (71) imatch -> opmatch COMA . dmatch
    (72) opmatch -> opmatch COMA . cmatch
    (73) opmatch -> opmatch COMA . rmatch
    (80) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (81) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (76) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (77) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (82) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (78) bloque_match -> . bloque_match BARRAS expresion
    (79) bloque_match -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 331
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    dmatch                         shift and go to state 328
    cmatch                         shift and go to state 329
    rmatch                         shift and go to state 330
    bloque_match                   shift and go to state 222
    expresion                      shift and go to state 332
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 279

    (150) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (153) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (151) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (152) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (155) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (157) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (158) bloque_match_asig -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 335
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    dmatch_asig                    shift and go to state 333
    cmatch_asig                    shift and go to state 334
    expresion                      shift and go to state 242
    bloque_match_asig              shift and go to state 223
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 280

    (76) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (77) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 336


state 281

    (78) bloque_match -> bloque_match BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 337
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 282

    (155) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 338


state 283

    (157) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 339
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 284

    (86) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 86 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 285

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ . PARDER

    PARDER          shift and go to state 340


state 286

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 341
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 287

    (87) forin -> FOR ID IN expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 342
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 288

    (88) forin -> FOR ID IN expresion PTO . PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion PTO . CAPACITY PARIZQ PARDER
    (35) expresion -> expresion PTO . REMOVE PARIZQ expresion PARDER
    (30) nativas_vec -> expresion PTO . LEN PARIZQ PARDER
    (163) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (164) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    PTO             shift and go to state 343
    CAPACITY        shift and go to state 143
    REMOVE          shift and go to state 181
    LEN             shift and go to state 144
    ABS             shift and go to state 145
    SQRT            shift and go to state 146
    CLONE           shift and go to state 147


state 289

    (26) expresion -> VEC NOT CORIZQ expresiones CORDER .

    PTO             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAS             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    POR             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    OR              reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AND             reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    AS              reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    CONTAINS        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEIZQ        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    COMA            reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 26 (expresion -> VEC NOT CORIZQ expresiones CORDER .)


state 290

    (109) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    PTO             reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AS              reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CONTAINS        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 109 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 291

    (110) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    PTO             reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AS              reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CONTAINS        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 110 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 292

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 344
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 293

    (46) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 46 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 46 (lparame -> ID DOSPT tipo .)


state 294

    (47) lparame -> ID DOSPT SIGNOI . MUT tipo_arreglo
    (99) tipo -> SIGNOI . STR

    MUT             shift and go to state 345
    STR             shift and go to state 113


state 295

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 346


state 296

    (42) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 347
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 297

    (44) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 44 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 44 (lparametros -> lparametros COMA lparame .)


state 298

    (41) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 348

state 299

    (43) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 349
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 300

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 350
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 301

    (56) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 351
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 302

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 352
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 303

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE . tipo MAYORQUE IGUAL expresion PTCOMA
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 353

state 304

    (38) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 354


state 305

    (39) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 355


state 306

    (57) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    VEC             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    STR             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    NOT             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    I64             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    F64             reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    STRING          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 57 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 307

    (58) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 356
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 308

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 357


state 309

    (36) expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 358
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 310

    (119) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 359
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 311

    (120) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 360
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 312

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 361


state 313

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 362
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 314

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER . PTCOMA
    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .

    PTCOMA          shift and go to state 363
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)


state 315

    (54) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (100) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 364
    COMA            shift and go to state 172


state 316

    (55) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 55 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 317

    (35) expresion -> expresion PTO REMOVE . PARIZQ expresion PARDER
    (34) nativas_vector -> expresion PTO REMOVE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 365


state 318

    (63) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FOR             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    VEC             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    VVEC            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ENTERO          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    DECIMAL         reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    TRUE            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FALSE           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    STR             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CADENA          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CARACTER        reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MENOS           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    NOT             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PARIZQ          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CORIZQ          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    I64             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    F64             reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BOOL            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CHAR            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    STRING          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    USIZE           reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    SIGNOI          reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 63 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 319

    (64) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (65) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (66) lelseif -> lelseif . elseif
    (69) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (68) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FOR             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    VEC             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    VVEC            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ENTERO          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    DECIMAL         reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    TRUE            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FALSE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    STR             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CADENA          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CARACTER        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MENOS           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    NOT             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PARIZQ          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CORIZQ          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    I64             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    F64             reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BOOL            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CHAR            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    STRING          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    USIZE           reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    SIGNOI          reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 64 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 320

    else                           shift and go to state 366
    elseif                         shift and go to state 367

state 320

    (69) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (68) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 368
    IF              shift and go to state 369


state 321

    (67) lelseif -> elseif .

    ELSE            reduce using rule 67 (lelseif -> elseif .)
    FN              reduce using rule 67 (lelseif -> elseif .)
    LET             reduce using rule 67 (lelseif -> elseif .)
    PRINTLN         reduce using rule 67 (lelseif -> elseif .)
    ID              reduce using rule 67 (lelseif -> elseif .)
    IF              reduce using rule 67 (lelseif -> elseif .)
    MATCH           reduce using rule 67 (lelseif -> elseif .)
    LOOP            reduce using rule 67 (lelseif -> elseif .)
    WHILE           reduce using rule 67 (lelseif -> elseif .)
    BREAK           reduce using rule 67 (lelseif -> elseif .)
    RETURN          reduce using rule 67 (lelseif -> elseif .)
    CONTINUE        reduce using rule 67 (lelseif -> elseif .)
    FOR             reduce using rule 67 (lelseif -> elseif .)
    VEC             reduce using rule 67 (lelseif -> elseif .)
    VVEC            reduce using rule 67 (lelseif -> elseif .)
    ENTERO          reduce using rule 67 (lelseif -> elseif .)
    DECIMAL         reduce using rule 67 (lelseif -> elseif .)
    TRUE            reduce using rule 67 (lelseif -> elseif .)
    FALSE           reduce using rule 67 (lelseif -> elseif .)
    STR             reduce using rule 67 (lelseif -> elseif .)
    CADENA          reduce using rule 67 (lelseif -> elseif .)
    CARACTER        reduce using rule 67 (lelseif -> elseif .)
    MENOS           reduce using rule 67 (lelseif -> elseif .)
    NOT             reduce using rule 67 (lelseif -> elseif .)
    PARIZQ          reduce using rule 67 (lelseif -> elseif .)
    CORIZQ          reduce using rule 67 (lelseif -> elseif .)
    I64             reduce using rule 67 (lelseif -> elseif .)
    F64             reduce using rule 67 (lelseif -> elseif .)
    BOOL            reduce using rule 67 (lelseif -> elseif .)
    CHAR            reduce using rule 67 (lelseif -> elseif .)
    STRING          reduce using rule 67 (lelseif -> elseif .)
    USIZE           reduce using rule 67 (lelseif -> elseif .)
    SIGNOI          reduce using rule 67 (lelseif -> elseif .)
    $end            reduce using rule 67 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 67 (lelseif -> elseif .)
    COMA            reduce using rule 67 (lelseif -> elseif .)


state 322

    (139) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    PTO             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AS              reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CONTAINS        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEIZQ        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 139 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 323

    (140) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (142) elseifa -> elseifa . lif
    (145) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (144) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    PTO             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AS              reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CONTAINS        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEIZQ        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 140 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 324

    elsea                          shift and go to state 370
    lif                            shift and go to state 371

state 324

    (145) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (144) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 372
    IF              shift and go to state 373


state 325

    (143) elseifa -> lif .

    ELSE            reduce using rule 143 (elseifa -> lif .)
    PTO             reduce using rule 143 (elseifa -> lif .)
    MAS             reduce using rule 143 (elseifa -> lif .)
    MENOS           reduce using rule 143 (elseifa -> lif .)
    POR             reduce using rule 143 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 143 (elseifa -> lif .)
    MODULO          reduce using rule 143 (elseifa -> lif .)
    IGUALQUE        reduce using rule 143 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 143 (elseifa -> lif .)
    MENORQUE        reduce using rule 143 (elseifa -> lif .)
    MAYORQUE        reduce using rule 143 (elseifa -> lif .)
    MENORIQUE       reduce using rule 143 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 143 (elseifa -> lif .)
    OR              reduce using rule 143 (elseifa -> lif .)
    AND             reduce using rule 143 (elseifa -> lif .)
    PARDER          reduce using rule 143 (elseifa -> lif .)
    AS              reduce using rule 143 (elseifa -> lif .)
    CONTAINS        reduce using rule 143 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 143 (elseifa -> lif .)
    PTCOMA          reduce using rule 143 (elseifa -> lif .)
    CORDER          reduce using rule 143 (elseifa -> lif .)
    COMA            reduce using rule 143 (elseifa -> lif .)
    LLAVEDER        reduce using rule 143 (elseifa -> lif .)
    IGUAL           reduce using rule 143 (elseifa -> lif .)
    BARRAS          reduce using rule 143 (elseifa -> lif .)


state 326

    (146) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 146 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 146 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 327

    (82) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 374


state 328

    (71) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 71 (imatch -> opmatch COMA dmatch .)


state 329

    (72) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 72 (opmatch -> opmatch COMA cmatch .)


state 330

    (73) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 73 (opmatch -> opmatch COMA rmatch .)


state 331

    (80) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (81) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 375


state 332

    (82) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (79) bloque_match -> expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTO             shift and go to state 275
    IGUAL           reduce using rule 79 (bloque_match -> expresion .)
    BARRAS          reduce using rule 79 (bloque_match -> expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 333

    (150) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 150 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 334

    (153) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 153 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 335

    (151) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (152) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 376


state 336

    (76) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (77) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 377
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 378
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 337

    (78) bloque_match -> bloque_match BARRAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 78 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 78 (bloque_match -> bloque_match BARRAS expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 338

    (155) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (156) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 379
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 380
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 339

    (157) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 157 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 157 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 340

    (27) expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .

    PTO             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAS             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENOS           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    POR             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MODULO          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUALQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORQUE        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MENORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    OR              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AND             reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PARDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    AS              reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    CONTAINS        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    PTCOMA          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    CORDER          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    COMA            reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    LLAVEDER        reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    IGUAL           reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)
    BARRAS          reduce using rule 27 (expresion -> VVEC DOSPT DOSPT NEW PARIZQ PARDER .)


state 341

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 381
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 342

    (87) forin -> FOR ID IN expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 382
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 343

    (88) forin -> FOR ID IN expresion PTO PTO . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 383
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 344

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 345

    (47) lparame -> ID DOSPT SIGNOI MUT . tipo_arreglo
    (38) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (39) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    CORIZQ          shift and go to state 247

    tipo_arreglo                   shift and go to state 384

state 346

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 385

state 347

    (42) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 386
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 348

    (41) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 387


state 349

    (43) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 43 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 350

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .

    PARDER          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AS              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    CONTAINS        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    COMA            reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)


state 351

    (56) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 388
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 352

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 389
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 353

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo . MAYORQUE IGUAL expresion PTCOMA

    MAYORQUE        shift and go to state 390


state 354

    (38) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 391
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 355

    (39) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 392
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 356

    (58) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    STR             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    I64             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    F64             reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 58 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 357

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 393


state 358

    (36) expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .

    PTO             reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAS             reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENOS           reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    POR             reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    DIVIDIDO        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MODULO          reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    IGUALQUE        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    NOIGUALQUE      reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENORQUE        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAYORQUE        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MENORIQUE       reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    MAYORIQUE       reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    OR              reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    AND             reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    PARDER          reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    AS              reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    CONTAINS        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    LLAVEIZQ        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    PTCOMA          reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    CORDER          reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    COMA            reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    LLAVEDER        reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    IGUAL           reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)
    BARRAS          reduce using rule 36 (expresion -> ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER .)


state 359

    (119) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 394
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 360

    (120) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 395
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 361

    (32) nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 32 (nativas_vector -> expresion PTO PUSH PARIZQ expresion PARDER PTCOMA .)


state 362

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 396
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 363

    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    VEC             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    VVEC            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    TRUE            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    FALSE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    STR             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CADENA          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    MENOS           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    NOT             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    I64             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    F64             reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    BOOL            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    STRING          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    USIZE           reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 34 (nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA .)


state 364

    (54) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 397


state 365

    (35) expresion -> expresion PTO REMOVE PARIZQ . expresion PARDER
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ . expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 398
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 366

    (65) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FOR             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    VEC             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    VVEC            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ENTERO          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    DECIMAL         reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    TRUE            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FALSE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    STR             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CADENA          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CARACTER        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MENOS           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    NOT             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PARIZQ          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CORIZQ          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    I64             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    F64             reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BOOL            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CHAR            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    STRING          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    USIZE           reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    SIGNOI          reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 65 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 367

    (66) lelseif -> lelseif elseif .

    ELSE            reduce using rule 66 (lelseif -> lelseif elseif .)
    FN              reduce using rule 66 (lelseif -> lelseif elseif .)
    LET             reduce using rule 66 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 66 (lelseif -> lelseif elseif .)
    ID              reduce using rule 66 (lelseif -> lelseif elseif .)
    IF              reduce using rule 66 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 66 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 66 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 66 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 66 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 66 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 66 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 66 (lelseif -> lelseif elseif .)
    VEC             reduce using rule 66 (lelseif -> lelseif elseif .)
    VVEC            reduce using rule 66 (lelseif -> lelseif elseif .)
    ENTERO          reduce using rule 66 (lelseif -> lelseif elseif .)
    DECIMAL         reduce using rule 66 (lelseif -> lelseif elseif .)
    TRUE            reduce using rule 66 (lelseif -> lelseif elseif .)
    FALSE           reduce using rule 66 (lelseif -> lelseif elseif .)
    STR             reduce using rule 66 (lelseif -> lelseif elseif .)
    CADENA          reduce using rule 66 (lelseif -> lelseif elseif .)
    CARACTER        reduce using rule 66 (lelseif -> lelseif elseif .)
    MENOS           reduce using rule 66 (lelseif -> lelseif elseif .)
    NOT             reduce using rule 66 (lelseif -> lelseif elseif .)
    PARIZQ          reduce using rule 66 (lelseif -> lelseif elseif .)
    CORIZQ          reduce using rule 66 (lelseif -> lelseif elseif .)
    I64             reduce using rule 66 (lelseif -> lelseif elseif .)
    F64             reduce using rule 66 (lelseif -> lelseif elseif .)
    BOOL            reduce using rule 66 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 66 (lelseif -> lelseif elseif .)
    STRING          reduce using rule 66 (lelseif -> lelseif elseif .)
    USIZE           reduce using rule 66 (lelseif -> lelseif elseif .)
    SIGNOI          reduce using rule 66 (lelseif -> lelseif elseif .)
    $end            reduce using rule 66 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 66 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 66 (lelseif -> lelseif elseif .)


state 368

    (69) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 399
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 369

    (68) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 400
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 370

    (141) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    PTO             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AS              reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CONTAINS        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEIZQ        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 141 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 371

    (142) elseifa -> elseifa lif .

    ELSE            reduce using rule 142 (elseifa -> elseifa lif .)
    PTO             reduce using rule 142 (elseifa -> elseifa lif .)
    MAS             reduce using rule 142 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 142 (elseifa -> elseifa lif .)
    POR             reduce using rule 142 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 142 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 142 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 142 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 142 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 142 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 142 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 142 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 142 (elseifa -> elseifa lif .)
    OR              reduce using rule 142 (elseifa -> elseifa lif .)
    AND             reduce using rule 142 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 142 (elseifa -> elseifa lif .)
    AS              reduce using rule 142 (elseifa -> elseifa lif .)
    CONTAINS        reduce using rule 142 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 142 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 142 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 142 (elseifa -> elseifa lif .)
    COMA            reduce using rule 142 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 142 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 142 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 142 (elseifa -> elseifa lif .)


state 372

    (145) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 401
    expresion                      shift and go to state 241
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 373

    (144) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 402
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 374

    (82) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 403
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 375

    (80) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (81) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 404


state 376

    (151) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (152) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 405


state 377

    (76) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 406
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 378

    (77) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 77 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 379

    (155) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 407
    expresion                      shift and go to state 241
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 380

    (156) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            reduce using rule 156 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 381

    (28) expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .

    PTO             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAS             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENOS           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    POR             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MODULO          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    OR              reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AND             reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PARDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    AS              reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    CONTAINS        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEIZQ        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    CORDER          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    COMA            reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 28 (expresion -> VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER .)


state 382

    (87) forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 87 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)


state 383

    (88) forin -> FOR ID IN expresion PTO PTO expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 408
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 384

    (47) lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .

    PARDER          reduce using rule 47 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)
    COMA            reduce using rule 47 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)


state 385

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 409


state 386

    (42) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 42 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 387

    (41) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instrucciones                  shift and go to state 410
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 388

    (56) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    STR             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    I64             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    F64             reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 56 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 389

    (37) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VEC             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STR             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    NOT             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    I64             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    F64             reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    STRING          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 37 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 390

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 411


state 391

    (38) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 412
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 392

    (39) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          shift and go to state 413
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 393

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 414
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 394

    (119) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 415
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 395

    (120) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 416
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 396

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 417


state 397

    (54) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    VEC             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    VVEC            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ENTERO          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    DECIMAL         reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    TRUE            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FALSE           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    STR             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CADENA          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CARACTER        reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MENOS           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    NOT             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PARIZQ          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CORIZQ          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    I64             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    F64             reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BOOL            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    STRING          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    USIZE           reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    SIGNOI          reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 54 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 398

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion . PARDER
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion . PARDER PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 418
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 399

    (69) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 419
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 400

    (68) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 420
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 401

    (145) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (146) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 421
    PTCOMA          shift and go to state 273


state 402

    (144) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 422
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 403

    (82) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           shift and go to state 423
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 404

    (80) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (81) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 424
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 425
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 405

    (151) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (152) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 426
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 427
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 406

    (76) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 428
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 407

    (155) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (146) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 429
    PTCOMA          shift and go to state 273


state 408

    (88) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 430
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 409

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instrucciones                  shift and go to state 431
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 410

    (41) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 432
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 411

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL . expresion PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    tipo                           shift and go to state 25
    expresion                      shift and go to state 433
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 412

    (38) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 38 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 38 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 38 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    COMA            reduce using rule 38 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 413

    (39) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 39 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 39 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 39 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    COMA            reduce using rule 39 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 414

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 434
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 415

    (119) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    PTO             reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CONTAINS        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEIZQ        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 119 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 416

    (120) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    PTO             reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CONTAINS        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEIZQ        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 120 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 417

    (33) nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .

    FN              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LET             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    ID              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    IF              reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    MATCH           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LOOP            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    WHILE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    BREAK           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    RETURN          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    FOR             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    VEC             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    VVEC            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    ENTERO          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    DECIMAL         reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    TRUE            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    FALSE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    STR             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CADENA          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CARACTER        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    MENOS           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    NOT             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    PARIZQ          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CORIZQ          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    I64             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    F64             reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    BOOL            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    CHAR            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    STRING          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    USIZE           reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    SIGNOI          reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    $end            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)
    COMA            reduce using rule 33 (nativas_vector -> expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA .)


state 418

    (35) expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .
    (34) nativas_vector -> expresion PTO REMOVE PARIZQ expresion PARDER . PTCOMA

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTO             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAS             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    POR             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    OR              reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    AND             reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .)
    PTCOMA          shift and go to state 363

  ! PTCOMA          [ reduce using rule 35 (expresion -> expresion PTO REMOVE PARIZQ expresion PARDER .) ]


state 419

    (69) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 69 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 420

    (68) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instrucciones                  shift and go to state 435
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 421

    (145) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    PTO             reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CONTAINS        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 145 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 422

    (144) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    expresion                      shift and go to state 241
    bloque_expresion               shift and go to state 436
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 423

    (82) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 437


state 424

    (80) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 438
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 425

    (81) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 81 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 426

    (151) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (146) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (147) bloque_expresion -> . expresion
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ID              shift and go to state 69
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42
    IF              shift and go to state 71
    MATCH           shift and go to state 72
    LOOP            shift and go to state 73

    bloque_expresion               shift and go to state 439
    expresion                      shift and go to state 241
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 25
    llamada_funciones              shift and go to state 70
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 427

    (152) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEDER        reduce using rule 152 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 428

    (76) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 76 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 429

    (155) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 155 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 430

    (88) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 440
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 431

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 441
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    tipo                           shift and go to state 25
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 432

    (41) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 41 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 433

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion . PTCOMA
    (31) expresion -> expresion . PTO CAPACITY PARIZQ PARDER
    (35) expresion -> expresion . PTO REMOVE PARIZQ expresion PARDER
    (114) expresion -> expresion . MAS expresion
    (115) expresion -> expresion . MENOS expresion
    (116) expresion -> expresion . POR expresion
    (117) expresion -> expresion . DIVIDIDO expresion
    (118) expresion -> expresion . MODULO expresion
    (121) expresion -> expresion . IGUALQUE expresion
    (122) expresion -> expresion . NOIGUALQUE expresion
    (123) expresion -> expresion . MENORQUE expresion
    (124) expresion -> expresion . MAYORQUE expresion
    (125) expresion -> expresion . MENORIQUE expresion
    (126) expresion -> expresion . MAYORIQUE expresion
    (127) expresion -> expresion . OR expresion
    (128) expresion -> expresion . AND expresion
    (30) nativas_vec -> expresion . PTO LEN PARIZQ PARDER
    (163) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (164) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PTCOMA          shift and go to state 442
    PTO             shift and go to state 120
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIVIDIDO        shift and go to state 87
    MODULO          shift and go to state 88
    IGUALQUE        shift and go to state 89
    NOIGUALQUE      shift and go to state 90
    MENORQUE        shift and go to state 91
    MAYORQUE        shift and go to state 92
    MENORIQUE       shift and go to state 93
    MAYORIQUE       shift and go to state 94
    OR              shift and go to state 95
    AND             shift and go to state 96


state 434

    (25) declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VEC             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STR             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    NOT             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    I64             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    F64             reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STRING          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 25 (declaracion_vector -> LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 435

    (68) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 443
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 436

    (144) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (146) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 444
    PTCOMA          shift and go to state 273


state 437

    (82) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (83) rrmatch -> . instruccion
    (84) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 447
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    expresion                      shift and go to state 26
    rrmatch                        shift and go to state 445
    instruccion                    shift and go to state 446
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 438

    (80) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 448
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 439

    (151) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (146) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 449
    PTCOMA          shift and go to state 273


state 440

    (88) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 88 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)


state 441

    (40) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 40 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 442

    (24) declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .

    FN              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LET             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ID              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    IF              reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FOR             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VEC             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    VVEC            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    ENTERO          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    DECIMAL         reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    TRUE            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    FALSE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STR             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CADENA          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CARACTER        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    MENOS           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    NOT             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    PARIZQ          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CORIZQ          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    I64             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    F64             reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    BOOL            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    STRING          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    USIZE           reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    SIGNOI          reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    $end            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)
    COMA            reduce using rule 24 (declaracion_vector -> LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA .)


state 443

    (68) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VEC             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    VVEC            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STR             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BOOL            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CHAR            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    STRING          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    USIZE           reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    SIGNOI          reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 68 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 444

    (144) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AS              reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CONTAINS        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 144 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 445

    (82) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 82 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 446

    (83) rrmatch -> instruccion .

    COMA            reduce using rule 83 (rrmatch -> instruccion .)


state 447

    (84) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instrucciones                  shift and go to state 450
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 448

    (80) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 80 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 449

    (151) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 151 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 450

    (84) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . declaracion_vector
    (22) instruccion -> . forin
    (23) instruccion -> . nativas_vector
    (56) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (57) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (58) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (59) declaracion -> . LET ID IGUAL expresion PTCOMA
    (54) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (55) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (60) asignacion -> . ID IGUAL expresion PTCOMA
    (61) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (62) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (63) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (64) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (65) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (70) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (85) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (86) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (89) break -> . BREAK PTCOMA
    (90) break -> . BREAK expresion PTCOMA
    (92) return -> . RETURN expresion PTCOMA
    (91) continue -> . CONTINUE PTCOMA
    (40) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (41) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (42) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (48) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (49) llamada_funciones -> . ID PARIZQ PARDER
    (37) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (24) declaracion_vector -> . LET MUT ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (25) declaracion_vector -> . LET ID DOSPT VVEC MENORQUE tipo MAYORQUE IGUAL expresion PTCOMA
    (87) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (88) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (32) nativas_vector -> . expresion PTO PUSH PARIZQ expresion PARDER PTCOMA
    (33) nativas_vector -> . expresion PTO INSERT PARIZQ expresion COMA expresion PARDER PTCOMA
    (34) nativas_vector -> . expresion PTO REMOVE PARIZQ expresion PARDER PTCOMA
    (26) expresion -> . VEC NOT CORIZQ expresiones CORDER
    (27) expresion -> . VVEC DOSPT DOSPT NEW PARIZQ PARDER
    (28) expresion -> . VVEC DOSPT DOSPT WITH_CAPACITY PARIZQ expresion PARDER
    (29) expresion -> . nativas_vec
    (31) expresion -> . expresion PTO CAPACITY PARIZQ PARDER
    (35) expresion -> . expresion PTO REMOVE PARIZQ expresion PARDER
    (36) expresion -> . ID expresion CONTAINS PARIZQ SIGNOI expresion PARDER
    (102) expresion -> . ID
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . tostring
    (108) expresion -> . toowned
    (111) expresion -> . STR
    (112) expresion -> . CADENA
    (113) expresion -> . CARACTER
    (114) expresion -> . expresion MAS expresion
    (115) expresion -> . expresion MENOS expresion
    (116) expresion -> . expresion POR expresion
    (117) expresion -> . expresion DIVIDIDO expresion
    (118) expresion -> . expresion MODULO expresion
    (119) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (120) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (121) expresion -> . expresion IGUALQUE expresion
    (122) expresion -> . expresion NOIGUALQUE expresion
    (123) expresion -> . expresion MENORQUE expresion
    (124) expresion -> . expresion MAYORQUE expresion
    (125) expresion -> . expresion MENORIQUE expresion
    (126) expresion -> . expresion MAYORIQUE expresion
    (127) expresion -> . expresion OR expresion
    (128) expresion -> . expresion AND expresion
    (129) expresion -> . MENOS expresion
    (130) expresion -> . NOT expresion
    (131) expresion -> . PARIZQ expresion PARDER
    (132) expresion -> . llamada_funciones
    (133) expresion -> . CORIZQ expresiones CORDER
    (134) expresion -> . ID lindices
    (137) expresion -> . if_asig
    (148) expresion -> . match_asig
    (159) expresion -> . loop_asig
    (161) expresion -> . PARIZQ expresion AS tipo PARDER
    (162) expresion -> . nativas_fun
    (30) nativas_vec -> . expresion PTO LEN PARIZQ PARDER
    (109) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (110) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (93) tipo -> . I64
    (94) tipo -> . F64
    (95) tipo -> . BOOL
    (96) tipo -> . CHAR
    (97) tipo -> . STRING
    (98) tipo -> . USIZE
    (99) tipo -> . SIGNOI STR
    (138) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (139) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (140) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (141) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (149) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (160) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (163) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (164) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (165) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 451
    LET             shift and go to state 23
    PRINTLN         shift and go to state 27
    ID              shift and go to state 24
    IF              shift and go to state 29
    MATCH           shift and go to state 30
    LOOP            shift and go to state 31
    WHILE           shift and go to state 32
    BREAK           shift and go to state 33
    RETURN          shift and go to state 34
    CONTINUE        shift and go to state 35
    FN              shift and go to state 65
    FOR             shift and go to state 38
    VEC             shift and go to state 39
    VVEC            shift and go to state 37
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 36
    NOT             shift and go to state 28
    PARIZQ          shift and go to state 6
    CORIZQ          shift and go to state 40
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    USIZE           shift and go to state 61
    SIGNOI          shift and go to state 42

    instruccion                    shift and go to state 63
    declaracion                    shift and go to state 7
    imprimir                       shift and go to state 8
    asignacion                     shift and go to state 9
    if                             shift and go to state 10
    match                          shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    break                          shift and go to state 14
    return                         shift and go to state 15
    continue                       shift and go to state 16
    funciones                      shift and go to state 17
    llamada_funciones              shift and go to state 18
    declaracion_arreglos           shift and go to state 19
    declaracion_vector             shift and go to state 20
    forin                          shift and go to state 21
    nativas_vector                 shift and go to state 22
    tipo                           shift and go to state 25
    expresion                      shift and go to state 26
    nativas_vec                    shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    if_asig                        shift and go to state 52
    match_asig                     shift and go to state 53
    loop_asig                      shift and go to state 54
    nativas_fun                    shift and go to state 55

state 451

    (84) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 84 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 24 resolved as shift
WARNING: shift/reduce conflict for PTO in state 50 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 69 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 135 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 138 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 182 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 213 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 418 resolved as shift
WARNING: reduce/reduce conflict in state 214 resolved using rule (bloque_match -> expresion)
WARNING: rejected rule (bloque_match_asig -> expresion) in state 214
WARNING: reduce/reduce conflict in state 224 resolved using rule (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER)
WARNING: rejected rule (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER) in state 224
