Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> continue
Rule 17    instruccion -> funciones
Rule 18    instruccion -> llamada_funciones
Rule 19    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 20    lparametros -> lparametros COMA lparame
Rule 21    lparametros -> lparame
Rule 22    lparame -> ID DOSPT tipo
Rule 23    llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA
Rule 24    largumentos -> largumentos COMA expresion
Rule 25    largumentos -> expresion
Rule 26    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 27    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 28    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 29    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 30    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 31    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 32    asignacion -> ID IGUAL expresion PTCOMA
Rule 33    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 34    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 35    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 36    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 37    lelseif -> lelseif elseif
Rule 38    lelseif -> elseif
Rule 39    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 40    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 41    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 42    imatch -> opmatch COMA dmatch
Rule 43    opmatch -> opmatch COMA cmatch
Rule 44    opmatch -> opmatch COMA rmatch
Rule 45    opmatch -> cmatch
Rule 46    opmatch -> rmatch
Rule 47    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 48    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 49    bloque_match -> bloque_match BARRAS expresion
Rule 50    bloque_match -> expresion
Rule 51    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 52    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 53    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 54    rrmatch -> instruccion
Rule 55    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 56    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 57    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 58    break -> BREAK PTCOMA
Rule 59    break -> BREAK expresion PTCOMA
Rule 60    continue -> CONTINUE PTCOMA
Rule 61    tipo -> I64
Rule 62    tipo -> F64
Rule 63    tipo -> BOOL
Rule 64    tipo -> CHAR
Rule 65    tipo -> STRING
Rule 66    tipo -> SIGNOI STR
Rule 67    expresiones -> expresiones COMA expresion
Rule 68    expresiones -> expresion
Rule 69    expresion -> ID
Rule 70    expresion -> ENTERO
Rule 71    expresion -> DECIMAL
Rule 72    expresion -> TRUE
Rule 73    expresion -> FALSE
Rule 74    expresion -> tostring
Rule 75    expresion -> toowned
Rule 76    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 77    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 78    expresion -> STR
Rule 79    expresion -> CADENA
Rule 80    expresion -> CARACTER
Rule 81    expresion -> expresion MAS expresion
Rule 82    expresion -> expresion MENOS expresion
Rule 83    expresion -> expresion POR expresion
Rule 84    expresion -> expresion DIVIDIDO expresion
Rule 85    expresion -> expresion MODULO expresion
Rule 86    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 87    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 88    expresion -> expresion IGUALQUE expresion
Rule 89    expresion -> expresion NOIGUALQUE expresion
Rule 90    expresion -> expresion MENORQUE expresion
Rule 91    expresion -> expresion MAYORQUE expresion
Rule 92    expresion -> expresion MENORIQUE expresion
Rule 93    expresion -> expresion MAYORIQUE expresion
Rule 94    expresion -> expresion OR expresion
Rule 95    expresion -> expresion AND expresion
Rule 96    expresion -> MENOS expresion
Rule 97    expresion -> NOT expresion
Rule 98    expresion -> PARIZQ expresion PARDER
Rule 99    expresion -> if_asig
Rule 100   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 101   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 102   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 103   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 104   elseifa -> elseifa lif
Rule 105   elseifa -> lif
Rule 106   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 107   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 108   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 109   bloque_expresion -> expresion
Rule 110   expresion -> match_asig
Rule 111   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 112   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 113   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 114   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 115   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 116   opmatch_asig -> cmatch_asig
Rule 117   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 118   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 119   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 120   bloque_match_asig -> expresion
Rule 121   expresion -> loop_asig
Rule 122   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 95
AS                   : 
BARRAS               : 49 119
BOOL                 : 63
BREAK                : 58 59
CADENA               : 76 77 79
CARACTER             : 80
CHAR                 : 64
COMA                 : 20 24 26 42 43 44 67 86 87 112 115
CONTINUE             : 60
DECIMAL              : 71
DIVIDIDO             : 84
DOSPT                : 22 28 30 86 86 87 87
ELSE                 : 39 40 106 107
ENTERO               : 70
F64                  : 62
FALSE                : 73
FN                   : 5 19
GUIONB               : 51 52 113 114
I64                  : 61
ID                   : 19 22 23 28 29 30 31 32 69
IF                   : 33 34 35 36 39 100 101 102 103 106
IGUAL                : 28 29 30 31 32 47 48 51 52 53 53 113 114 117 118
IGUALQUE             : 88
LET                  : 28 29 30 31
LLAVEDER             : 5 19 33 34 35 36 39 40 41 47 51 55 56 57 100 101 102 103 106 107 111 113 117 122
LLAVEIZQ             : 5 19 33 34 35 36 39 40 41 47 51 55 56 57 100 101 102 103 106 107 111 113 117 122
LOOP                 : 56 122
MAIN                 : 5
MAS                  : 81
MATCH                : 41 111
MAYORIQUE            : 93
MAYORQUE             : 47 48 51 52 53 91 113 114 117 118
MENORIQUE            : 92
MENORQUE             : 90
MENOS                : 82 96
MODULO               : 85
MUT                  : 28 29
NOIGUALQUE           : 89
NOT                  : 26 27 97
OR                   : 94
PARDER               : 5 19 23 26 27 76 77 86 87 98
PARIZQ               : 5 19 23 26 27 76 77 86 87 98
POR                  : 83
POW                  : 86
POWF                 : 87
PRINTLN              : 26 27
PTCOMA               : 23 26 27 28 29 30 31 32 58 59 60 108
PTO                  : 53 53 76 77
SIGNOI               : 66
STR                  : 66 78
STRING               : 65
TOOWNED              : 77
TOSTRING             : 76
TRUE                 : 72
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 100 101 102 103 106 107 108 113 117
bloque_match         : 47 48 49
bloque_match_asig    : 117 118 119
break                : 15
cmatch               : 43 45
cmatch_asig          : 115 116
continue             : 16
declaracion          : 8
dmatch               : 42
dmatch_asig          : 112
else                 : 34 36
elsea                : 101 103
elseif               : 37 38
elseifa              : 102 103 104
expresion            : 24 25 26 27 28 29 30 31 32 33 34 35 36 39 41 49 50 53 53 57 59 67 68 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 97 98 100 101 102 103 106 108 109 111 114 118 119 120
expresiones          : 26 67
funciones            : 17
if                   : 11
if_asig              : 99
imatch               : 41
imatch_asig          : 111
imprimir             : 9
inicio               : 0
instruccion          : 6 7 48 52 54
instrucciones        : 1 1 2 3 5 6 19 33 34 35 36 39 40 47 51 55 56 57 122
largumentos          : 23 24
lelseif              : 35 36 37
lif                  : 104 105
llamada_funciones    : 18
loop                 : 13
loop_asig            : 121
lparame              : 20 21
lparametros          : 19 20
main                 : 1 2 3 4
match                : 12
match_asig           : 110
opmatch              : 42 43 44
opmatch_asig         : 112 115
rmatch               : 44 46
rrmatch              : 53
tipo                 : 22 28 30 86 87
toowned              : 75
tostring             : 74
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25

    main                           shift and go to state 26
    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 28
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (19) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 30
    ID              shift and go to state 31


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> continue .

    FN              reduce using rule 16 (instruccion -> continue .)
    LET             reduce using rule 16 (instruccion -> continue .)
    PRINTLN         reduce using rule 16 (instruccion -> continue .)
    ID              reduce using rule 16 (instruccion -> continue .)
    IF              reduce using rule 16 (instruccion -> continue .)
    MATCH           reduce using rule 16 (instruccion -> continue .)
    LOOP            reduce using rule 16 (instruccion -> continue .)
    WHILE           reduce using rule 16 (instruccion -> continue .)
    BREAK           reduce using rule 16 (instruccion -> continue .)
    CONTINUE        reduce using rule 16 (instruccion -> continue .)
    $end            reduce using rule 16 (instruccion -> continue .)
    LLAVEDER        reduce using rule 16 (instruccion -> continue .)
    COMA            reduce using rule 16 (instruccion -> continue .)


state 15

    (17) instruccion -> funciones .

    FN              reduce using rule 17 (instruccion -> funciones .)
    LET             reduce using rule 17 (instruccion -> funciones .)
    PRINTLN         reduce using rule 17 (instruccion -> funciones .)
    ID              reduce using rule 17 (instruccion -> funciones .)
    IF              reduce using rule 17 (instruccion -> funciones .)
    MATCH           reduce using rule 17 (instruccion -> funciones .)
    LOOP            reduce using rule 17 (instruccion -> funciones .)
    WHILE           reduce using rule 17 (instruccion -> funciones .)
    BREAK           reduce using rule 17 (instruccion -> funciones .)
    CONTINUE        reduce using rule 17 (instruccion -> funciones .)
    $end            reduce using rule 17 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 17 (instruccion -> funciones .)
    COMA            reduce using rule 17 (instruccion -> funciones .)


state 16

    (18) instruccion -> llamada_funciones .

    FN              reduce using rule 18 (instruccion -> llamada_funciones .)
    LET             reduce using rule 18 (instruccion -> llamada_funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> llamada_funciones .)
    ID              reduce using rule 18 (instruccion -> llamada_funciones .)
    IF              reduce using rule 18 (instruccion -> llamada_funciones .)
    MATCH           reduce using rule 18 (instruccion -> llamada_funciones .)
    LOOP            reduce using rule 18 (instruccion -> llamada_funciones .)
    WHILE           reduce using rule 18 (instruccion -> llamada_funciones .)
    BREAK           reduce using rule 18 (instruccion -> llamada_funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> llamada_funciones .)
    $end            reduce using rule 18 (instruccion -> llamada_funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> llamada_funciones .)
    COMA            reduce using rule 18 (instruccion -> llamada_funciones .)


state 17

    (28) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 32
    ID              shift and go to state 33


state 18

    (32) asignacion -> ID . IGUAL expresion PTCOMA
    (23) llamada_funciones -> ID . PARIZQ largumentos PARDER PTCOMA

    IGUAL           shift and go to state 34
    PARIZQ          shift and go to state 35


state 19

    (26) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 36


state 20

    (33) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 38
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 21

    (41) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 64
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 22

    (56) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 65


state 23

    (57) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 66
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 24

    (58) break -> BREAK . PTCOMA
    (59) break -> BREAK . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 67
    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 68
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 25

    (60) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 69


state 26

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 70
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 27

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 28

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 29

    (19) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31


state 30

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 71


state 31

    (19) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 72


state 32

    (28) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 73


state 33

    (30) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 74
    IGUAL           shift and go to state 75


state 34

    (32) asignacion -> ID IGUAL . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 76
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 35

    (23) llamada_funciones -> ID PARIZQ . largumentos PARDER PTCOMA
    (24) largumentos -> . largumentos COMA expresion
    (25) largumentos -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    largumentos                    shift and go to state 77
    expresion                      shift and go to state 78
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 36

    (26) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 79


state 37

    (100) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 80
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 38

    (33) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (34) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 81
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 39

    (69) expresion -> ID .

    LLAVEIZQ        reduce using rule 69 (expresion -> ID .)
    MAS             reduce using rule 69 (expresion -> ID .)
    MENOS           reduce using rule 69 (expresion -> ID .)
    POR             reduce using rule 69 (expresion -> ID .)
    DIVIDIDO        reduce using rule 69 (expresion -> ID .)
    MODULO          reduce using rule 69 (expresion -> ID .)
    IGUALQUE        reduce using rule 69 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 69 (expresion -> ID .)
    MENORQUE        reduce using rule 69 (expresion -> ID .)
    MAYORQUE        reduce using rule 69 (expresion -> ID .)
    MENORIQUE       reduce using rule 69 (expresion -> ID .)
    MAYORIQUE       reduce using rule 69 (expresion -> ID .)
    OR              reduce using rule 69 (expresion -> ID .)
    AND             reduce using rule 69 (expresion -> ID .)
    PTCOMA          reduce using rule 69 (expresion -> ID .)
    PARDER          reduce using rule 69 (expresion -> ID .)
    COMA            reduce using rule 69 (expresion -> ID .)
    PTO             reduce using rule 69 (expresion -> ID .)
    IGUAL           reduce using rule 69 (expresion -> ID .)
    BARRAS          reduce using rule 69 (expresion -> ID .)
    LLAVEDER        reduce using rule 69 (expresion -> ID .)


state 40

    (70) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 70 (expresion -> ENTERO .)
    MAS             reduce using rule 70 (expresion -> ENTERO .)
    MENOS           reduce using rule 70 (expresion -> ENTERO .)
    POR             reduce using rule 70 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 70 (expresion -> ENTERO .)
    MODULO          reduce using rule 70 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 70 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 70 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 70 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 70 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 70 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 70 (expresion -> ENTERO .)
    OR              reduce using rule 70 (expresion -> ENTERO .)
    AND             reduce using rule 70 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 70 (expresion -> ENTERO .)
    PARDER          reduce using rule 70 (expresion -> ENTERO .)
    COMA            reduce using rule 70 (expresion -> ENTERO .)
    PTO             reduce using rule 70 (expresion -> ENTERO .)
    IGUAL           reduce using rule 70 (expresion -> ENTERO .)
    BARRAS          reduce using rule 70 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 70 (expresion -> ENTERO .)


state 41

    (71) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 71 (expresion -> DECIMAL .)
    MAS             reduce using rule 71 (expresion -> DECIMAL .)
    MENOS           reduce using rule 71 (expresion -> DECIMAL .)
    POR             reduce using rule 71 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 71 (expresion -> DECIMAL .)
    MODULO          reduce using rule 71 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 71 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 71 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 71 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 71 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 71 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 71 (expresion -> DECIMAL .)
    OR              reduce using rule 71 (expresion -> DECIMAL .)
    AND             reduce using rule 71 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 71 (expresion -> DECIMAL .)
    PARDER          reduce using rule 71 (expresion -> DECIMAL .)
    COMA            reduce using rule 71 (expresion -> DECIMAL .)
    PTO             reduce using rule 71 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 71 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 71 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 71 (expresion -> DECIMAL .)


state 42

    (72) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 72 (expresion -> TRUE .)
    MAS             reduce using rule 72 (expresion -> TRUE .)
    MENOS           reduce using rule 72 (expresion -> TRUE .)
    POR             reduce using rule 72 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 72 (expresion -> TRUE .)
    MODULO          reduce using rule 72 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 72 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 72 (expresion -> TRUE .)
    MENORQUE        reduce using rule 72 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 72 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 72 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 72 (expresion -> TRUE .)
    OR              reduce using rule 72 (expresion -> TRUE .)
    AND             reduce using rule 72 (expresion -> TRUE .)
    PTCOMA          reduce using rule 72 (expresion -> TRUE .)
    PARDER          reduce using rule 72 (expresion -> TRUE .)
    COMA            reduce using rule 72 (expresion -> TRUE .)
    PTO             reduce using rule 72 (expresion -> TRUE .)
    IGUAL           reduce using rule 72 (expresion -> TRUE .)
    BARRAS          reduce using rule 72 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 72 (expresion -> TRUE .)


state 43

    (73) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 73 (expresion -> FALSE .)
    MAS             reduce using rule 73 (expresion -> FALSE .)
    MENOS           reduce using rule 73 (expresion -> FALSE .)
    POR             reduce using rule 73 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 73 (expresion -> FALSE .)
    MODULO          reduce using rule 73 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 73 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 73 (expresion -> FALSE .)
    MENORQUE        reduce using rule 73 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 73 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 73 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 73 (expresion -> FALSE .)
    OR              reduce using rule 73 (expresion -> FALSE .)
    AND             reduce using rule 73 (expresion -> FALSE .)
    PTCOMA          reduce using rule 73 (expresion -> FALSE .)
    PARDER          reduce using rule 73 (expresion -> FALSE .)
    COMA            reduce using rule 73 (expresion -> FALSE .)
    PTO             reduce using rule 73 (expresion -> FALSE .)
    IGUAL           reduce using rule 73 (expresion -> FALSE .)
    BARRAS          reduce using rule 73 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 73 (expresion -> FALSE .)


state 44

    (74) expresion -> tostring .

    LLAVEIZQ        reduce using rule 74 (expresion -> tostring .)
    MAS             reduce using rule 74 (expresion -> tostring .)
    MENOS           reduce using rule 74 (expresion -> tostring .)
    POR             reduce using rule 74 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 74 (expresion -> tostring .)
    MODULO          reduce using rule 74 (expresion -> tostring .)
    IGUALQUE        reduce using rule 74 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 74 (expresion -> tostring .)
    MENORQUE        reduce using rule 74 (expresion -> tostring .)
    MAYORQUE        reduce using rule 74 (expresion -> tostring .)
    MENORIQUE       reduce using rule 74 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 74 (expresion -> tostring .)
    OR              reduce using rule 74 (expresion -> tostring .)
    AND             reduce using rule 74 (expresion -> tostring .)
    PTCOMA          reduce using rule 74 (expresion -> tostring .)
    PARDER          reduce using rule 74 (expresion -> tostring .)
    COMA            reduce using rule 74 (expresion -> tostring .)
    PTO             reduce using rule 74 (expresion -> tostring .)
    IGUAL           reduce using rule 74 (expresion -> tostring .)
    BARRAS          reduce using rule 74 (expresion -> tostring .)
    LLAVEDER        reduce using rule 74 (expresion -> tostring .)


state 45

    (75) expresion -> toowned .

    LLAVEIZQ        reduce using rule 75 (expresion -> toowned .)
    MAS             reduce using rule 75 (expresion -> toowned .)
    MENOS           reduce using rule 75 (expresion -> toowned .)
    POR             reduce using rule 75 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 75 (expresion -> toowned .)
    MODULO          reduce using rule 75 (expresion -> toowned .)
    IGUALQUE        reduce using rule 75 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 75 (expresion -> toowned .)
    MENORQUE        reduce using rule 75 (expresion -> toowned .)
    MAYORQUE        reduce using rule 75 (expresion -> toowned .)
    MENORIQUE       reduce using rule 75 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 75 (expresion -> toowned .)
    OR              reduce using rule 75 (expresion -> toowned .)
    AND             reduce using rule 75 (expresion -> toowned .)
    PTCOMA          reduce using rule 75 (expresion -> toowned .)
    PARDER          reduce using rule 75 (expresion -> toowned .)
    COMA            reduce using rule 75 (expresion -> toowned .)
    PTO             reduce using rule 75 (expresion -> toowned .)
    IGUAL           reduce using rule 75 (expresion -> toowned .)
    BARRAS          reduce using rule 75 (expresion -> toowned .)
    LLAVEDER        reduce using rule 75 (expresion -> toowned .)


state 46

    (78) expresion -> STR .

    LLAVEIZQ        reduce using rule 78 (expresion -> STR .)
    MAS             reduce using rule 78 (expresion -> STR .)
    MENOS           reduce using rule 78 (expresion -> STR .)
    POR             reduce using rule 78 (expresion -> STR .)
    DIVIDIDO        reduce using rule 78 (expresion -> STR .)
    MODULO          reduce using rule 78 (expresion -> STR .)
    IGUALQUE        reduce using rule 78 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 78 (expresion -> STR .)
    MENORQUE        reduce using rule 78 (expresion -> STR .)
    MAYORQUE        reduce using rule 78 (expresion -> STR .)
    MENORIQUE       reduce using rule 78 (expresion -> STR .)
    MAYORIQUE       reduce using rule 78 (expresion -> STR .)
    OR              reduce using rule 78 (expresion -> STR .)
    AND             reduce using rule 78 (expresion -> STR .)
    PTCOMA          reduce using rule 78 (expresion -> STR .)
    PARDER          reduce using rule 78 (expresion -> STR .)
    COMA            reduce using rule 78 (expresion -> STR .)
    PTO             reduce using rule 78 (expresion -> STR .)
    IGUAL           reduce using rule 78 (expresion -> STR .)
    BARRAS          reduce using rule 78 (expresion -> STR .)
    LLAVEDER        reduce using rule 78 (expresion -> STR .)


state 47

    (79) expresion -> CADENA .
    (76) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (77) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 79 (expresion -> CADENA .)
    MAS             reduce using rule 79 (expresion -> CADENA .)
    MENOS           reduce using rule 79 (expresion -> CADENA .)
    POR             reduce using rule 79 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 79 (expresion -> CADENA .)
    MODULO          reduce using rule 79 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 79 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 79 (expresion -> CADENA .)
    MENORQUE        reduce using rule 79 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 79 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 79 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 79 (expresion -> CADENA .)
    OR              reduce using rule 79 (expresion -> CADENA .)
    AND             reduce using rule 79 (expresion -> CADENA .)
    PTCOMA          reduce using rule 79 (expresion -> CADENA .)
    PARDER          reduce using rule 79 (expresion -> CADENA .)
    COMA            reduce using rule 79 (expresion -> CADENA .)
    IGUAL           reduce using rule 79 (expresion -> CADENA .)
    BARRAS          reduce using rule 79 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 79 (expresion -> CADENA .)
    PTO             shift and go to state 95

  ! PTO             [ reduce using rule 79 (expresion -> CADENA .) ]


state 48

    (80) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 80 (expresion -> CARACTER .)
    MAS             reduce using rule 80 (expresion -> CARACTER .)
    MENOS           reduce using rule 80 (expresion -> CARACTER .)
    POR             reduce using rule 80 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 80 (expresion -> CARACTER .)
    MODULO          reduce using rule 80 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 80 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 80 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 80 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 80 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 80 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 80 (expresion -> CARACTER .)
    OR              reduce using rule 80 (expresion -> CARACTER .)
    AND             reduce using rule 80 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 80 (expresion -> CARACTER .)
    PARDER          reduce using rule 80 (expresion -> CARACTER .)
    COMA            reduce using rule 80 (expresion -> CARACTER .)
    PTO             reduce using rule 80 (expresion -> CARACTER .)
    IGUAL           reduce using rule 80 (expresion -> CARACTER .)
    BARRAS          reduce using rule 80 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 80 (expresion -> CARACTER .)


state 49

    (96) expresion -> MENOS . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 96
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 50

    (86) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 97


state 51

    (98) expresion -> PARIZQ . expresion PARDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 98
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 52

    (97) expresion -> NOT . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 99
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 53

    (99) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 99 (expresion -> if_asig .)
    MAS             reduce using rule 99 (expresion -> if_asig .)
    MENOS           reduce using rule 99 (expresion -> if_asig .)
    POR             reduce using rule 99 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 99 (expresion -> if_asig .)
    MODULO          reduce using rule 99 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 99 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 99 (expresion -> if_asig .)
    MENORQUE        reduce using rule 99 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 99 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 99 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 99 (expresion -> if_asig .)
    OR              reduce using rule 99 (expresion -> if_asig .)
    AND             reduce using rule 99 (expresion -> if_asig .)
    PTCOMA          reduce using rule 99 (expresion -> if_asig .)
    PARDER          reduce using rule 99 (expresion -> if_asig .)
    COMA            reduce using rule 99 (expresion -> if_asig .)
    PTO             reduce using rule 99 (expresion -> if_asig .)
    IGUAL           reduce using rule 99 (expresion -> if_asig .)
    BARRAS          reduce using rule 99 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 99 (expresion -> if_asig .)


state 54

    (110) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 110 (expresion -> match_asig .)
    MAS             reduce using rule 110 (expresion -> match_asig .)
    MENOS           reduce using rule 110 (expresion -> match_asig .)
    POR             reduce using rule 110 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 110 (expresion -> match_asig .)
    MODULO          reduce using rule 110 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 110 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 110 (expresion -> match_asig .)
    MENORQUE        reduce using rule 110 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 110 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 110 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 110 (expresion -> match_asig .)
    OR              reduce using rule 110 (expresion -> match_asig .)
    AND             reduce using rule 110 (expresion -> match_asig .)
    PTCOMA          reduce using rule 110 (expresion -> match_asig .)
    PARDER          reduce using rule 110 (expresion -> match_asig .)
    COMA            reduce using rule 110 (expresion -> match_asig .)
    PTO             reduce using rule 110 (expresion -> match_asig .)
    IGUAL           reduce using rule 110 (expresion -> match_asig .)
    BARRAS          reduce using rule 110 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 110 (expresion -> match_asig .)


state 55

    (121) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 121 (expresion -> loop_asig .)
    MAS             reduce using rule 121 (expresion -> loop_asig .)
    MENOS           reduce using rule 121 (expresion -> loop_asig .)
    POR             reduce using rule 121 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 121 (expresion -> loop_asig .)
    MODULO          reduce using rule 121 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 121 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 121 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 121 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 121 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 121 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 121 (expresion -> loop_asig .)
    OR              reduce using rule 121 (expresion -> loop_asig .)
    AND             reduce using rule 121 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 121 (expresion -> loop_asig .)
    PARDER          reduce using rule 121 (expresion -> loop_asig .)
    COMA            reduce using rule 121 (expresion -> loop_asig .)
    PTO             reduce using rule 121 (expresion -> loop_asig .)
    IGUAL           reduce using rule 121 (expresion -> loop_asig .)
    BARRAS          reduce using rule 121 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 121 (expresion -> loop_asig .)


state 56

    (61) tipo -> I64 .

    DOSPT           reduce using rule 61 (tipo -> I64 .)
    IGUAL           reduce using rule 61 (tipo -> I64 .)
    PARDER          reduce using rule 61 (tipo -> I64 .)
    COMA            reduce using rule 61 (tipo -> I64 .)


state 57

    (62) tipo -> F64 .

    DOSPT           reduce using rule 62 (tipo -> F64 .)
    IGUAL           reduce using rule 62 (tipo -> F64 .)
    PARDER          reduce using rule 62 (tipo -> F64 .)
    COMA            reduce using rule 62 (tipo -> F64 .)


state 58

    (63) tipo -> BOOL .

    DOSPT           reduce using rule 63 (tipo -> BOOL .)
    IGUAL           reduce using rule 63 (tipo -> BOOL .)
    PARDER          reduce using rule 63 (tipo -> BOOL .)
    COMA            reduce using rule 63 (tipo -> BOOL .)


state 59

    (64) tipo -> CHAR .

    DOSPT           reduce using rule 64 (tipo -> CHAR .)
    IGUAL           reduce using rule 64 (tipo -> CHAR .)
    PARDER          reduce using rule 64 (tipo -> CHAR .)
    COMA            reduce using rule 64 (tipo -> CHAR .)


state 60

    (65) tipo -> STRING .

    DOSPT           reduce using rule 65 (tipo -> STRING .)
    IGUAL           reduce using rule 65 (tipo -> STRING .)
    PARDER          reduce using rule 65 (tipo -> STRING .)
    COMA            reduce using rule 65 (tipo -> STRING .)


state 61

    (66) tipo -> SIGNOI . STR

    STR             shift and go to state 100


state 62

    (111) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 101
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 63

    (122) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 102


state 64

    (41) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 103
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 65

    (56) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 66

    (57) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 105
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 67

    (58) break -> BREAK PTCOMA .

    FN              reduce using rule 58 (break -> BREAK PTCOMA .)
    LET             reduce using rule 58 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 58 (break -> BREAK PTCOMA .)
    ID              reduce using rule 58 (break -> BREAK PTCOMA .)
    IF              reduce using rule 58 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 58 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 58 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 58 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 58 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 58 (break -> BREAK PTCOMA .)
    $end            reduce using rule 58 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 58 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 58 (break -> BREAK PTCOMA .)


state 68

    (59) break -> BREAK expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 106
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 69

    (60) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 60 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 60 (continue -> CONTINUE PTCOMA .)


state 70

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 71

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 107


state 72

    (19) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (20) lparametros -> . lparametros COMA lparame
    (21) lparametros -> . lparame
    (22) lparame -> . ID DOSPT tipo

    ID              shift and go to state 108

    lparametros                    shift and go to state 109
    lparame                        shift and go to state 110

state 73

    (28) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 111
    IGUAL           shift and go to state 112


state 74

    (30) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61

    tipo                           shift and go to state 113

state 75

    (31) declaracion -> LET ID IGUAL . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 114
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 76

    (32) asignacion -> ID IGUAL expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 115
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 77

    (23) llamada_funciones -> ID PARIZQ largumentos . PARDER PTCOMA
    (24) largumentos -> largumentos . COMA expresion

    PARDER          shift and go to state 116
    COMA            shift and go to state 117


state 78

    (25) largumentos -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          reduce using rule 25 (largumentos -> expresion .)
    COMA            reduce using rule 25 (largumentos -> expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 79

    (26) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 118
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 80

    (100) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 119
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 81

    (33) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (34) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (35) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (36) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 120
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 82

    (81) expresion -> expresion MAS . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 121
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 83

    (82) expresion -> expresion MENOS . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 122
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 84

    (83) expresion -> expresion POR . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 123
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 85

    (84) expresion -> expresion DIVIDIDO . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 124
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 86

    (85) expresion -> expresion MODULO . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 125
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 87

    (88) expresion -> expresion IGUALQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 126
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 88

    (89) expresion -> expresion NOIGUALQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 127
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 89

    (90) expresion -> expresion MENORQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 128
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 90

    (91) expresion -> expresion MAYORQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 129
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 91

    (92) expresion -> expresion MENORIQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 130
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 92

    (93) expresion -> expresion MAYORIQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 131
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 93

    (94) expresion -> expresion OR . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 132
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 94

    (95) expresion -> expresion AND . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 133
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 95

    (76) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (77) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 134
    TOOWNED         shift and go to state 135


state 96

    (96) expresion -> MENOS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 96 (expresion -> MENOS expresion .)
    MAS             reduce using rule 96 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 96 (expresion -> MENOS expresion .)
    POR             reduce using rule 96 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 96 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 96 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 96 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 96 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 96 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 96 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 96 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 96 (expresion -> MENOS expresion .)
    OR              reduce using rule 96 (expresion -> MENOS expresion .)
    AND             reduce using rule 96 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 96 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 96 (expresion -> MENOS expresion .)
    COMA            reduce using rule 96 (expresion -> MENOS expresion .)
    PTO             reduce using rule 96 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 96 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 96 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODULO          [ shift and go to state 86 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 97

    (86) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 136


state 98

    (98) expresion -> PARIZQ expresion . PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          shift and go to state 137
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 99

    (97) expresion -> NOT expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 97 (expresion -> NOT expresion .)
    MAS             reduce using rule 97 (expresion -> NOT expresion .)
    MENOS           reduce using rule 97 (expresion -> NOT expresion .)
    POR             reduce using rule 97 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 97 (expresion -> NOT expresion .)
    MODULO          reduce using rule 97 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 97 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 97 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 97 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 97 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 97 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 97 (expresion -> NOT expresion .)
    OR              reduce using rule 97 (expresion -> NOT expresion .)
    AND             reduce using rule 97 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 97 (expresion -> NOT expresion .)
    PARDER          reduce using rule 97 (expresion -> NOT expresion .)
    COMA            reduce using rule 97 (expresion -> NOT expresion .)
    PTO             reduce using rule 97 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 97 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 97 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODULO          [ shift and go to state 86 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 100

    (66) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 66 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 66 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 66 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 66 (tipo -> SIGNOI STR .)


state 101

    (111) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 138
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 102

    (122) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 139
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 103

    (41) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (42) imatch -> . opmatch COMA dmatch
    (43) opmatch -> . opmatch COMA cmatch
    (44) opmatch -> . opmatch COMA rmatch
    (45) opmatch -> . cmatch
    (46) opmatch -> . rmatch
    (47) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (48) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (53) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (49) bloque_match -> . bloque_match BARRAS expresion
    (50) bloque_match -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 140
    imatch                         shift and go to state 141
    opmatch                        shift and go to state 142
    cmatch                         shift and go to state 143
    rmatch                         shift and go to state 144
    bloque_match                   shift and go to state 145
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 104

    (56) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 146
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 105

    (57) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 147
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 106

    (59) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 59 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 59 (break -> BREAK expresion PTCOMA .)


state 107

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 148


state 108

    (22) lparame -> ID . DOSPT tipo

    DOSPT           shift and go to state 149


state 109

    (19) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (20) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 150
    COMA            shift and go to state 151


state 110

    (21) lparametros -> lparame .

    PARDER          reduce using rule 21 (lparametros -> lparame .)
    COMA            reduce using rule 21 (lparametros -> lparame .)


state 111

    (28) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61

    tipo                           shift and go to state 152

state 112

    (29) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 153
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 113

    (30) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 154


state 114

    (31) declaracion -> LET ID IGUAL expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 155
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 115

    (32) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 32 (asignacion -> ID IGUAL expresion PTCOMA .)


state 116

    (23) llamada_funciones -> ID PARIZQ largumentos PARDER . PTCOMA

    PTCOMA          shift and go to state 156


state 117

    (24) largumentos -> largumentos COMA . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 157
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 118

    (26) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (27) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    COMA            shift and go to state 158
    PARDER          shift and go to state 159
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 119

    (100) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (101) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (102) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (103) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (108) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (109) bloque_expresion -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 160
    bloque_expresion               shift and go to state 161
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 120

    (33) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (34) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (35) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (36) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 162
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 121

    (81) expresion -> expresion MAS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 81 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 81 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 81 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 81 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 81 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 81 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 81 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 81 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 81 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 81 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 81 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! POR             [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 122

    (82) expresion -> expresion MENOS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 82 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 82 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 82 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 82 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 82 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 82 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 82 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 82 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! POR             [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 123

    (83) expresion -> expresion POR expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 83 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 83 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 83 (expresion -> expresion POR expresion .)
    POR             reduce using rule 83 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 83 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 83 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 83 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 83 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 83 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 83 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 83 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 83 (expresion -> expresion POR expresion .)
    OR              reduce using rule 83 (expresion -> expresion POR expresion .)
    AND             reduce using rule 83 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 83 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 83 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 83 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 83 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 83 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODULO          [ shift and go to state 86 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 124

    (84) expresion -> expresion DIVIDIDO expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODULO          [ shift and go to state 86 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 125

    (85) expresion -> expresion MODULO expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 85 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 85 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 85 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 85 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 85 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 85 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 85 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 85 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 85 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 85 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 85 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 85 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODULO          [ shift and go to state 86 ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 126

    (88) expresion -> expresion IGUALQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 88 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 88 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 127

    (89) expresion -> expresion NOIGUALQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 128

    (90) expresion -> expresion MENORQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 90 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 90 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 90 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 129

    (91) expresion -> expresion MAYORQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 91 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 91 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 91 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 91 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 130

    (92) expresion -> expresion MENORIQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 92 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 92 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 92 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 131

    (93) expresion -> expresion MAYORIQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86

  ! MAS             [ reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 87 ]
  ! NOIGUALQUE      [ shift and go to state 88 ]
  ! MENORQUE        [ shift and go to state 89 ]
  ! MAYORQUE        [ shift and go to state 90 ]
  ! MENORIQUE       [ shift and go to state 91 ]
  ! MAYORIQUE       [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 132

    (94) expresion -> expresion OR expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 94 (expresion -> expresion OR expresion .)
    OR              reduce using rule 94 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 94 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 94 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 94 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    AND             shift and go to state 94

  ! MAS             [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 94 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 93 ]


state 133

    (95) expresion -> expresion AND expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 95 (expresion -> expresion AND expresion .)
    OR              reduce using rule 95 (expresion -> expresion AND expresion .)
    AND             reduce using rule 95 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 95 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 95 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 95 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92

  ! MAS             [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 95 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]


state 134

    (76) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 163


state 135

    (77) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 164


state 136

    (86) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 165
    POWF            shift and go to state 166


state 137

    (98) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 98 (expresion -> PARIZQ expresion PARDER .)


state 138

    (111) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (112) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (115) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (116) opmatch_asig -> . cmatch_asig
    (117) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (119) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (120) bloque_match_asig -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 167
    imatch_asig                    shift and go to state 168
    opmatch_asig                   shift and go to state 169
    cmatch_asig                    shift and go to state 170
    bloque_match_asig              shift and go to state 171
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 139

    (122) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 172
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 140

    (53) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (50) bloque_match -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTO             shift and go to state 173
    IGUAL           reduce using rule 50 (bloque_match -> expresion .)
    BARRAS          reduce using rule 50 (bloque_match -> expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 141

    (41) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 174


state 142

    (42) imatch -> opmatch . COMA dmatch
    (43) opmatch -> opmatch . COMA cmatch
    (44) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 175


state 143

    (45) opmatch -> cmatch .

    COMA            reduce using rule 45 (opmatch -> cmatch .)


state 144

    (46) opmatch -> rmatch .

    COMA            reduce using rule 46 (opmatch -> rmatch .)


state 145

    (47) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (48) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (49) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 176
    BARRAS          shift and go to state 177


state 146

    (56) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 56 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 147

    (57) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 178
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 148

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 179
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 149

    (22) lparame -> ID DOSPT . tipo
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR

    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61

    tipo                           shift and go to state 180

state 150

    (19) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 181


state 151

    (20) lparametros -> lparametros COMA . lparame
    (22) lparame -> . ID DOSPT tipo

    ID              shift and go to state 108

    lparame                        shift and go to state 182

state 152

    (28) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 183


state 153

    (29) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 184
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 154

    (30) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 185
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 155

    (31) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 31 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 156

    (23) llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .

    FN              reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    LET             reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    PRINTLN         reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    ID              reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    IF              reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    MATCH           reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    LOOP            reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    WHILE           reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    BREAK           reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    CONTINUE        reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    $end            reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    LLAVEDER        reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)
    COMA            reduce using rule 23 (llamada_funciones -> ID PARIZQ largumentos PARDER PTCOMA .)


state 157

    (24) largumentos -> largumentos COMA expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          reduce using rule 24 (largumentos -> largumentos COMA expresion .)
    COMA            reduce using rule 24 (largumentos -> largumentos COMA expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 158

    (26) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (67) expresiones -> . expresiones COMA expresion
    (68) expresiones -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 186
    expresiones                    shift and go to state 187
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 159

    (27) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 188


state 160

    (109) bloque_expresion -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 109 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 109 (bloque_expresion -> expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 161

    (100) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (101) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (102) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (103) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (108) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 189
    PTCOMA          shift and go to state 190


state 162

    (33) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (34) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (35) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (36) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (40) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (37) lelseif -> . lelseif elseif
    (38) lelseif -> . elseif
    (39) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 33 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 193

    else                           shift and go to state 191
    lelseif                        shift and go to state 192
    elseif                         shift and go to state 194

state 163

    (76) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 195


state 164

    (77) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 196


state 165

    (86) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 197


state 166

    (87) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 198


state 167

    (120) bloque_match_asig -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 120 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 120 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 168

    (111) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 199


state 169

    (112) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (115) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 200


state 170

    (116) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 116 (opmatch_asig -> cmatch_asig .)


state 171

    (117) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (119) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 201
    BARRAS          shift and go to state 202


state 172

    (122) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 122 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 173

    (53) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 203


state 174

    (41) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 41 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 175

    (42) imatch -> opmatch COMA . dmatch
    (43) opmatch -> opmatch COMA . cmatch
    (44) opmatch -> opmatch COMA . rmatch
    (51) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (52) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (47) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (48) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (53) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (49) bloque_match -> . bloque_match BARRAS expresion
    (50) bloque_match -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 207
    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    dmatch                         shift and go to state 204
    cmatch                         shift and go to state 205
    rmatch                         shift and go to state 206
    bloque_match                   shift and go to state 145
    expresion                      shift and go to state 140
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 176

    (47) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (48) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 208


state 177

    (49) bloque_match -> bloque_match BARRAS . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 209
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 178

    (57) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 57 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 179

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 210
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 180

    (22) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 22 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 22 (lparame -> ID DOSPT tipo .)


state 181

    (19) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 211
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 182

    (20) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 20 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 20 (lparametros -> lparametros COMA lparame .)


state 183

    (28) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 212
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 184

    (29) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 29 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 185

    (30) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 213
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 186

    (68) expresiones -> expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          reduce using rule 68 (expresiones -> expresion .)
    COMA            reduce using rule 68 (expresiones -> expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 187

    (26) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (67) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 215
    COMA            shift and go to state 214


state 188

    (27) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 27 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 189

    (100) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (101) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (102) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (103) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (107) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (104) elseifa -> . elseifa lif
    (105) elseifa -> . lif
    (106) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 100 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 218

    elsea                          shift and go to state 216
    elseifa                        shift and go to state 217
    lif                            shift and go to state 219

state 190

    (108) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 220
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 191

    (34) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 34 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 192

    (35) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (36) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (37) lelseif -> lelseif . elseif
    (40) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (39) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 193

    else                           shift and go to state 221
    elseif                         shift and go to state 222

state 193

    (40) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (39) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 223
    IF              shift and go to state 224


state 194

    (38) lelseif -> elseif .

    ELSE            reduce using rule 38 (lelseif -> elseif .)
    FN              reduce using rule 38 (lelseif -> elseif .)
    LET             reduce using rule 38 (lelseif -> elseif .)
    PRINTLN         reduce using rule 38 (lelseif -> elseif .)
    ID              reduce using rule 38 (lelseif -> elseif .)
    IF              reduce using rule 38 (lelseif -> elseif .)
    MATCH           reduce using rule 38 (lelseif -> elseif .)
    LOOP            reduce using rule 38 (lelseif -> elseif .)
    WHILE           reduce using rule 38 (lelseif -> elseif .)
    BREAK           reduce using rule 38 (lelseif -> elseif .)
    CONTINUE        reduce using rule 38 (lelseif -> elseif .)
    $end            reduce using rule 38 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 38 (lelseif -> elseif .)
    COMA            reduce using rule 38 (lelseif -> elseif .)


state 195

    (76) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 76 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 196

    (77) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 77 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 197

    (86) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 225
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 198

    (87) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 226
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 199

    (111) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 111 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 200

    (112) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (115) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (113) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (114) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (117) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (119) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (120) bloque_match_asig -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 229
    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    dmatch_asig                    shift and go to state 227
    cmatch_asig                    shift and go to state 228
    expresion                      shift and go to state 167
    bloque_match_asig              shift and go to state 171
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 201

    (117) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 230


state 202

    (119) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 231
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 203

    (53) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 232


state 204

    (42) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 42 (imatch -> opmatch COMA dmatch .)


state 205

    (43) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 43 (opmatch -> opmatch COMA cmatch .)


state 206

    (44) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 44 (opmatch -> opmatch COMA rmatch .)


state 207

    (51) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (52) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 233


state 208

    (47) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (48) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEIZQ        shift and go to state 234
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 235
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 209

    (49) bloque_match -> bloque_match BARRAS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 49 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 49 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 210

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 211

    (19) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 236
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 212

    (28) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 237
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 213

    (30) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 30 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 214

    (67) expresiones -> expresiones COMA . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 238
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 215

    (26) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 239


state 216

    (101) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 101 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 217

    (102) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (103) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (104) elseifa -> elseifa . lif
    (107) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (106) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 102 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 218

    elsea                          shift and go to state 240
    lif                            shift and go to state 241

state 218

    (107) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (106) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 242
    IF              shift and go to state 243


state 219

    (105) elseifa -> lif .

    ELSE            reduce using rule 105 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 105 (elseifa -> lif .)
    MAS             reduce using rule 105 (elseifa -> lif .)
    MENOS           reduce using rule 105 (elseifa -> lif .)
    POR             reduce using rule 105 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 105 (elseifa -> lif .)
    MODULO          reduce using rule 105 (elseifa -> lif .)
    IGUALQUE        reduce using rule 105 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 105 (elseifa -> lif .)
    MENORQUE        reduce using rule 105 (elseifa -> lif .)
    MAYORQUE        reduce using rule 105 (elseifa -> lif .)
    MENORIQUE       reduce using rule 105 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 105 (elseifa -> lif .)
    OR              reduce using rule 105 (elseifa -> lif .)
    AND             reduce using rule 105 (elseifa -> lif .)
    PTCOMA          reduce using rule 105 (elseifa -> lif .)
    PARDER          reduce using rule 105 (elseifa -> lif .)
    COMA            reduce using rule 105 (elseifa -> lif .)
    PTO             reduce using rule 105 (elseifa -> lif .)
    IGUAL           reduce using rule 105 (elseifa -> lif .)
    BARRAS          reduce using rule 105 (elseifa -> lif .)
    LLAVEDER        reduce using rule 105 (elseifa -> lif .)


state 220

    (108) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 108 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 108 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 221

    (36) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 222

    (37) lelseif -> lelseif elseif .

    ELSE            reduce using rule 37 (lelseif -> lelseif elseif .)
    FN              reduce using rule 37 (lelseif -> lelseif elseif .)
    LET             reduce using rule 37 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 37 (lelseif -> lelseif elseif .)
    ID              reduce using rule 37 (lelseif -> lelseif elseif .)
    IF              reduce using rule 37 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 37 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 37 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 37 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 37 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 37 (lelseif -> lelseif elseif .)
    $end            reduce using rule 37 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 37 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 37 (lelseif -> lelseif elseif .)


state 223

    (40) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 244
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 224

    (39) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 245
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 225

    (86) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    COMA            shift and go to state 246
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 226

    (87) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    COMA            shift and go to state 247
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 227

    (112) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 112 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 228

    (115) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 115 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 229

    (113) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (114) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 248


state 230

    (117) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (118) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 249
    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 250
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 231

    (119) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 119 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 119 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 232

    (53) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 251
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 233

    (51) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (52) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 252


state 234

    (47) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 253
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 235

    (48) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 48 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 236

    (19) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 19 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 237

    (28) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 28 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 238

    (67) expresiones -> expresiones COMA expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          reduce using rule 67 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 67 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 239

    (26) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 26 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 240

    (103) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 103 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 241

    (104) elseifa -> elseifa lif .

    ELSE            reduce using rule 104 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 104 (elseifa -> elseifa lif .)
    MAS             reduce using rule 104 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 104 (elseifa -> elseifa lif .)
    POR             reduce using rule 104 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 104 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 104 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 104 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 104 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 104 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 104 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 104 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 104 (elseifa -> elseifa lif .)
    OR              reduce using rule 104 (elseifa -> elseifa lif .)
    AND             reduce using rule 104 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 104 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 104 (elseifa -> elseifa lif .)
    COMA            reduce using rule 104 (elseifa -> elseifa lif .)
    PTO             reduce using rule 104 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 104 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 104 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 104 (elseifa -> elseifa lif .)


state 242

    (107) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (108) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (109) bloque_expresion -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    bloque_expresion               shift and go to state 254
    expresion                      shift and go to state 160
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 243

    (106) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 255
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 244

    (40) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 256
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 245

    (39) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 257
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 246

    (86) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 258
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 247

    (87) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    tipo                           shift and go to state 50
    expresion                      shift and go to state 259
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 248

    (113) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (114) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 260


state 249

    (117) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (108) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (109) bloque_expresion -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    bloque_expresion               shift and go to state 261
    expresion                      shift and go to state 160
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 250

    (118) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    COMA            reduce using rule 118 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 251

    (53) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 262
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 252

    (51) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (52) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEIZQ        shift and go to state 263
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 264
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 253

    (47) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 265
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 254

    (107) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (108) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 266
    PTCOMA          shift and go to state 190


state 255

    (106) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 267
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 256

    (40) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 40 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 257

    (39) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 268
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 258

    (86) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          shift and go to state 269
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 259

    (87) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    PARDER          shift and go to state 270
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 260

    (113) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (114) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 271
    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 272
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 261

    (117) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (108) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 273
    PTCOMA          shift and go to state 190


state 262

    (53) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 274


state 263

    (51) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 275
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 264

    (52) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 52 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 265

    (47) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 47 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 266

    (107) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 107 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 267

    (106) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (108) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (109) bloque_expresion -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    expresion                      shift and go to state 160
    bloque_expresion               shift and go to state 276
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 268

    (39) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 277
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 269

    (86) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 86 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 270

    (87) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 87 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 271

    (113) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (108) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (109) bloque_expresion -> . expresion
    (69) expresion -> . ID
    (70) expresion -> . ENTERO
    (71) expresion -> . DECIMAL
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . tostring
    (75) expresion -> . toowned
    (78) expresion -> . STR
    (79) expresion -> . CADENA
    (80) expresion -> . CARACTER
    (81) expresion -> . expresion MAS expresion
    (82) expresion -> . expresion MENOS expresion
    (83) expresion -> . expresion POR expresion
    (84) expresion -> . expresion DIVIDIDO expresion
    (85) expresion -> . expresion MODULO expresion
    (86) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (87) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (88) expresion -> . expresion IGUALQUE expresion
    (89) expresion -> . expresion NOIGUALQUE expresion
    (90) expresion -> . expresion MENORQUE expresion
    (91) expresion -> . expresion MAYORQUE expresion
    (92) expresion -> . expresion MENORIQUE expresion
    (93) expresion -> . expresion MAYORIQUE expresion
    (94) expresion -> . expresion OR expresion
    (95) expresion -> . expresion AND expresion
    (96) expresion -> . MENOS expresion
    (97) expresion -> . NOT expresion
    (98) expresion -> . PARIZQ expresion PARDER
    (99) expresion -> . if_asig
    (110) expresion -> . match_asig
    (121) expresion -> . loop_asig
    (76) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (77) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (61) tipo -> . I64
    (62) tipo -> . F64
    (63) tipo -> . BOOL
    (64) tipo -> . CHAR
    (65) tipo -> . STRING
    (66) tipo -> . SIGNOI STR
    (100) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (101) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (102) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (103) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (111) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (122) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    STR             shift and go to state 46
    CADENA          shift and go to state 47
    CARACTER        shift and go to state 48
    MENOS           shift and go to state 49
    NOT             shift and go to state 52
    PARIZQ          shift and go to state 51
    I64             shift and go to state 56
    F64             shift and go to state 57
    BOOL            shift and go to state 58
    CHAR            shift and go to state 59
    STRING          shift and go to state 60
    SIGNOI          shift and go to state 61
    IF              shift and go to state 37
    MATCH           shift and go to state 62
    LOOP            shift and go to state 63

    bloque_expresion               shift and go to state 278
    expresion                      shift and go to state 160
    tostring                       shift and go to state 44
    toowned                        shift and go to state 45
    tipo                           shift and go to state 50
    if_asig                        shift and go to state 53
    match_asig                     shift and go to state 54
    loop_asig                      shift and go to state 55

state 272

    (114) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (81) expresion -> expresion . MAS expresion
    (82) expresion -> expresion . MENOS expresion
    (83) expresion -> expresion . POR expresion
    (84) expresion -> expresion . DIVIDIDO expresion
    (85) expresion -> expresion . MODULO expresion
    (88) expresion -> expresion . IGUALQUE expresion
    (89) expresion -> expresion . NOIGUALQUE expresion
    (90) expresion -> expresion . MENORQUE expresion
    (91) expresion -> expresion . MAYORQUE expresion
    (92) expresion -> expresion . MENORIQUE expresion
    (93) expresion -> expresion . MAYORIQUE expresion
    (94) expresion -> expresion . OR expresion
    (95) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 114 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODULO          shift and go to state 86
    IGUALQUE        shift and go to state 87
    NOIGUALQUE      shift and go to state 88
    MENORQUE        shift and go to state 89
    MAYORQUE        shift and go to state 90
    MENORIQUE       shift and go to state 91
    MAYORIQUE       shift and go to state 92
    OR              shift and go to state 93
    AND             shift and go to state 94


state 273

    (117) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 117 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 274

    (53) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (54) rrmatch -> . instruccion
    (55) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEIZQ        shift and go to state 281
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    rrmatch                        shift and go to state 279
    instruccion                    shift and go to state 280
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 275

    (51) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 282
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 276

    (106) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (108) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 283
    PTCOMA          shift and go to state 190


state 277

    (39) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 39 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 278

    (113) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (108) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 284
    PTCOMA          shift and go to state 190


state 279

    (53) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 53 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 280

    (54) rrmatch -> instruccion .

    COMA            reduce using rule 54 (rrmatch -> instruccion .)


state 281

    (55) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instrucciones                  shift and go to state 285
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 282

    (51) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 51 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 283

    (106) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 106 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 284

    (113) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 113 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 285

    (55) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . continue
    (17) instruccion -> . funciones
    (18) instruccion -> . llamada_funciones
    (28) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (29) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (30) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET ID IGUAL expresion PTCOMA
    (26) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (27) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (32) asignacion -> . ID IGUAL expresion PTCOMA
    (33) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (34) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (56) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (57) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (58) break -> . BREAK PTCOMA
    (59) break -> . BREAK expresion PTCOMA
    (60) continue -> . CONTINUE PTCOMA
    (19) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (23) llamada_funciones -> . ID PARIZQ largumentos PARDER PTCOMA

    LLAVEDER        shift and go to state 286
    LET             shift and go to state 17
    PRINTLN         shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 22
    WHILE           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    FN              shift and go to state 29

    instruccion                    shift and go to state 27
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    continue                       shift and go to state 14
    funciones                      shift and go to state 15
    llamada_funciones              shift and go to state 16

state 286

    (55) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 55 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 47 resolved as shift
