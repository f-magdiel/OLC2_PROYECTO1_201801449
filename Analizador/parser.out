Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    instruccion -> declaracion_arreglos
Rule 21    instruccion -> forin
Rule 22    declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
Rule 23    tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER
Rule 24    tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER
Rule 25    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 26    funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 27    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 28    funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 29    lparametros -> lparametros COMA lparame
Rule 30    lparametros -> lparame
Rule 31    lparame -> ID DOSPT tipo
Rule 32    lparame -> ID DOSPT SIGNOI MUT tipo_arreglo
Rule 33    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 34    llamada_funciones -> ID PARIZQ PARDER
Rule 35    largumentos -> largumentos COMA largumento
Rule 36    largumentos -> largumento
Rule 37    largumento -> expresion
Rule 38    largumento -> SIGNOI MUT expresion
Rule 39    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 40    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 41    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 42    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 43    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 44    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 45    asignacion -> ID IGUAL expresion PTCOMA
Rule 46    asignacion -> ID lindices IGUAL expresion PTCOMA
Rule 47    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 48    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 49    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 50    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 51    lelseif -> lelseif elseif
Rule 52    lelseif -> elseif
Rule 53    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 54    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 55    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 56    imatch -> opmatch COMA dmatch
Rule 57    opmatch -> opmatch COMA cmatch
Rule 58    opmatch -> opmatch COMA rmatch
Rule 59    opmatch -> cmatch
Rule 60    opmatch -> rmatch
Rule 61    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 62    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 63    bloque_match -> bloque_match BARRAS expresion
Rule 64    bloque_match -> expresion
Rule 65    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 66    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 67    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 68    rrmatch -> instruccion
Rule 69    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 70    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 71    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 72    forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
Rule 73    forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
Rule 74    break -> BREAK PTCOMA
Rule 75    break -> BREAK expresion PTCOMA
Rule 76    continue -> CONTINUE PTCOMA
Rule 77    return -> RETURN expresion PTCOMA
Rule 78    tipo -> I64
Rule 79    tipo -> F64
Rule 80    tipo -> BOOL
Rule 81    tipo -> CHAR
Rule 82    tipo -> STRING
Rule 83    tipo -> USIZE
Rule 84    tipo -> SIGNOI STR
Rule 85    expresiones -> expresiones COMA expresion
Rule 86    expresiones -> expresion
Rule 87    expresion -> ID
Rule 88    expresion -> ENTERO
Rule 89    expresion -> DECIMAL
Rule 90    expresion -> TRUE
Rule 91    expresion -> FALSE
Rule 92    expresion -> tostring
Rule 93    expresion -> toowned
Rule 94    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 95    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 96    expresion -> STR
Rule 97    expresion -> CADENA
Rule 98    expresion -> CARACTER
Rule 99    expresion -> expresion MAS expresion
Rule 100   expresion -> expresion MENOS expresion
Rule 101   expresion -> expresion POR expresion
Rule 102   expresion -> expresion DIVIDIDO expresion
Rule 103   expresion -> expresion MODULO expresion
Rule 104   expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 105   expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 106   expresion -> expresion IGUALQUE expresion
Rule 107   expresion -> expresion NOIGUALQUE expresion
Rule 108   expresion -> expresion MENORQUE expresion
Rule 109   expresion -> expresion MAYORQUE expresion
Rule 110   expresion -> expresion MENORIQUE expresion
Rule 111   expresion -> expresion MAYORIQUE expresion
Rule 112   expresion -> expresion OR expresion
Rule 113   expresion -> expresion AND expresion
Rule 114   expresion -> MENOS expresion
Rule 115   expresion -> NOT expresion
Rule 116   expresion -> PARIZQ expresion PARDER
Rule 117   expresion -> llamada_funciones
Rule 118   expresion -> CORIZQ expresiones CORDER
Rule 119   expresion -> ID lindices
Rule 120   lindices -> lindices CORIZQ expresion CORDER
Rule 121   lindices -> CORIZQ expresion CORDER
Rule 122   expresion -> if_asig
Rule 123   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 124   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 125   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 126   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 127   elseifa -> elseifa lif
Rule 128   elseifa -> lif
Rule 129   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 130   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 131   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 132   bloque_expresion -> expresion
Rule 133   expresion -> match_asig
Rule 134   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 135   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 136   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 137   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 138   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 139   opmatch_asig -> cmatch_asig
Rule 140   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 141   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 142   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 143   bloque_match_asig -> expresion
Rule 144   expresion -> loop_asig
Rule 145   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 113
AS                   : 
BARRAS               : 63 142
BOOL                 : 80
BREAK                : 74 75
CADENA               : 94 95 97
CARACTER             : 98
CHAR                 : 81
COMA                 : 29 35 39 56 57 58 85 104 105 135 138
CONTINUE             : 76
CORDER               : 23 24 118 120 121
CORIZQ               : 23 24 118 120 121
DECIMAL              : 89
DIVIDIDO             : 102
DOSPT                : 22 31 32 41 43 104 104 105 105
ELSE                 : 53 54 129 130
ENTERO               : 88
F64                  : 79
FALSE                : 91
FN                   : 5 25 26 27 28
FOR                  : 72 73
GUIONB               : 65 66 136 137
I64                  : 78
ID                   : 22 25 26 27 28 31 32 33 34 41 42 43 44 45 46 72 73 87 119
IF                   : 47 48 49 50 53 123 124 125 126 129
IGUAL                : 22 41 42 43 44 45 46 61 62 65 66 67 67 136 137 140 141
IGUALQUE             : 106
IN                   : 72 73
LET                  : 22 41 42 43 44
LLAVEDER             : 5 25 26 27 28 47 48 49 50 53 54 55 61 65 69 70 71 72 73 123 124 125 126 129 130 134 136 140 145
LLAVEIZQ             : 5 25 26 27 28 47 48 49 50 53 54 55 61 65 69 70 71 72 73 123 124 125 126 129 130 134 136 140 145
LOOP                 : 70 145
MAIN                 : 5
MAS                  : 99
MATCH                : 55 134
MAYORIQUE            : 111
MAYORQUE             : 25 26 61 62 65 66 67 109 136 137 140 141
MENORIQUE            : 110
MENORQUE             : 108
MENOS                : 25 26 100 114
MODULO               : 103
MUT                  : 22 32 38 41 42
NOIGUALQUE           : 107
NOT                  : 39 40 115
OR                   : 112
PARDER               : 5 25 26 27 28 33 34 39 40 94 95 104 105 116
PARIZQ               : 5 25 26 27 28 33 34 39 40 94 95 104 105 116
POR                  : 101
POW                  : 104
POWF                 : 105
PRINTLN              : 39 40
PTCOMA               : 19 22 23 24 39 40 41 42 43 44 45 46 74 75 76 77 131
PTO                  : 67 67 73 73 94 95
RETURN               : 77
SIGNOI               : 32 38 84
STR                  : 84 96
STRING               : 82
TOOWNED              : 95
TOSTRING             : 94
TRUE                 : 90
USIZE                : 83
WHILE                : 71
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 123 124 125 126 129 130 131 136 140
bloque_match         : 61 62 63
bloque_match_asig    : 140 141 142
break                : 15
cmatch               : 57 59
cmatch_asig          : 138 139
continue             : 17
declaracion          : 8
declaracion_arreglos : 20
dmatch               : 56
dmatch_asig          : 135
else                 : 48 50
elsea                : 124 126
elseif               : 51 52
elseifa              : 125 126 127
expresion            : 22 23 24 37 38 39 40 41 42 43 44 45 46 47 48 49 50 53 55 63 64 67 67 71 72 73 73 75 77 85 86 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 115 116 120 121 123 124 125 126 129 131 132 134 137 141 142 143
expresiones          : 39 85 118
forin                : 21
funciones            : 18
if                   : 11
if_asig              : 122
imatch               : 55
imatch_asig          : 134
imprimir             : 9
inicio               : 0
instruccion          : 6 7 62 66 68
instrucciones        : 1 1 2 3 5 6 25 26 27 28 47 48 49 50 53 54 61 65 69 70 71 72 73 145
largumento           : 35 36
largumentos          : 33 35
lelseif              : 49 50 51
lif                  : 127 128
lindices             : 46 119 120
llamada_funciones    : 19 117
loop                 : 13
loop_asig            : 144
lparame              : 29 30
lparametros          : 25 27 29
main                 : 1 2 3 4
match                : 12
match_asig           : 133
opmatch              : 56 57 58
opmatch_asig         : 135 138
return               : 16
rmatch               : 58 60
rrmatch              : 67
tipo                 : 24 25 26 31 41 43 104 105
tipo_arreglo         : 22 23 32
toowned              : 93
tostring             : 92
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FOR             shift and go to state 30

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FOR             shift and go to state 30

    main                           shift and go to state 31
    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 33
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    FOR             reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 35
    ID              shift and go to state 36


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    FOR             reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    FOR             reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    FOR             reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    FOR             reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    FOR             reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    FOR             reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    FOR             reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    FOR             reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    FOR             reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    FOR             reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    FOR             reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 37


state 18

    (20) instruccion -> declaracion_arreglos .

    FN              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LET             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    PRINTLN         reduce using rule 20 (instruccion -> declaracion_arreglos .)
    ID              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    IF              reduce using rule 20 (instruccion -> declaracion_arreglos .)
    MATCH           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LOOP            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    WHILE           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    BREAK           reduce using rule 20 (instruccion -> declaracion_arreglos .)
    RETURN          reduce using rule 20 (instruccion -> declaracion_arreglos .)
    CONTINUE        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    FOR             reduce using rule 20 (instruccion -> declaracion_arreglos .)
    $end            reduce using rule 20 (instruccion -> declaracion_arreglos .)
    LLAVEDER        reduce using rule 20 (instruccion -> declaracion_arreglos .)
    COMA            reduce using rule 20 (instruccion -> declaracion_arreglos .)


state 19

    (21) instruccion -> forin .

    FN              reduce using rule 21 (instruccion -> forin .)
    LET             reduce using rule 21 (instruccion -> forin .)
    PRINTLN         reduce using rule 21 (instruccion -> forin .)
    ID              reduce using rule 21 (instruccion -> forin .)
    IF              reduce using rule 21 (instruccion -> forin .)
    MATCH           reduce using rule 21 (instruccion -> forin .)
    LOOP            reduce using rule 21 (instruccion -> forin .)
    WHILE           reduce using rule 21 (instruccion -> forin .)
    BREAK           reduce using rule 21 (instruccion -> forin .)
    RETURN          reduce using rule 21 (instruccion -> forin .)
    CONTINUE        reduce using rule 21 (instruccion -> forin .)
    FOR             reduce using rule 21 (instruccion -> forin .)
    $end            reduce using rule 21 (instruccion -> forin .)
    LLAVEDER        reduce using rule 21 (instruccion -> forin .)
    COMA            reduce using rule 21 (instruccion -> forin .)


state 20

    (41) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> LET . ID IGUAL expresion PTCOMA
    (22) declaracion_arreglos -> LET . MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    MUT             shift and go to state 38
    ID              shift and go to state 39


state 21

    (45) asignacion -> ID . IGUAL expresion PTCOMA
    (46) asignacion -> ID . lindices IGUAL expresion PTCOMA
    (33) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (34) llamada_funciones -> ID . PARIZQ PARDER
    (120) lindices -> . lindices CORIZQ expresion CORDER
    (121) lindices -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 40
    PARIZQ          shift and go to state 42
    CORIZQ          shift and go to state 43

    lindices                       shift and go to state 41

state 22

    (39) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 44


state 23

    (47) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 46
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 24

    (55) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 75
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 25

    (70) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 76


state 26

    (71) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 77
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 27

    (74) break -> BREAK . PTCOMA
    (75) break -> BREAK . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 78
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 79
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 28

    (77) return -> RETURN . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 80
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 29

    (76) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 81


state 30

    (72) forin -> FOR . ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> FOR . ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 82


state 31

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 83
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 32

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 33

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 34

    (25) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN . ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> FN . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 36


state 35

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 84


state 36

    (25) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID . PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> FN ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 85


state 37

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 38

    (41) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> LET MUT . ID IGUAL expresion PTCOMA
    (22) declaracion_arreglos -> LET MUT . ID DOSPT tipo_arreglo IGUAL expresion PTCOMA

    ID              shift and go to state 86


state 39

    (43) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 87
    IGUAL           shift and go to state 88


state 40

    (45) asignacion -> ID IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 89
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 41

    (46) asignacion -> ID lindices . IGUAL expresion PTCOMA
    (120) lindices -> lindices . CORIZQ expresion CORDER

    IGUAL           shift and go to state 90
    CORIZQ          shift and go to state 91


state 42

    (33) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (34) llamada_funciones -> ID PARIZQ . PARDER
    (35) largumentos -> . largumentos COMA largumento
    (36) largumentos -> . largumento
    (37) largumento -> . expresion
    (38) largumento -> . SIGNOI MUT expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 93
    SIGNOI          shift and go to state 96
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    largumentos                    shift and go to state 92
    largumento                     shift and go to state 94
    expresion                      shift and go to state 95
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 43

    (121) lindices -> CORIZQ . expresion CORDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 97
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 44

    (39) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 98


state 45

    (123) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 99
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 46

    (47) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (48) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 100
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 47

    (87) expresion -> ID .
    (119) expresion -> ID . lindices
    (33) llamada_funciones -> ID . PARIZQ largumentos PARDER
    (34) llamada_funciones -> ID . PARIZQ PARDER
    (120) lindices -> . lindices CORIZQ expresion CORDER
    (121) lindices -> . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 87 (expresion -> ID .)
    MAS             reduce using rule 87 (expresion -> ID .)
    MENOS           reduce using rule 87 (expresion -> ID .)
    POR             reduce using rule 87 (expresion -> ID .)
    DIVIDIDO        reduce using rule 87 (expresion -> ID .)
    MODULO          reduce using rule 87 (expresion -> ID .)
    IGUALQUE        reduce using rule 87 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 87 (expresion -> ID .)
    MENORQUE        reduce using rule 87 (expresion -> ID .)
    MAYORQUE        reduce using rule 87 (expresion -> ID .)
    MENORIQUE       reduce using rule 87 (expresion -> ID .)
    MAYORIQUE       reduce using rule 87 (expresion -> ID .)
    OR              reduce using rule 87 (expresion -> ID .)
    AND             reduce using rule 87 (expresion -> ID .)
    PTCOMA          reduce using rule 87 (expresion -> ID .)
    PARDER          reduce using rule 87 (expresion -> ID .)
    COMA            reduce using rule 87 (expresion -> ID .)
    CORDER          reduce using rule 87 (expresion -> ID .)
    PTO             reduce using rule 87 (expresion -> ID .)
    IGUAL           reduce using rule 87 (expresion -> ID .)
    BARRAS          reduce using rule 87 (expresion -> ID .)
    LLAVEDER        reduce using rule 87 (expresion -> ID .)
    PARIZQ          shift and go to state 42
    CORIZQ          shift and go to state 43

    lindices                       shift and go to state 114

state 48

    (88) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 88 (expresion -> ENTERO .)
    MAS             reduce using rule 88 (expresion -> ENTERO .)
    MENOS           reduce using rule 88 (expresion -> ENTERO .)
    POR             reduce using rule 88 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 88 (expresion -> ENTERO .)
    MODULO          reduce using rule 88 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 88 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 88 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 88 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 88 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 88 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 88 (expresion -> ENTERO .)
    OR              reduce using rule 88 (expresion -> ENTERO .)
    AND             reduce using rule 88 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 88 (expresion -> ENTERO .)
    PARDER          reduce using rule 88 (expresion -> ENTERO .)
    COMA            reduce using rule 88 (expresion -> ENTERO .)
    CORDER          reduce using rule 88 (expresion -> ENTERO .)
    PTO             reduce using rule 88 (expresion -> ENTERO .)
    IGUAL           reduce using rule 88 (expresion -> ENTERO .)
    BARRAS          reduce using rule 88 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 88 (expresion -> ENTERO .)


state 49

    (89) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 89 (expresion -> DECIMAL .)
    MAS             reduce using rule 89 (expresion -> DECIMAL .)
    MENOS           reduce using rule 89 (expresion -> DECIMAL .)
    POR             reduce using rule 89 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 89 (expresion -> DECIMAL .)
    MODULO          reduce using rule 89 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 89 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 89 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 89 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 89 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 89 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 89 (expresion -> DECIMAL .)
    OR              reduce using rule 89 (expresion -> DECIMAL .)
    AND             reduce using rule 89 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 89 (expresion -> DECIMAL .)
    PARDER          reduce using rule 89 (expresion -> DECIMAL .)
    COMA            reduce using rule 89 (expresion -> DECIMAL .)
    CORDER          reduce using rule 89 (expresion -> DECIMAL .)
    PTO             reduce using rule 89 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 89 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 89 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 89 (expresion -> DECIMAL .)


state 50

    (90) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 90 (expresion -> TRUE .)
    MAS             reduce using rule 90 (expresion -> TRUE .)
    MENOS           reduce using rule 90 (expresion -> TRUE .)
    POR             reduce using rule 90 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 90 (expresion -> TRUE .)
    MODULO          reduce using rule 90 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 90 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 90 (expresion -> TRUE .)
    MENORQUE        reduce using rule 90 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 90 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 90 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 90 (expresion -> TRUE .)
    OR              reduce using rule 90 (expresion -> TRUE .)
    AND             reduce using rule 90 (expresion -> TRUE .)
    PTCOMA          reduce using rule 90 (expresion -> TRUE .)
    PARDER          reduce using rule 90 (expresion -> TRUE .)
    COMA            reduce using rule 90 (expresion -> TRUE .)
    CORDER          reduce using rule 90 (expresion -> TRUE .)
    PTO             reduce using rule 90 (expresion -> TRUE .)
    IGUAL           reduce using rule 90 (expresion -> TRUE .)
    BARRAS          reduce using rule 90 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 90 (expresion -> TRUE .)


state 51

    (91) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 91 (expresion -> FALSE .)
    MAS             reduce using rule 91 (expresion -> FALSE .)
    MENOS           reduce using rule 91 (expresion -> FALSE .)
    POR             reduce using rule 91 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 91 (expresion -> FALSE .)
    MODULO          reduce using rule 91 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 91 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 91 (expresion -> FALSE .)
    MENORQUE        reduce using rule 91 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 91 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 91 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 91 (expresion -> FALSE .)
    OR              reduce using rule 91 (expresion -> FALSE .)
    AND             reduce using rule 91 (expresion -> FALSE .)
    PTCOMA          reduce using rule 91 (expresion -> FALSE .)
    PARDER          reduce using rule 91 (expresion -> FALSE .)
    COMA            reduce using rule 91 (expresion -> FALSE .)
    CORDER          reduce using rule 91 (expresion -> FALSE .)
    PTO             reduce using rule 91 (expresion -> FALSE .)
    IGUAL           reduce using rule 91 (expresion -> FALSE .)
    BARRAS          reduce using rule 91 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 91 (expresion -> FALSE .)


state 52

    (92) expresion -> tostring .

    LLAVEIZQ        reduce using rule 92 (expresion -> tostring .)
    MAS             reduce using rule 92 (expresion -> tostring .)
    MENOS           reduce using rule 92 (expresion -> tostring .)
    POR             reduce using rule 92 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 92 (expresion -> tostring .)
    MODULO          reduce using rule 92 (expresion -> tostring .)
    IGUALQUE        reduce using rule 92 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 92 (expresion -> tostring .)
    MENORQUE        reduce using rule 92 (expresion -> tostring .)
    MAYORQUE        reduce using rule 92 (expresion -> tostring .)
    MENORIQUE       reduce using rule 92 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 92 (expresion -> tostring .)
    OR              reduce using rule 92 (expresion -> tostring .)
    AND             reduce using rule 92 (expresion -> tostring .)
    PTCOMA          reduce using rule 92 (expresion -> tostring .)
    PARDER          reduce using rule 92 (expresion -> tostring .)
    COMA            reduce using rule 92 (expresion -> tostring .)
    CORDER          reduce using rule 92 (expresion -> tostring .)
    PTO             reduce using rule 92 (expresion -> tostring .)
    IGUAL           reduce using rule 92 (expresion -> tostring .)
    BARRAS          reduce using rule 92 (expresion -> tostring .)
    LLAVEDER        reduce using rule 92 (expresion -> tostring .)


state 53

    (93) expresion -> toowned .

    LLAVEIZQ        reduce using rule 93 (expresion -> toowned .)
    MAS             reduce using rule 93 (expresion -> toowned .)
    MENOS           reduce using rule 93 (expresion -> toowned .)
    POR             reduce using rule 93 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 93 (expresion -> toowned .)
    MODULO          reduce using rule 93 (expresion -> toowned .)
    IGUALQUE        reduce using rule 93 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 93 (expresion -> toowned .)
    MENORQUE        reduce using rule 93 (expresion -> toowned .)
    MAYORQUE        reduce using rule 93 (expresion -> toowned .)
    MENORIQUE       reduce using rule 93 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 93 (expresion -> toowned .)
    OR              reduce using rule 93 (expresion -> toowned .)
    AND             reduce using rule 93 (expresion -> toowned .)
    PTCOMA          reduce using rule 93 (expresion -> toowned .)
    PARDER          reduce using rule 93 (expresion -> toowned .)
    COMA            reduce using rule 93 (expresion -> toowned .)
    CORDER          reduce using rule 93 (expresion -> toowned .)
    PTO             reduce using rule 93 (expresion -> toowned .)
    IGUAL           reduce using rule 93 (expresion -> toowned .)
    BARRAS          reduce using rule 93 (expresion -> toowned .)
    LLAVEDER        reduce using rule 93 (expresion -> toowned .)


state 54

    (96) expresion -> STR .

    LLAVEIZQ        reduce using rule 96 (expresion -> STR .)
    MAS             reduce using rule 96 (expresion -> STR .)
    MENOS           reduce using rule 96 (expresion -> STR .)
    POR             reduce using rule 96 (expresion -> STR .)
    DIVIDIDO        reduce using rule 96 (expresion -> STR .)
    MODULO          reduce using rule 96 (expresion -> STR .)
    IGUALQUE        reduce using rule 96 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 96 (expresion -> STR .)
    MENORQUE        reduce using rule 96 (expresion -> STR .)
    MAYORQUE        reduce using rule 96 (expresion -> STR .)
    MENORIQUE       reduce using rule 96 (expresion -> STR .)
    MAYORIQUE       reduce using rule 96 (expresion -> STR .)
    OR              reduce using rule 96 (expresion -> STR .)
    AND             reduce using rule 96 (expresion -> STR .)
    PTCOMA          reduce using rule 96 (expresion -> STR .)
    PARDER          reduce using rule 96 (expresion -> STR .)
    COMA            reduce using rule 96 (expresion -> STR .)
    CORDER          reduce using rule 96 (expresion -> STR .)
    PTO             reduce using rule 96 (expresion -> STR .)
    IGUAL           reduce using rule 96 (expresion -> STR .)
    BARRAS          reduce using rule 96 (expresion -> STR .)
    LLAVEDER        reduce using rule 96 (expresion -> STR .)


state 55

    (97) expresion -> CADENA .
    (94) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (95) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 97 (expresion -> CADENA .)
    MAS             reduce using rule 97 (expresion -> CADENA .)
    MENOS           reduce using rule 97 (expresion -> CADENA .)
    POR             reduce using rule 97 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 97 (expresion -> CADENA .)
    MODULO          reduce using rule 97 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 97 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 97 (expresion -> CADENA .)
    MENORQUE        reduce using rule 97 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 97 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 97 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 97 (expresion -> CADENA .)
    OR              reduce using rule 97 (expresion -> CADENA .)
    AND             reduce using rule 97 (expresion -> CADENA .)
    PTCOMA          reduce using rule 97 (expresion -> CADENA .)
    PARDER          reduce using rule 97 (expresion -> CADENA .)
    COMA            reduce using rule 97 (expresion -> CADENA .)
    CORDER          reduce using rule 97 (expresion -> CADENA .)
    IGUAL           reduce using rule 97 (expresion -> CADENA .)
    BARRAS          reduce using rule 97 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 97 (expresion -> CADENA .)
    PTO             shift and go to state 115

  ! PTO             [ reduce using rule 97 (expresion -> CADENA .) ]


state 56

    (98) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 98 (expresion -> CARACTER .)
    MAS             reduce using rule 98 (expresion -> CARACTER .)
    MENOS           reduce using rule 98 (expresion -> CARACTER .)
    POR             reduce using rule 98 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 98 (expresion -> CARACTER .)
    MODULO          reduce using rule 98 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 98 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 98 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 98 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 98 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 98 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 98 (expresion -> CARACTER .)
    OR              reduce using rule 98 (expresion -> CARACTER .)
    AND             reduce using rule 98 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 98 (expresion -> CARACTER .)
    PARDER          reduce using rule 98 (expresion -> CARACTER .)
    COMA            reduce using rule 98 (expresion -> CARACTER .)
    CORDER          reduce using rule 98 (expresion -> CARACTER .)
    PTO             reduce using rule 98 (expresion -> CARACTER .)
    IGUAL           reduce using rule 98 (expresion -> CARACTER .)
    BARRAS          reduce using rule 98 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 98 (expresion -> CARACTER .)


state 57

    (114) expresion -> MENOS . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 116
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 58

    (104) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 117


state 59

    (116) expresion -> PARIZQ . expresion PARDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 118
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 60

    (115) expresion -> NOT . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 119
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 61

    (117) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 117 (expresion -> llamada_funciones .)
    MAS             reduce using rule 117 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 117 (expresion -> llamada_funciones .)
    POR             reduce using rule 117 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 117 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 117 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 117 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 117 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 117 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 117 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 117 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 117 (expresion -> llamada_funciones .)
    OR              reduce using rule 117 (expresion -> llamada_funciones .)
    AND             reduce using rule 117 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 117 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 117 (expresion -> llamada_funciones .)
    COMA            reduce using rule 117 (expresion -> llamada_funciones .)
    CORDER          reduce using rule 117 (expresion -> llamada_funciones .)
    PTO             reduce using rule 117 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 117 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 117 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 117 (expresion -> llamada_funciones .)


state 62

    (118) expresion -> CORIZQ . expresiones CORDER
    (85) expresiones -> . expresiones COMA expresion
    (86) expresiones -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresiones                    shift and go to state 120
    expresion                      shift and go to state 121
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 63

    (122) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 122 (expresion -> if_asig .)
    MAS             reduce using rule 122 (expresion -> if_asig .)
    MENOS           reduce using rule 122 (expresion -> if_asig .)
    POR             reduce using rule 122 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 122 (expresion -> if_asig .)
    MODULO          reduce using rule 122 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 122 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 122 (expresion -> if_asig .)
    MENORQUE        reduce using rule 122 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 122 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 122 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 122 (expresion -> if_asig .)
    OR              reduce using rule 122 (expresion -> if_asig .)
    AND             reduce using rule 122 (expresion -> if_asig .)
    PTCOMA          reduce using rule 122 (expresion -> if_asig .)
    PARDER          reduce using rule 122 (expresion -> if_asig .)
    COMA            reduce using rule 122 (expresion -> if_asig .)
    CORDER          reduce using rule 122 (expresion -> if_asig .)
    PTO             reduce using rule 122 (expresion -> if_asig .)
    IGUAL           reduce using rule 122 (expresion -> if_asig .)
    BARRAS          reduce using rule 122 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 122 (expresion -> if_asig .)


state 64

    (133) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 133 (expresion -> match_asig .)
    MAS             reduce using rule 133 (expresion -> match_asig .)
    MENOS           reduce using rule 133 (expresion -> match_asig .)
    POR             reduce using rule 133 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 133 (expresion -> match_asig .)
    MODULO          reduce using rule 133 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 133 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 133 (expresion -> match_asig .)
    MENORQUE        reduce using rule 133 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 133 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 133 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 133 (expresion -> match_asig .)
    OR              reduce using rule 133 (expresion -> match_asig .)
    AND             reduce using rule 133 (expresion -> match_asig .)
    PTCOMA          reduce using rule 133 (expresion -> match_asig .)
    PARDER          reduce using rule 133 (expresion -> match_asig .)
    COMA            reduce using rule 133 (expresion -> match_asig .)
    CORDER          reduce using rule 133 (expresion -> match_asig .)
    PTO             reduce using rule 133 (expresion -> match_asig .)
    IGUAL           reduce using rule 133 (expresion -> match_asig .)
    BARRAS          reduce using rule 133 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 133 (expresion -> match_asig .)


state 65

    (144) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 144 (expresion -> loop_asig .)
    MAS             reduce using rule 144 (expresion -> loop_asig .)
    MENOS           reduce using rule 144 (expresion -> loop_asig .)
    POR             reduce using rule 144 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 144 (expresion -> loop_asig .)
    MODULO          reduce using rule 144 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 144 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 144 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 144 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 144 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 144 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 144 (expresion -> loop_asig .)
    OR              reduce using rule 144 (expresion -> loop_asig .)
    AND             reduce using rule 144 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 144 (expresion -> loop_asig .)
    PARDER          reduce using rule 144 (expresion -> loop_asig .)
    COMA            reduce using rule 144 (expresion -> loop_asig .)
    CORDER          reduce using rule 144 (expresion -> loop_asig .)
    PTO             reduce using rule 144 (expresion -> loop_asig .)
    IGUAL           reduce using rule 144 (expresion -> loop_asig .)
    BARRAS          reduce using rule 144 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 144 (expresion -> loop_asig .)


state 66

    (78) tipo -> I64 .

    DOSPT           reduce using rule 78 (tipo -> I64 .)
    IGUAL           reduce using rule 78 (tipo -> I64 .)
    PARDER          reduce using rule 78 (tipo -> I64 .)
    COMA            reduce using rule 78 (tipo -> I64 .)
    PTCOMA          reduce using rule 78 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 78 (tipo -> I64 .)


state 67

    (79) tipo -> F64 .

    DOSPT           reduce using rule 79 (tipo -> F64 .)
    IGUAL           reduce using rule 79 (tipo -> F64 .)
    PARDER          reduce using rule 79 (tipo -> F64 .)
    COMA            reduce using rule 79 (tipo -> F64 .)
    PTCOMA          reduce using rule 79 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 79 (tipo -> F64 .)


state 68

    (80) tipo -> BOOL .

    DOSPT           reduce using rule 80 (tipo -> BOOL .)
    IGUAL           reduce using rule 80 (tipo -> BOOL .)
    PARDER          reduce using rule 80 (tipo -> BOOL .)
    COMA            reduce using rule 80 (tipo -> BOOL .)
    PTCOMA          reduce using rule 80 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 80 (tipo -> BOOL .)


state 69

    (81) tipo -> CHAR .

    DOSPT           reduce using rule 81 (tipo -> CHAR .)
    IGUAL           reduce using rule 81 (tipo -> CHAR .)
    PARDER          reduce using rule 81 (tipo -> CHAR .)
    COMA            reduce using rule 81 (tipo -> CHAR .)
    PTCOMA          reduce using rule 81 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 81 (tipo -> CHAR .)


state 70

    (82) tipo -> STRING .

    DOSPT           reduce using rule 82 (tipo -> STRING .)
    IGUAL           reduce using rule 82 (tipo -> STRING .)
    PARDER          reduce using rule 82 (tipo -> STRING .)
    COMA            reduce using rule 82 (tipo -> STRING .)
    PTCOMA          reduce using rule 82 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 82 (tipo -> STRING .)


state 71

    (83) tipo -> USIZE .

    DOSPT           reduce using rule 83 (tipo -> USIZE .)
    IGUAL           reduce using rule 83 (tipo -> USIZE .)
    PARDER          reduce using rule 83 (tipo -> USIZE .)
    COMA            reduce using rule 83 (tipo -> USIZE .)
    PTCOMA          reduce using rule 83 (tipo -> USIZE .)
    LLAVEIZQ        reduce using rule 83 (tipo -> USIZE .)


state 72

    (84) tipo -> SIGNOI . STR

    STR             shift and go to state 122


state 73

    (134) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 123
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 74

    (145) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 124


state 75

    (55) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 125
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 76

    (70) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 126
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 77

    (71) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 127
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 78

    (74) break -> BREAK PTCOMA .

    FN              reduce using rule 74 (break -> BREAK PTCOMA .)
    LET             reduce using rule 74 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 74 (break -> BREAK PTCOMA .)
    ID              reduce using rule 74 (break -> BREAK PTCOMA .)
    IF              reduce using rule 74 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 74 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 74 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 74 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 74 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 74 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 74 (break -> BREAK PTCOMA .)
    FOR             reduce using rule 74 (break -> BREAK PTCOMA .)
    $end            reduce using rule 74 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 74 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 74 (break -> BREAK PTCOMA .)


state 79

    (75) break -> BREAK expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 128
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 80

    (77) return -> RETURN expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 129
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 81

    (76) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 76 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 76 (continue -> CONTINUE PTCOMA .)


state 82

    (72) forin -> FOR ID . IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> FOR ID . IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    IN              shift and go to state 130


state 83

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 84

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 131


state 85

    (25) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> FN ID PARIZQ . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> FN ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) lparametros -> . lparametros COMA lparame
    (30) lparametros -> . lparame
    (31) lparame -> . ID DOSPT tipo
    (32) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    PARDER          shift and go to state 134
    ID              shift and go to state 132

    lparametros                    shift and go to state 133
    lparame                        shift and go to state 135

state 86

    (41) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> LET MUT ID . IGUAL expresion PTCOMA
    (22) declaracion_arreglos -> LET MUT ID . DOSPT tipo_arreglo IGUAL expresion PTCOMA

    DOSPT           shift and go to state 136
    IGUAL           shift and go to state 137


state 87

    (43) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR

    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72

    tipo                           shift and go to state 138

state 88

    (44) declaracion -> LET ID IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 139
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 89

    (45) asignacion -> ID IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 140
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 90

    (46) asignacion -> ID lindices IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 141
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 91

    (120) lindices -> lindices CORIZQ . expresion CORDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 142
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 92

    (33) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (35) largumentos -> largumentos . COMA largumento

    PARDER          shift and go to state 143
    COMA            shift and go to state 144


state 93

    (34) llamada_funciones -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MAS             reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    POR             reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORQUE        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORQUE        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MENORIQUE       reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    OR              reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    AND             reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    COMA            reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    PTO             reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    BARRAS          reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 34 (llamada_funciones -> ID PARIZQ PARDER .)


state 94

    (36) largumentos -> largumento .

    PARDER          reduce using rule 36 (largumentos -> largumento .)
    COMA            reduce using rule 36 (largumentos -> largumento .)


state 95

    (37) largumento -> expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PARDER          reduce using rule 37 (largumento -> expresion .)
    COMA            reduce using rule 37 (largumento -> expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 96

    (38) largumento -> SIGNOI . MUT expresion
    (84) tipo -> SIGNOI . STR

    MUT             shift and go to state 145
    STR             shift and go to state 122


state 97

    (121) lindices -> CORIZQ expresion . CORDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          shift and go to state 146
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 98

    (39) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 147
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 99

    (123) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 148
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 100

    (47) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (48) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (49) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (50) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 101

    (99) expresion -> expresion MAS . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 150
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 102

    (100) expresion -> expresion MENOS . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 151
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 103

    (101) expresion -> expresion POR . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 152
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 104

    (102) expresion -> expresion DIVIDIDO . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 153
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 105

    (103) expresion -> expresion MODULO . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 154
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 106

    (106) expresion -> expresion IGUALQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 155
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 107

    (107) expresion -> expresion NOIGUALQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 156
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 108

    (108) expresion -> expresion MENORQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 157
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 109

    (109) expresion -> expresion MAYORQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 158
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 110

    (110) expresion -> expresion MENORIQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 159
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 111

    (111) expresion -> expresion MAYORIQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 160
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 112

    (112) expresion -> expresion OR . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 161
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 113

    (113) expresion -> expresion AND . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 162
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 114

    (119) expresion -> ID lindices .
    (120) lindices -> lindices . CORIZQ expresion CORDER

    LLAVEIZQ        reduce using rule 119 (expresion -> ID lindices .)
    MAS             reduce using rule 119 (expresion -> ID lindices .)
    MENOS           reduce using rule 119 (expresion -> ID lindices .)
    POR             reduce using rule 119 (expresion -> ID lindices .)
    DIVIDIDO        reduce using rule 119 (expresion -> ID lindices .)
    MODULO          reduce using rule 119 (expresion -> ID lindices .)
    IGUALQUE        reduce using rule 119 (expresion -> ID lindices .)
    NOIGUALQUE      reduce using rule 119 (expresion -> ID lindices .)
    MENORQUE        reduce using rule 119 (expresion -> ID lindices .)
    MAYORQUE        reduce using rule 119 (expresion -> ID lindices .)
    MENORIQUE       reduce using rule 119 (expresion -> ID lindices .)
    MAYORIQUE       reduce using rule 119 (expresion -> ID lindices .)
    OR              reduce using rule 119 (expresion -> ID lindices .)
    AND             reduce using rule 119 (expresion -> ID lindices .)
    PTCOMA          reduce using rule 119 (expresion -> ID lindices .)
    PARDER          reduce using rule 119 (expresion -> ID lindices .)
    COMA            reduce using rule 119 (expresion -> ID lindices .)
    CORDER          reduce using rule 119 (expresion -> ID lindices .)
    PTO             reduce using rule 119 (expresion -> ID lindices .)
    IGUAL           reduce using rule 119 (expresion -> ID lindices .)
    BARRAS          reduce using rule 119 (expresion -> ID lindices .)
    LLAVEDER        reduce using rule 119 (expresion -> ID lindices .)
    CORIZQ          shift and go to state 91


state 115

    (94) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (95) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 163
    TOOWNED         shift and go to state 164


state 116

    (114) expresion -> MENOS expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 114 (expresion -> MENOS expresion .)
    MAS             reduce using rule 114 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 114 (expresion -> MENOS expresion .)
    POR             reduce using rule 114 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 114 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 114 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 114 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 114 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 114 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 114 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 114 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 114 (expresion -> MENOS expresion .)
    OR              reduce using rule 114 (expresion -> MENOS expresion .)
    AND             reduce using rule 114 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 114 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 114 (expresion -> MENOS expresion .)
    COMA            reduce using rule 114 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 114 (expresion -> MENOS expresion .)
    PTO             reduce using rule 114 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 114 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 114 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 114 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! POR             [ shift and go to state 103 ]
  ! DIVIDIDO        [ shift and go to state 104 ]
  ! MODULO          [ shift and go to state 105 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 117

    (104) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 165


state 118

    (116) expresion -> PARIZQ expresion . PARDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PARDER          shift and go to state 166
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 119

    (115) expresion -> NOT expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 115 (expresion -> NOT expresion .)
    MAS             reduce using rule 115 (expresion -> NOT expresion .)
    MENOS           reduce using rule 115 (expresion -> NOT expresion .)
    POR             reduce using rule 115 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 115 (expresion -> NOT expresion .)
    MODULO          reduce using rule 115 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 115 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 115 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 115 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 115 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 115 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 115 (expresion -> NOT expresion .)
    OR              reduce using rule 115 (expresion -> NOT expresion .)
    AND             reduce using rule 115 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 115 (expresion -> NOT expresion .)
    PARDER          reduce using rule 115 (expresion -> NOT expresion .)
    COMA            reduce using rule 115 (expresion -> NOT expresion .)
    CORDER          reduce using rule 115 (expresion -> NOT expresion .)
    PTO             reduce using rule 115 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 115 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 115 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 115 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! POR             [ shift and go to state 103 ]
  ! DIVIDIDO        [ shift and go to state 104 ]
  ! MODULO          [ shift and go to state 105 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 120

    (118) expresion -> CORIZQ expresiones . CORDER
    (85) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 167
    COMA            shift and go to state 168


state 121

    (86) expresiones -> expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          reduce using rule 86 (expresiones -> expresion .)
    COMA            reduce using rule 86 (expresiones -> expresion .)
    PARDER          reduce using rule 86 (expresiones -> expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 122

    (84) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 84 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 84 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 84 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 84 (tipo -> SIGNOI STR .)
    PTCOMA          reduce using rule 84 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 84 (tipo -> SIGNOI STR .)


state 123

    (134) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 169
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 124

    (145) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 170
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 125

    (55) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (56) imatch -> . opmatch COMA dmatch
    (57) opmatch -> . opmatch COMA cmatch
    (58) opmatch -> . opmatch COMA rmatch
    (59) opmatch -> . cmatch
    (60) opmatch -> . rmatch
    (61) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (67) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (63) bloque_match -> . bloque_match BARRAS expresion
    (64) bloque_match -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 171
    imatch                         shift and go to state 172
    opmatch                        shift and go to state 173
    cmatch                         shift and go to state 174
    rmatch                         shift and go to state 175
    bloque_match                   shift and go to state 176
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 126

    (70) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 177
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 127

    (71) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 178
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 128

    (75) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    FOR             reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 75 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 75 (break -> BREAK expresion PTCOMA .)


state 129

    (77) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 77 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 77 (return -> RETURN expresion PTCOMA .)


state 130

    (72) forin -> FOR ID IN . expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> FOR ID IN . expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 179
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 131

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 180


state 132

    (31) lparame -> ID . DOSPT tipo
    (32) lparame -> ID . DOSPT SIGNOI MUT tipo_arreglo

    DOSPT           shift and go to state 181


state 133

    (25) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 182
    COMA            shift and go to state 183


state 134

    (26) funciones -> FN ID PARIZQ PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> FN ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 184
    LLAVEIZQ        shift and go to state 185


state 135

    (30) lparametros -> lparame .

    PARDER          reduce using rule 30 (lparametros -> lparame .)
    COMA            reduce using rule 30 (lparametros -> lparame .)


state 136

    (41) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (22) declaracion_arreglos -> LET MUT ID DOSPT . tipo_arreglo IGUAL expresion PTCOMA
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (23) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (24) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    CORIZQ          shift and go to state 188

    tipo                           shift and go to state 186
    tipo_arreglo                   shift and go to state 187

state 137

    (42) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 189
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 138

    (43) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 190


state 139

    (44) declaracion -> LET ID IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 191
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 140

    (45) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 45 (asignacion -> ID IGUAL expresion PTCOMA .)


state 141

    (46) asignacion -> ID lindices IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 192
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 142

    (120) lindices -> lindices CORIZQ expresion . CORDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          shift and go to state 193
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 143

    (33) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    CORDER          reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 33 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 144

    (35) largumentos -> largumentos COMA . largumento
    (37) largumento -> . expresion
    (38) largumento -> . SIGNOI MUT expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    SIGNOI          shift and go to state 96
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    largumento                     shift and go to state 194
    expresion                      shift and go to state 95
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 145

    (38) largumento -> SIGNOI MUT . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 195
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 146

    (121) lindices -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    POR             reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    OR              reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    AND             reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    PTO             reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 121 (lindices -> CORIZQ expresion CORDER .)


state 147

    (39) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (40) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    COMA            shift and go to state 196
    PARDER          shift and go to state 197
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 148

    (123) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (124) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (125) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (126) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (131) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (132) bloque_expresion -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 198
    bloque_expresion               shift and go to state 199
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 149

    (47) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (48) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (49) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (50) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 200
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 150

    (99) expresion -> expresion MAS expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 99 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 99 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 99 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 99 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 99 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 99 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 99 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 99 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 99 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 99 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 99 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 99 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 99 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 99 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 99 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! POR             [ reduce using rule 99 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 151

    (100) expresion -> expresion MENOS expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 100 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 100 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 100 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 100 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 100 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 100 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 100 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 100 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 100 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! POR             [ reduce using rule 100 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 152

    (101) expresion -> expresion POR expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 101 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 101 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 101 (expresion -> expresion POR expresion .)
    POR             reduce using rule 101 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 101 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 101 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 101 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 101 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 101 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 101 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 101 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 101 (expresion -> expresion POR expresion .)
    OR              reduce using rule 101 (expresion -> expresion POR expresion .)
    AND             reduce using rule 101 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 101 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 101 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 101 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 101 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 101 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 101 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 101 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! POR             [ shift and go to state 103 ]
  ! DIVIDIDO        [ shift and go to state 104 ]
  ! MODULO          [ shift and go to state 105 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 153

    (102) expresion -> expresion DIVIDIDO expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 102 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! POR             [ shift and go to state 103 ]
  ! DIVIDIDO        [ shift and go to state 104 ]
  ! MODULO          [ shift and go to state 105 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 154

    (103) expresion -> expresion MODULO expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 103 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 103 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 103 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 103 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 103 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 103 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 103 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 103 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 103 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 103 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 103 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 103 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 103 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 103 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 103 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 102 ]
  ! POR             [ shift and go to state 103 ]
  ! DIVIDIDO        [ shift and go to state 104 ]
  ! MODULO          [ shift and go to state 105 ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 155

    (106) expresion -> expresion IGUALQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 106 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 106 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 106 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 106 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 106 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 156

    (107) expresion -> expresion NOIGUALQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 107 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 157

    (108) expresion -> expresion MENORQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 108 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 108 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 108 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 108 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 108 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 108 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 158

    (109) expresion -> expresion MAYORQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 109 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 109 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 109 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 109 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 109 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 109 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 159

    (110) expresion -> expresion MENORIQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 110 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 110 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 110 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 110 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 110 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 110 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 160

    (111) expresion -> expresion MAYORIQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105

  ! MAS             [ reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 111 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 106 ]
  ! NOIGUALQUE      [ shift and go to state 107 ]
  ! MENORQUE        [ shift and go to state 108 ]
  ! MAYORQUE        [ shift and go to state 109 ]
  ! MENORIQUE       [ shift and go to state 110 ]
  ! MAYORIQUE       [ shift and go to state 111 ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 161

    (112) expresion -> expresion OR expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 112 (expresion -> expresion OR expresion .)
    OR              reduce using rule 112 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 112 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 112 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 112 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 112 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 112 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 112 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 112 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 112 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    AND             shift and go to state 113

  ! MAS             [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 112 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 112 ]


state 162

    (113) expresion -> expresion AND expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 113 (expresion -> expresion AND expresion .)
    OR              reduce using rule 113 (expresion -> expresion AND expresion .)
    AND             reduce using rule 113 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 113 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 113 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 113 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 113 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 113 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 113 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 113 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 113 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111

  ! MAS             [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 113 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 112 ]
  ! AND             [ shift and go to state 113 ]


state 163

    (94) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 201


state 164

    (95) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 202


state 165

    (104) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 203
    POWF            shift and go to state 204


state 166

    (116) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 116 (expresion -> PARIZQ expresion PARDER .)


state 167

    (118) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    PTCOMA          reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)
    LLAVEDER        reduce using rule 118 (expresion -> CORIZQ expresiones CORDER .)


state 168

    (85) expresiones -> expresiones COMA . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 205
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 169

    (134) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (135) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (138) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (139) opmatch_asig -> . cmatch_asig
    (140) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (141) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (142) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (143) bloque_match_asig -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 206
    imatch_asig                    shift and go to state 207
    opmatch_asig                   shift and go to state 208
    cmatch_asig                    shift and go to state 209
    bloque_match_asig              shift and go to state 210
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 170

    (145) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 211
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 171

    (67) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (64) bloque_match -> expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTO             shift and go to state 212
    IGUAL           reduce using rule 64 (bloque_match -> expresion .)
    BARRAS          reduce using rule 64 (bloque_match -> expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 172

    (55) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 213


state 173

    (56) imatch -> opmatch . COMA dmatch
    (57) opmatch -> opmatch . COMA cmatch
    (58) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 214


state 174

    (59) opmatch -> cmatch .

    COMA            reduce using rule 59 (opmatch -> cmatch .)


state 175

    (60) opmatch -> rmatch .

    COMA            reduce using rule 60 (opmatch -> rmatch .)


state 176

    (61) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (63) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 215
    BARRAS          shift and go to state 216


state 177

    (70) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 70 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 178

    (71) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 217
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 179

    (72) forin -> FOR ID IN expresion . LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> FOR ID IN expresion . PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 218
    PTO             shift and go to state 219
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 180

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 220
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 181

    (31) lparame -> ID DOSPT . tipo
    (32) lparame -> ID DOSPT . SIGNOI MUT tipo_arreglo
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR

    SIGNOI          shift and go to state 222
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71

    tipo                           shift and go to state 221

state 182

    (25) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 223
    LLAVEIZQ        shift and go to state 224


state 183

    (29) lparametros -> lparametros COMA . lparame
    (31) lparame -> . ID DOSPT tipo
    (32) lparame -> . ID DOSPT SIGNOI MUT tipo_arreglo

    ID              shift and go to state 132

    lparame                        shift and go to state 225

state 184

    (26) funciones -> FN ID PARIZQ PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 226


state 185

    (28) funciones -> FN ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 227
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 186

    (41) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 228


state 187

    (22) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 229


state 188

    (23) tipo_arreglo -> CORIZQ . tipo_arreglo PTCOMA expresion CORDER
    (24) tipo_arreglo -> CORIZQ . tipo PTCOMA expresion CORDER
    (23) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (24) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR

    CORIZQ          shift and go to state 188
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72

    tipo_arreglo                   shift and go to state 230
    tipo                           shift and go to state 231

state 189

    (42) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 232
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 190

    (43) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 233
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 191

    (44) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 44 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 192

    (46) asignacion -> ID lindices IGUAL expresion PTCOMA .

    FN              reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LET             reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    ID              reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    IF              reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    FOR             reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    $end            reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)
    COMA            reduce using rule 46 (asignacion -> ID lindices IGUAL expresion PTCOMA .)


state 193

    (120) lindices -> lindices CORIZQ expresion CORDER .

    IGUAL           reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MAS             reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MENOS           reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    POR             reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MODULO          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    NOIGUALQUE      reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MENORIQUE       reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    MAYORIQUE       reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    OR              reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    AND             reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    PARDER          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    COMA            reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    CORDER          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    PTO             reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    BARRAS          reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 120 (lindices -> lindices CORIZQ expresion CORDER .)


state 194

    (35) largumentos -> largumentos COMA largumento .

    PARDER          reduce using rule 35 (largumentos -> largumentos COMA largumento .)
    COMA            reduce using rule 35 (largumentos -> largumentos COMA largumento .)


state 195

    (38) largumento -> SIGNOI MUT expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PARDER          reduce using rule 38 (largumento -> SIGNOI MUT expresion .)
    COMA            reduce using rule 38 (largumento -> SIGNOI MUT expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 196

    (39) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (85) expresiones -> . expresiones COMA expresion
    (86) expresiones -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 121
    expresiones                    shift and go to state 234
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 197

    (40) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 235


state 198

    (132) bloque_expresion -> expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 132 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 132 (bloque_expresion -> expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 199

    (123) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (124) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (125) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (126) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (131) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 236
    PTCOMA          shift and go to state 237


state 200

    (47) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (48) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (49) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (50) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (54) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (51) lelseif -> . lelseif elseif
    (52) lelseif -> . elseif
    (53) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 47 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 240

    else                           shift and go to state 238
    lelseif                        shift and go to state 239
    elseif                         shift and go to state 241

state 201

    (94) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 242


state 202

    (95) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 243


state 203

    (104) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 244


state 204

    (105) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 245


state 205

    (85) expresiones -> expresiones COMA expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          reduce using rule 85 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 85 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 85 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 206

    (143) bloque_match_asig -> expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 143 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 143 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 207

    (134) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 246


state 208

    (135) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (138) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 247


state 209

    (139) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 139 (opmatch_asig -> cmatch_asig .)


state 210

    (140) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (141) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (142) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 248
    BARRAS          shift and go to state 249


state 211

    (145) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 145 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 212

    (67) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 250


state 213

    (55) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    FOR             reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 55 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 214

    (56) imatch -> opmatch COMA . dmatch
    (57) opmatch -> opmatch COMA . cmatch
    (58) opmatch -> opmatch COMA . rmatch
    (65) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (66) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (61) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (67) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (63) bloque_match -> . bloque_match BARRAS expresion
    (64) bloque_match -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 254
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    dmatch                         shift and go to state 251
    cmatch                         shift and go to state 252
    rmatch                         shift and go to state 253
    bloque_match                   shift and go to state 176
    expresion                      shift and go to state 171
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 215

    (61) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (62) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 255


state 216

    (63) bloque_match -> bloque_match BARRAS . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 256
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 217

    (71) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 71 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 218

    (72) forin -> FOR ID IN expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 257
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 219

    (73) forin -> FOR ID IN expresion PTO . PTO expresion LLAVEIZQ instrucciones LLAVEDER

    PTO             shift and go to state 258


state 220

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 259
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 221

    (31) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 31 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 31 (lparame -> ID DOSPT tipo .)


state 222

    (32) lparame -> ID DOSPT SIGNOI . MUT tipo_arreglo
    (84) tipo -> SIGNOI . STR

    MUT             shift and go to state 260
    STR             shift and go to state 122


state 223

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 261


state 224

    (27) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 262
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 225

    (29) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 29 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 29 (lparametros -> lparametros COMA lparame .)


state 226

    (26) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR

    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72

    tipo                           shift and go to state 263

state 227

    (28) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 264
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 228

    (41) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 265
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 229

    (22) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL . expresion PTCOMA
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 266
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 230

    (23) tipo_arreglo -> CORIZQ tipo_arreglo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 267


state 231

    (24) tipo_arreglo -> CORIZQ tipo . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 268


state 232

    (42) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    FOR             reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 42 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 233

    (43) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 269
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 234

    (39) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (85) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 270
    COMA            shift and go to state 168


state 235

    (40) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 40 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 236

    (123) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (124) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (125) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (126) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (130) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (127) elseifa -> . elseifa lif
    (128) elseifa -> . lif
    (129) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 123 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 273

    elsea                          shift and go to state 271
    elseifa                        shift and go to state 272
    lif                            shift and go to state 274

state 237

    (131) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 275
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 238

    (48) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    FOR             reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 48 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 239

    (49) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (50) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (51) lelseif -> lelseif . elseif
    (54) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (53) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    FOR             reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 49 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 240

    else                           shift and go to state 276
    elseif                         shift and go to state 277

state 240

    (54) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (53) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 278
    IF              shift and go to state 279


state 241

    (52) lelseif -> elseif .

    ELSE            reduce using rule 52 (lelseif -> elseif .)
    FN              reduce using rule 52 (lelseif -> elseif .)
    LET             reduce using rule 52 (lelseif -> elseif .)
    PRINTLN         reduce using rule 52 (lelseif -> elseif .)
    ID              reduce using rule 52 (lelseif -> elseif .)
    IF              reduce using rule 52 (lelseif -> elseif .)
    MATCH           reduce using rule 52 (lelseif -> elseif .)
    LOOP            reduce using rule 52 (lelseif -> elseif .)
    WHILE           reduce using rule 52 (lelseif -> elseif .)
    BREAK           reduce using rule 52 (lelseif -> elseif .)
    RETURN          reduce using rule 52 (lelseif -> elseif .)
    CONTINUE        reduce using rule 52 (lelseif -> elseif .)
    FOR             reduce using rule 52 (lelseif -> elseif .)
    $end            reduce using rule 52 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 52 (lelseif -> elseif .)
    COMA            reduce using rule 52 (lelseif -> elseif .)


state 242

    (94) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 94 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 243

    (95) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 95 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 244

    (104) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 280
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 245

    (105) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 281
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 246

    (134) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    CORDER          reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 134 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 247

    (135) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (138) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (136) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (137) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (140) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (141) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (142) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (143) bloque_match_asig -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 284
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    dmatch_asig                    shift and go to state 282
    cmatch_asig                    shift and go to state 283
    expresion                      shift and go to state 206
    bloque_match_asig              shift and go to state 210
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 248

    (140) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (141) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 285


state 249

    (142) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 286
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 250

    (67) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 287


state 251

    (56) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 56 (imatch -> opmatch COMA dmatch .)


state 252

    (57) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 57 (opmatch -> opmatch COMA cmatch .)


state 253

    (58) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 58 (opmatch -> opmatch COMA rmatch .)


state 254

    (65) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (66) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 288


state 255

    (61) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (62) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 289
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 290
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 256

    (63) bloque_match -> bloque_match BARRAS expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 63 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 63 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 257

    (72) forin -> FOR ID IN expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 291
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 258

    (73) forin -> FOR ID IN expresion PTO PTO . expresion LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 292
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 259

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 260

    (32) lparame -> ID DOSPT SIGNOI MUT . tipo_arreglo
    (23) tipo_arreglo -> . CORIZQ tipo_arreglo PTCOMA expresion CORDER
    (24) tipo_arreglo -> . CORIZQ tipo PTCOMA expresion CORDER

    CORIZQ          shift and go to state 188

    tipo_arreglo                   shift and go to state 293

state 261

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR

    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72

    tipo                           shift and go to state 294

state 262

    (27) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 295
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 263

    (26) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 296


state 264

    (28) funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 28 (funciones -> FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 265

    (41) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 297
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 266

    (22) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion . PTCOMA
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 298
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 267

    (23) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA . expresion CORDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 299
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 268

    (24) tipo_arreglo -> CORIZQ tipo PTCOMA . expresion CORDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 300
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 269

    (43) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 43 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 270

    (39) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 301


state 271

    (124) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    CORDER          reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 124 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 272

    (125) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (126) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (127) elseifa -> elseifa . lif
    (130) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (129) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    CORDER          reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 125 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 273

    elsea                          shift and go to state 302
    lif                            shift and go to state 303

state 273

    (130) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (129) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 304
    IF              shift and go to state 305


state 274

    (128) elseifa -> lif .

    ELSE            reduce using rule 128 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 128 (elseifa -> lif .)
    MAS             reduce using rule 128 (elseifa -> lif .)
    MENOS           reduce using rule 128 (elseifa -> lif .)
    POR             reduce using rule 128 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 128 (elseifa -> lif .)
    MODULO          reduce using rule 128 (elseifa -> lif .)
    IGUALQUE        reduce using rule 128 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 128 (elseifa -> lif .)
    MENORQUE        reduce using rule 128 (elseifa -> lif .)
    MAYORQUE        reduce using rule 128 (elseifa -> lif .)
    MENORIQUE       reduce using rule 128 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 128 (elseifa -> lif .)
    OR              reduce using rule 128 (elseifa -> lif .)
    AND             reduce using rule 128 (elseifa -> lif .)
    PTCOMA          reduce using rule 128 (elseifa -> lif .)
    PARDER          reduce using rule 128 (elseifa -> lif .)
    COMA            reduce using rule 128 (elseifa -> lif .)
    CORDER          reduce using rule 128 (elseifa -> lif .)
    PTO             reduce using rule 128 (elseifa -> lif .)
    IGUAL           reduce using rule 128 (elseifa -> lif .)
    BARRAS          reduce using rule 128 (elseifa -> lif .)
    LLAVEDER        reduce using rule 128 (elseifa -> lif .)


state 275

    (131) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 131 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 131 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 276

    (50) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    FOR             reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 50 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 277

    (51) lelseif -> lelseif elseif .

    ELSE            reduce using rule 51 (lelseif -> lelseif elseif .)
    FN              reduce using rule 51 (lelseif -> lelseif elseif .)
    LET             reduce using rule 51 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 51 (lelseif -> lelseif elseif .)
    ID              reduce using rule 51 (lelseif -> lelseif elseif .)
    IF              reduce using rule 51 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 51 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 51 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 51 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 51 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 51 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 51 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 51 (lelseif -> lelseif elseif .)
    $end            reduce using rule 51 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 51 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 51 (lelseif -> lelseif elseif .)


state 278

    (54) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 306
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 279

    (53) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 307
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 280

    (104) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    COMA            shift and go to state 308
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 281

    (105) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    COMA            shift and go to state 309
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 282

    (135) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 135 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 283

    (138) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 138 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 284

    (136) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (137) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 310


state 285

    (140) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (141) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 311
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 312
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 286

    (142) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 142 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 142 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 287

    (67) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 313
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 288

    (65) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (66) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 314


state 289

    (61) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 315
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 290

    (62) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 62 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 291

    (72) forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 72 (forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER .)


state 292

    (73) forin -> FOR ID IN expresion PTO PTO expresion . LLAVEIZQ instrucciones LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 316
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 293

    (32) lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .

    PARDER          reduce using rule 32 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)
    COMA            reduce using rule 32 (lparame -> ID DOSPT SIGNOI MUT tipo_arreglo .)


state 294

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 317


state 295

    (27) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 27 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 296

    (26) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 318
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 297

    (41) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 41 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 298

    (22) declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .

    FN              reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LET             reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    ID              reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    IF              reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    FOR             reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    $end            reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 22 (declaracion_arreglos -> LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA .)


state 299

    (23) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion . CORDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          shift and go to state 319
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 300

    (24) tipo_arreglo -> CORIZQ tipo PTCOMA expresion . CORDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    CORDER          shift and go to state 320
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 301

    (39) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 39 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 302

    (126) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    CORDER          reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 126 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 303

    (127) elseifa -> elseifa lif .

    ELSE            reduce using rule 127 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 127 (elseifa -> elseifa lif .)
    MAS             reduce using rule 127 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 127 (elseifa -> elseifa lif .)
    POR             reduce using rule 127 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 127 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 127 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 127 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 127 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 127 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 127 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 127 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 127 (elseifa -> elseifa lif .)
    OR              reduce using rule 127 (elseifa -> elseifa lif .)
    AND             reduce using rule 127 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 127 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 127 (elseifa -> elseifa lif .)
    COMA            reduce using rule 127 (elseifa -> elseifa lif .)
    CORDER          reduce using rule 127 (elseifa -> elseifa lif .)
    PTO             reduce using rule 127 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 127 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 127 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 127 (elseifa -> elseifa lif .)


state 304

    (130) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (131) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (132) bloque_expresion -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    bloque_expresion               shift and go to state 321
    expresion                      shift and go to state 198
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 305

    (129) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 322
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 306

    (54) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 323
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 307

    (53) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 324
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 308

    (104) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 325
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 309

    (105) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    tipo                           shift and go to state 58
    expresion                      shift and go to state 326
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 310

    (136) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (137) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 327


state 311

    (140) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (131) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (132) bloque_expresion -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    bloque_expresion               shift and go to state 328
    expresion                      shift and go to state 198
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 312

    (141) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    COMA            reduce using rule 141 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 313

    (67) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 329
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 314

    (65) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (66) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 330
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 331
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 315

    (61) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 332
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 316

    (73) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 333
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 317

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 334
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 318

    (26) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 335
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 319

    (23) tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 23 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 23 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 23 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)
    COMA            reduce using rule 23 (tipo_arreglo -> CORIZQ tipo_arreglo PTCOMA expresion CORDER .)


state 320

    (24) tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .

    IGUAL           reduce using rule 24 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PTCOMA          reduce using rule 24 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    PARDER          reduce using rule 24 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)
    COMA            reduce using rule 24 (tipo_arreglo -> CORIZQ tipo PTCOMA expresion CORDER .)


state 321

    (130) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (131) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 336
    PTCOMA          shift and go to state 237


state 322

    (129) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 337
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 323

    (54) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 54 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 324

    (53) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 338
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 325

    (104) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PARDER          shift and go to state 339
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 326

    (105) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    PARDER          shift and go to state 340
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 327

    (136) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (137) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 341
    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 342
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 328

    (140) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (131) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 343
    PTCOMA          shift and go to state 237


state 329

    (67) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 344


state 330

    (65) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 345
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 331

    (66) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 66 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 332

    (61) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 61 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 333

    (73) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 346
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 334

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 347
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 335

    (26) funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 26 (funciones -> FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 336

    (130) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 130 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 337

    (129) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (131) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (132) bloque_expresion -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    expresion                      shift and go to state 198
    bloque_expresion               shift and go to state 348
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 338

    (53) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 349
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 339

    (104) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 104 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 340

    (105) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 105 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 341

    (136) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (131) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (132) bloque_expresion -> . expresion
    (87) expresion -> . ID
    (88) expresion -> . ENTERO
    (89) expresion -> . DECIMAL
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (92) expresion -> . tostring
    (93) expresion -> . toowned
    (96) expresion -> . STR
    (97) expresion -> . CADENA
    (98) expresion -> . CARACTER
    (99) expresion -> . expresion MAS expresion
    (100) expresion -> . expresion MENOS expresion
    (101) expresion -> . expresion POR expresion
    (102) expresion -> . expresion DIVIDIDO expresion
    (103) expresion -> . expresion MODULO expresion
    (104) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (105) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (106) expresion -> . expresion IGUALQUE expresion
    (107) expresion -> . expresion NOIGUALQUE expresion
    (108) expresion -> . expresion MENORQUE expresion
    (109) expresion -> . expresion MAYORQUE expresion
    (110) expresion -> . expresion MENORIQUE expresion
    (111) expresion -> . expresion MAYORIQUE expresion
    (112) expresion -> . expresion OR expresion
    (113) expresion -> . expresion AND expresion
    (114) expresion -> . MENOS expresion
    (115) expresion -> . NOT expresion
    (116) expresion -> . PARIZQ expresion PARDER
    (117) expresion -> . llamada_funciones
    (118) expresion -> . CORIZQ expresiones CORDER
    (119) expresion -> . ID lindices
    (122) expresion -> . if_asig
    (133) expresion -> . match_asig
    (144) expresion -> . loop_asig
    (94) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (95) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (78) tipo -> . I64
    (79) tipo -> . F64
    (80) tipo -> . BOOL
    (81) tipo -> . CHAR
    (82) tipo -> . STRING
    (83) tipo -> . USIZE
    (84) tipo -> . SIGNOI STR
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (123) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (124) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (125) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (126) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (134) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (145) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    STR             shift and go to state 54
    CADENA          shift and go to state 55
    CARACTER        shift and go to state 56
    MENOS           shift and go to state 57
    NOT             shift and go to state 60
    PARIZQ          shift and go to state 59
    CORIZQ          shift and go to state 62
    I64             shift and go to state 66
    F64             shift and go to state 67
    BOOL            shift and go to state 68
    CHAR            shift and go to state 69
    STRING          shift and go to state 70
    USIZE           shift and go to state 71
    SIGNOI          shift and go to state 72
    IF              shift and go to state 45
    MATCH           shift and go to state 73
    LOOP            shift and go to state 74

    bloque_expresion               shift and go to state 350
    expresion                      shift and go to state 198
    tostring                       shift and go to state 52
    toowned                        shift and go to state 53
    tipo                           shift and go to state 58
    llamada_funciones              shift and go to state 61
    if_asig                        shift and go to state 63
    match_asig                     shift and go to state 64
    loop_asig                      shift and go to state 65

state 342

    (137) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (99) expresion -> expresion . MAS expresion
    (100) expresion -> expresion . MENOS expresion
    (101) expresion -> expresion . POR expresion
    (102) expresion -> expresion . DIVIDIDO expresion
    (103) expresion -> expresion . MODULO expresion
    (106) expresion -> expresion . IGUALQUE expresion
    (107) expresion -> expresion . NOIGUALQUE expresion
    (108) expresion -> expresion . MENORQUE expresion
    (109) expresion -> expresion . MAYORQUE expresion
    (110) expresion -> expresion . MENORIQUE expresion
    (111) expresion -> expresion . MAYORIQUE expresion
    (112) expresion -> expresion . OR expresion
    (113) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 137 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 102
    POR             shift and go to state 103
    DIVIDIDO        shift and go to state 104
    MODULO          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NOIGUALQUE      shift and go to state 107
    MENORQUE        shift and go to state 108
    MAYORQUE        shift and go to state 109
    MENORIQUE       shift and go to state 110
    MAYORIQUE       shift and go to state 111
    OR              shift and go to state 112
    AND             shift and go to state 113


state 343

    (140) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 140 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 344

    (67) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (68) rrmatch -> . instruccion
    (69) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 353
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    rrmatch                        shift and go to state 351
    instruccion                    shift and go to state 352
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 345

    (65) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 354
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 346

    (73) forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 73 (forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER .)


state 347

    (25) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 25 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 348

    (129) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (131) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 355
    PTCOMA          shift and go to state 237


state 349

    (53) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 53 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 350

    (136) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (131) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 356
    PTCOMA          shift and go to state 237


state 351

    (67) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 67 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 352

    (68) rrmatch -> instruccion .

    COMA            reduce using rule 68 (rrmatch -> instruccion .)


state 353

    (69) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instrucciones                  shift and go to state 357
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 354

    (65) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 65 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 355

    (129) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    CORDER          reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 129 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 356

    (136) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 136 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 357

    (69) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (20) instruccion -> . declaracion_arreglos
    (21) instruccion -> . forin
    (41) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (42) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (43) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (44) declaracion -> . LET ID IGUAL expresion PTCOMA
    (39) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (40) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (45) asignacion -> . ID IGUAL expresion PTCOMA
    (46) asignacion -> . ID lindices IGUAL expresion PTCOMA
    (47) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (48) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (49) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (50) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (55) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (70) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (71) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (74) break -> . BREAK PTCOMA
    (75) break -> . BREAK expresion PTCOMA
    (77) return -> . RETURN expresion PTCOMA
    (76) continue -> . CONTINUE PTCOMA
    (25) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (26) funciones -> . FN ID PARIZQ PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (27) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (28) funciones -> . FN ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (33) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (34) llamada_funciones -> . ID PARIZQ PARDER
    (22) declaracion_arreglos -> . LET MUT ID DOSPT tipo_arreglo IGUAL expresion PTCOMA
    (72) forin -> . FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER
    (73) forin -> . FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 358
    LET             shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 21
    IF              shift and go to state 23
    MATCH           shift and go to state 24
    LOOP            shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    FN              shift and go to state 34
    FOR             shift and go to state 30

    instruccion                    shift and go to state 32
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17
    declaracion_arreglos           shift and go to state 18
    forin                          shift and go to state 19

state 358

    (69) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 69 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 55 resolved as shift
