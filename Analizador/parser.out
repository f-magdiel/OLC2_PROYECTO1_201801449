Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     inicio -> instrucciones main
Rule 3     inicio -> main instrucciones
Rule 4     inicio -> main
Rule 5     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 6     instrucciones -> instrucciones instruccion
Rule 7     instrucciones -> instruccion
Rule 8     instruccion -> declaracion
Rule 9     instruccion -> imprimir
Rule 10    instruccion -> asignacion
Rule 11    instruccion -> if
Rule 12    instruccion -> match
Rule 13    instruccion -> loop
Rule 14    instruccion -> while
Rule 15    instruccion -> break
Rule 16    instruccion -> return
Rule 17    instruccion -> continue
Rule 18    instruccion -> funciones
Rule 19    instruccion -> llamada_funciones PTCOMA
Rule 20    funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
Rule 21    funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 22    lparametros -> lparametros COMA lparame
Rule 23    lparametros -> lparame
Rule 24    lparame -> ID DOSPT tipo
Rule 25    llamada_funciones -> ID PARIZQ largumentos PARDER
Rule 26    largumentos -> largumentos COMA expresion
Rule 27    largumentos -> expresion
Rule 28    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 29    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 30    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 31    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 32    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 33    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 34    asignacion -> ID IGUAL expresion PTCOMA
Rule 35    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 36    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 37    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 38    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 39    lelseif -> lelseif elseif
Rule 40    lelseif -> elseif
Rule 41    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 42    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 43    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 44    imatch -> opmatch COMA dmatch
Rule 45    opmatch -> opmatch COMA cmatch
Rule 46    opmatch -> opmatch COMA rmatch
Rule 47    opmatch -> cmatch
Rule 48    opmatch -> rmatch
Rule 49    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 50    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 51    bloque_match -> bloque_match BARRAS expresion
Rule 52    bloque_match -> expresion
Rule 53    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 54    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 55    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 56    rrmatch -> instruccion
Rule 57    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 58    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 59    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 60    break -> BREAK PTCOMA
Rule 61    break -> BREAK expresion PTCOMA
Rule 62    continue -> CONTINUE PTCOMA
Rule 63    return -> RETURN expresion PTCOMA
Rule 64    tipo -> I64
Rule 65    tipo -> F64
Rule 66    tipo -> BOOL
Rule 67    tipo -> CHAR
Rule 68    tipo -> STRING
Rule 69    tipo -> SIGNOI STR
Rule 70    expresiones -> expresiones COMA expresion
Rule 71    expresiones -> expresion
Rule 72    expresion -> ID
Rule 73    expresion -> ENTERO
Rule 74    expresion -> DECIMAL
Rule 75    expresion -> TRUE
Rule 76    expresion -> FALSE
Rule 77    expresion -> tostring
Rule 78    expresion -> toowned
Rule 79    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 80    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 81    expresion -> STR
Rule 82    expresion -> CADENA
Rule 83    expresion -> CARACTER
Rule 84    expresion -> expresion MAS expresion
Rule 85    expresion -> expresion MENOS expresion
Rule 86    expresion -> expresion POR expresion
Rule 87    expresion -> expresion DIVIDIDO expresion
Rule 88    expresion -> expresion MODULO expresion
Rule 89    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 90    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 91    expresion -> expresion IGUALQUE expresion
Rule 92    expresion -> expresion NOIGUALQUE expresion
Rule 93    expresion -> expresion MENORQUE expresion
Rule 94    expresion -> expresion MAYORQUE expresion
Rule 95    expresion -> expresion MENORIQUE expresion
Rule 96    expresion -> expresion MAYORIQUE expresion
Rule 97    expresion -> expresion OR expresion
Rule 98    expresion -> expresion AND expresion
Rule 99    expresion -> MENOS expresion
Rule 100   expresion -> NOT expresion
Rule 101   expresion -> PARIZQ expresion PARDER
Rule 102   expresion -> llamada_funciones
Rule 103   expresion -> if_asig
Rule 104   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 105   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 106   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 107   if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 108   elseifa -> elseifa lif
Rule 109   elseifa -> lif
Rule 110   lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 111   elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 112   bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 113   bloque_expresion -> expresion
Rule 114   expresion -> match_asig
Rule 115   match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 116   imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 117   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 118   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 119   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 120   opmatch_asig -> cmatch_asig
Rule 121   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 122   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 123   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 124   bloque_match_asig -> expresion
Rule 125   expresion -> loop_asig
Rule 126   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 98
AS                   : 
BARRAS               : 51 123
BOOL                 : 66
BREAK                : 60 61
CADENA               : 79 80 82
CARACTER             : 83
CHAR                 : 67
COMA                 : 22 26 28 44 45 46 70 89 90 116 119
CONTINUE             : 62
DECIMAL              : 74
DIVIDIDO             : 87
DOSPT                : 24 30 32 89 89 90 90
ELSE                 : 41 42 110 111
ENTERO               : 73
F64                  : 65
FALSE                : 76
FN                   : 5 20 21
GUIONB               : 53 54 117 118
I64                  : 64
ID                   : 20 21 24 25 30 31 32 33 34 72
IF                   : 35 36 37 38 41 104 105 106 107 110
IGUAL                : 30 31 32 33 34 49 50 53 54 55 55 117 118 121 122
IGUALQUE             : 91
LET                  : 30 31 32 33
LLAVEDER             : 5 20 21 35 36 37 38 41 42 43 49 53 57 58 59 104 105 106 107 110 111 115 117 121 126
LLAVEIZQ             : 5 20 21 35 36 37 38 41 42 43 49 53 57 58 59 104 105 106 107 110 111 115 117 121 126
LOOP                 : 58 126
MAIN                 : 5
MAS                  : 84
MATCH                : 43 115
MAYORIQUE            : 96
MAYORQUE             : 20 49 50 53 54 55 94 117 118 121 122
MENORIQUE            : 95
MENORQUE             : 93
MENOS                : 20 85 99
MODULO               : 88
MUT                  : 30 31
NOIGUALQUE           : 92
NOT                  : 28 29 100
OR                   : 97
PARDER               : 5 20 21 25 28 29 79 80 89 90 101
PARIZQ               : 5 20 21 25 28 29 79 80 89 90 101
POR                  : 86
POW                  : 89
POWF                 : 90
PRINTLN              : 28 29
PTCOMA               : 19 28 29 30 31 32 33 34 60 61 62 63 112
PTO                  : 55 55 79 80
RETURN               : 63
SIGNOI               : 69
STR                  : 69 81
STRING               : 68
TOOWNED              : 80
TOSTRING             : 79
TRUE                 : 75
WHILE                : 59
error                : 

Nonterminals, with rules where they appear

asignacion           : 10
bloque_expresion     : 104 105 106 107 110 111 112 117 121
bloque_match         : 49 50 51
bloque_match_asig    : 121 122 123
break                : 15
cmatch               : 45 47
cmatch_asig          : 119 120
continue             : 17
declaracion          : 8
dmatch               : 44
dmatch_asig          : 116
else                 : 36 38
elsea                : 105 107
elseif               : 39 40
elseifa              : 106 107 108
expresion            : 26 27 28 29 30 31 32 33 34 35 36 37 38 41 43 51 52 55 55 59 61 63 70 71 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 100 101 104 105 106 107 110 112 113 115 118 122 123 124
expresiones          : 28 70
funciones            : 18
if                   : 11
if_asig              : 103
imatch               : 43
imatch_asig          : 115
imprimir             : 9
inicio               : 0
instruccion          : 6 7 50 54 56
instrucciones        : 1 1 2 3 5 6 20 21 35 36 37 38 41 42 49 53 57 58 59 126
largumentos          : 25 26
lelseif              : 37 38 39
lif                  : 108 109
llamada_funciones    : 19 102
loop                 : 13
loop_asig            : 125
lparame              : 22 23
lparametros          : 20 21 22
main                 : 1 2 3 4
match                : 12
match_asig           : 114
opmatch              : 44 45 46
opmatch_asig         : 116 119
return               : 16
rmatch               : 46 48
rrmatch              : 55
tipo                 : 20 24 30 32 89 90
toowned              : 78
tostring             : 77
while                : 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (2) inicio -> . instrucciones main
    (3) inicio -> . main instrucciones
    (4) inicio -> . main
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    FN              shift and go to state 5
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (2) inicio -> instrucciones . main
    (6) instrucciones -> instrucciones . instruccion
    (5) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    FN              shift and go to state 5
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27

    main                           shift and go to state 28
    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 3

    (3) inicio -> main . instrucciones
    (4) inicio -> main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    $end            reduce using rule 4 (inicio -> main .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 30
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 4

    (7) instrucciones -> instruccion .

    FN              reduce using rule 7 (instrucciones -> instruccion .)
    LET             reduce using rule 7 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 7 (instrucciones -> instruccion .)
    ID              reduce using rule 7 (instrucciones -> instruccion .)
    IF              reduce using rule 7 (instrucciones -> instruccion .)
    MATCH           reduce using rule 7 (instrucciones -> instruccion .)
    LOOP            reduce using rule 7 (instrucciones -> instruccion .)
    WHILE           reduce using rule 7 (instrucciones -> instruccion .)
    BREAK           reduce using rule 7 (instrucciones -> instruccion .)
    RETURN          reduce using rule 7 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 7 (instrucciones -> instruccion .)
    $end            reduce using rule 7 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 7 (instrucciones -> instruccion .)


state 5

    (5) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (20) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 32
    ID              shift and go to state 33


state 6

    (8) instruccion -> declaracion .

    FN              reduce using rule 8 (instruccion -> declaracion .)
    LET             reduce using rule 8 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 8 (instruccion -> declaracion .)
    ID              reduce using rule 8 (instruccion -> declaracion .)
    IF              reduce using rule 8 (instruccion -> declaracion .)
    MATCH           reduce using rule 8 (instruccion -> declaracion .)
    LOOP            reduce using rule 8 (instruccion -> declaracion .)
    WHILE           reduce using rule 8 (instruccion -> declaracion .)
    BREAK           reduce using rule 8 (instruccion -> declaracion .)
    RETURN          reduce using rule 8 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 8 (instruccion -> declaracion .)
    $end            reduce using rule 8 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 8 (instruccion -> declaracion .)
    COMA            reduce using rule 8 (instruccion -> declaracion .)


state 7

    (9) instruccion -> imprimir .

    FN              reduce using rule 9 (instruccion -> imprimir .)
    LET             reduce using rule 9 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 9 (instruccion -> imprimir .)
    ID              reduce using rule 9 (instruccion -> imprimir .)
    IF              reduce using rule 9 (instruccion -> imprimir .)
    MATCH           reduce using rule 9 (instruccion -> imprimir .)
    LOOP            reduce using rule 9 (instruccion -> imprimir .)
    WHILE           reduce using rule 9 (instruccion -> imprimir .)
    BREAK           reduce using rule 9 (instruccion -> imprimir .)
    RETURN          reduce using rule 9 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 9 (instruccion -> imprimir .)
    $end            reduce using rule 9 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 9 (instruccion -> imprimir .)
    COMA            reduce using rule 9 (instruccion -> imprimir .)


state 8

    (10) instruccion -> asignacion .

    FN              reduce using rule 10 (instruccion -> asignacion .)
    LET             reduce using rule 10 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 10 (instruccion -> asignacion .)
    ID              reduce using rule 10 (instruccion -> asignacion .)
    IF              reduce using rule 10 (instruccion -> asignacion .)
    MATCH           reduce using rule 10 (instruccion -> asignacion .)
    LOOP            reduce using rule 10 (instruccion -> asignacion .)
    WHILE           reduce using rule 10 (instruccion -> asignacion .)
    BREAK           reduce using rule 10 (instruccion -> asignacion .)
    RETURN          reduce using rule 10 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 10 (instruccion -> asignacion .)
    $end            reduce using rule 10 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 10 (instruccion -> asignacion .)
    COMA            reduce using rule 10 (instruccion -> asignacion .)


state 9

    (11) instruccion -> if .

    FN              reduce using rule 11 (instruccion -> if .)
    LET             reduce using rule 11 (instruccion -> if .)
    PRINTLN         reduce using rule 11 (instruccion -> if .)
    ID              reduce using rule 11 (instruccion -> if .)
    IF              reduce using rule 11 (instruccion -> if .)
    MATCH           reduce using rule 11 (instruccion -> if .)
    LOOP            reduce using rule 11 (instruccion -> if .)
    WHILE           reduce using rule 11 (instruccion -> if .)
    BREAK           reduce using rule 11 (instruccion -> if .)
    RETURN          reduce using rule 11 (instruccion -> if .)
    CONTINUE        reduce using rule 11 (instruccion -> if .)
    $end            reduce using rule 11 (instruccion -> if .)
    LLAVEDER        reduce using rule 11 (instruccion -> if .)
    COMA            reduce using rule 11 (instruccion -> if .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    LET             reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    ID              reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    RETURN          reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)
    COMA            reduce using rule 12 (instruccion -> match .)


state 11

    (13) instruccion -> loop .

    FN              reduce using rule 13 (instruccion -> loop .)
    LET             reduce using rule 13 (instruccion -> loop .)
    PRINTLN         reduce using rule 13 (instruccion -> loop .)
    ID              reduce using rule 13 (instruccion -> loop .)
    IF              reduce using rule 13 (instruccion -> loop .)
    MATCH           reduce using rule 13 (instruccion -> loop .)
    LOOP            reduce using rule 13 (instruccion -> loop .)
    WHILE           reduce using rule 13 (instruccion -> loop .)
    BREAK           reduce using rule 13 (instruccion -> loop .)
    RETURN          reduce using rule 13 (instruccion -> loop .)
    CONTINUE        reduce using rule 13 (instruccion -> loop .)
    $end            reduce using rule 13 (instruccion -> loop .)
    LLAVEDER        reduce using rule 13 (instruccion -> loop .)
    COMA            reduce using rule 13 (instruccion -> loop .)


state 12

    (14) instruccion -> while .

    FN              reduce using rule 14 (instruccion -> while .)
    LET             reduce using rule 14 (instruccion -> while .)
    PRINTLN         reduce using rule 14 (instruccion -> while .)
    ID              reduce using rule 14 (instruccion -> while .)
    IF              reduce using rule 14 (instruccion -> while .)
    MATCH           reduce using rule 14 (instruccion -> while .)
    LOOP            reduce using rule 14 (instruccion -> while .)
    WHILE           reduce using rule 14 (instruccion -> while .)
    BREAK           reduce using rule 14 (instruccion -> while .)
    RETURN          reduce using rule 14 (instruccion -> while .)
    CONTINUE        reduce using rule 14 (instruccion -> while .)
    $end            reduce using rule 14 (instruccion -> while .)
    LLAVEDER        reduce using rule 14 (instruccion -> while .)
    COMA            reduce using rule 14 (instruccion -> while .)


state 13

    (15) instruccion -> break .

    FN              reduce using rule 15 (instruccion -> break .)
    LET             reduce using rule 15 (instruccion -> break .)
    PRINTLN         reduce using rule 15 (instruccion -> break .)
    ID              reduce using rule 15 (instruccion -> break .)
    IF              reduce using rule 15 (instruccion -> break .)
    MATCH           reduce using rule 15 (instruccion -> break .)
    LOOP            reduce using rule 15 (instruccion -> break .)
    WHILE           reduce using rule 15 (instruccion -> break .)
    BREAK           reduce using rule 15 (instruccion -> break .)
    RETURN          reduce using rule 15 (instruccion -> break .)
    CONTINUE        reduce using rule 15 (instruccion -> break .)
    $end            reduce using rule 15 (instruccion -> break .)
    LLAVEDER        reduce using rule 15 (instruccion -> break .)
    COMA            reduce using rule 15 (instruccion -> break .)


state 14

    (16) instruccion -> return .

    FN              reduce using rule 16 (instruccion -> return .)
    LET             reduce using rule 16 (instruccion -> return .)
    PRINTLN         reduce using rule 16 (instruccion -> return .)
    ID              reduce using rule 16 (instruccion -> return .)
    IF              reduce using rule 16 (instruccion -> return .)
    MATCH           reduce using rule 16 (instruccion -> return .)
    LOOP            reduce using rule 16 (instruccion -> return .)
    WHILE           reduce using rule 16 (instruccion -> return .)
    BREAK           reduce using rule 16 (instruccion -> return .)
    RETURN          reduce using rule 16 (instruccion -> return .)
    CONTINUE        reduce using rule 16 (instruccion -> return .)
    $end            reduce using rule 16 (instruccion -> return .)
    LLAVEDER        reduce using rule 16 (instruccion -> return .)
    COMA            reduce using rule 16 (instruccion -> return .)


state 15

    (17) instruccion -> continue .

    FN              reduce using rule 17 (instruccion -> continue .)
    LET             reduce using rule 17 (instruccion -> continue .)
    PRINTLN         reduce using rule 17 (instruccion -> continue .)
    ID              reduce using rule 17 (instruccion -> continue .)
    IF              reduce using rule 17 (instruccion -> continue .)
    MATCH           reduce using rule 17 (instruccion -> continue .)
    LOOP            reduce using rule 17 (instruccion -> continue .)
    WHILE           reduce using rule 17 (instruccion -> continue .)
    BREAK           reduce using rule 17 (instruccion -> continue .)
    RETURN          reduce using rule 17 (instruccion -> continue .)
    CONTINUE        reduce using rule 17 (instruccion -> continue .)
    $end            reduce using rule 17 (instruccion -> continue .)
    LLAVEDER        reduce using rule 17 (instruccion -> continue .)
    COMA            reduce using rule 17 (instruccion -> continue .)


state 16

    (18) instruccion -> funciones .

    FN              reduce using rule 18 (instruccion -> funciones .)
    LET             reduce using rule 18 (instruccion -> funciones .)
    PRINTLN         reduce using rule 18 (instruccion -> funciones .)
    ID              reduce using rule 18 (instruccion -> funciones .)
    IF              reduce using rule 18 (instruccion -> funciones .)
    MATCH           reduce using rule 18 (instruccion -> funciones .)
    LOOP            reduce using rule 18 (instruccion -> funciones .)
    WHILE           reduce using rule 18 (instruccion -> funciones .)
    BREAK           reduce using rule 18 (instruccion -> funciones .)
    RETURN          reduce using rule 18 (instruccion -> funciones .)
    CONTINUE        reduce using rule 18 (instruccion -> funciones .)
    $end            reduce using rule 18 (instruccion -> funciones .)
    LLAVEDER        reduce using rule 18 (instruccion -> funciones .)
    COMA            reduce using rule 18 (instruccion -> funciones .)


state 17

    (19) instruccion -> llamada_funciones . PTCOMA

    PTCOMA          shift and go to state 34


state 18

    (30) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 35
    ID              shift and go to state 36


state 19

    (34) asignacion -> ID . IGUAL expresion PTCOMA
    (25) llamada_funciones -> ID . PARIZQ largumentos PARDER

    IGUAL           shift and go to state 37
    PARIZQ          shift and go to state 38


state 20

    (28) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 39


state 21

    (35) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 41
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 22

    (43) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 68
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 23

    (58) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 69


state 24

    (59) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 70
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 25

    (60) break -> BREAK . PTCOMA
    (61) break -> BREAK . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 71
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 72
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 26

    (63) return -> RETURN . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 73
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 27

    (62) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 74


state 28

    (1) inicio -> instrucciones main . instrucciones
    (2) inicio -> instrucciones main .
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    $end            reduce using rule 2 (inicio -> instrucciones main .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 75
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 29

    (6) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 6 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 6 (instrucciones -> instrucciones instruccion .)


state 30

    (3) inicio -> main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    $end            reduce using rule 3 (inicio -> main instrucciones .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 31

    (20) funciones -> FN . ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN . ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 33


state 32

    (5) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 76


state 33

    (20) funciones -> FN ID . PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID . PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 77


state 34

    (19) instruccion -> llamada_funciones PTCOMA .

    FN              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LET             reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    PRINTLN         reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    ID              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    IF              reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    MATCH           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LOOP            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    $end            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    LLAVEDER        reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)
    COMA            reduce using rule 19 (instruccion -> llamada_funciones PTCOMA .)


state 35

    (30) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 78


state 36

    (32) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 79
    IGUAL           shift and go to state 80


state 37

    (34) asignacion -> ID IGUAL . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 81
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 38

    (25) llamada_funciones -> ID PARIZQ . largumentos PARDER
    (26) largumentos -> . largumentos COMA expresion
    (27) largumentos -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    largumentos                    shift and go to state 82
    expresion                      shift and go to state 83
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 39

    (28) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 84


state 40

    (104) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 85
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 41

    (35) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (36) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 42

    (72) expresion -> ID .
    (25) llamada_funciones -> ID . PARIZQ largumentos PARDER

    LLAVEIZQ        reduce using rule 72 (expresion -> ID .)
    MAS             reduce using rule 72 (expresion -> ID .)
    MENOS           reduce using rule 72 (expresion -> ID .)
    POR             reduce using rule 72 (expresion -> ID .)
    DIVIDIDO        reduce using rule 72 (expresion -> ID .)
    MODULO          reduce using rule 72 (expresion -> ID .)
    IGUALQUE        reduce using rule 72 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 72 (expresion -> ID .)
    MENORQUE        reduce using rule 72 (expresion -> ID .)
    MAYORQUE        reduce using rule 72 (expresion -> ID .)
    MENORIQUE       reduce using rule 72 (expresion -> ID .)
    MAYORIQUE       reduce using rule 72 (expresion -> ID .)
    OR              reduce using rule 72 (expresion -> ID .)
    AND             reduce using rule 72 (expresion -> ID .)
    PTCOMA          reduce using rule 72 (expresion -> ID .)
    PARDER          reduce using rule 72 (expresion -> ID .)
    COMA            reduce using rule 72 (expresion -> ID .)
    PTO             reduce using rule 72 (expresion -> ID .)
    IGUAL           reduce using rule 72 (expresion -> ID .)
    BARRAS          reduce using rule 72 (expresion -> ID .)
    LLAVEDER        reduce using rule 72 (expresion -> ID .)
    PARIZQ          shift and go to state 38


state 43

    (73) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 73 (expresion -> ENTERO .)
    MAS             reduce using rule 73 (expresion -> ENTERO .)
    MENOS           reduce using rule 73 (expresion -> ENTERO .)
    POR             reduce using rule 73 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 73 (expresion -> ENTERO .)
    MODULO          reduce using rule 73 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 73 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 73 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 73 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 73 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 73 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 73 (expresion -> ENTERO .)
    OR              reduce using rule 73 (expresion -> ENTERO .)
    AND             reduce using rule 73 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 73 (expresion -> ENTERO .)
    PARDER          reduce using rule 73 (expresion -> ENTERO .)
    COMA            reduce using rule 73 (expresion -> ENTERO .)
    PTO             reduce using rule 73 (expresion -> ENTERO .)
    IGUAL           reduce using rule 73 (expresion -> ENTERO .)
    BARRAS          reduce using rule 73 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 73 (expresion -> ENTERO .)


state 44

    (74) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 74 (expresion -> DECIMAL .)
    MAS             reduce using rule 74 (expresion -> DECIMAL .)
    MENOS           reduce using rule 74 (expresion -> DECIMAL .)
    POR             reduce using rule 74 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 74 (expresion -> DECIMAL .)
    MODULO          reduce using rule 74 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 74 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 74 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 74 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 74 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 74 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 74 (expresion -> DECIMAL .)
    OR              reduce using rule 74 (expresion -> DECIMAL .)
    AND             reduce using rule 74 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 74 (expresion -> DECIMAL .)
    PARDER          reduce using rule 74 (expresion -> DECIMAL .)
    COMA            reduce using rule 74 (expresion -> DECIMAL .)
    PTO             reduce using rule 74 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 74 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 74 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 74 (expresion -> DECIMAL .)


state 45

    (75) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 75 (expresion -> TRUE .)
    MAS             reduce using rule 75 (expresion -> TRUE .)
    MENOS           reduce using rule 75 (expresion -> TRUE .)
    POR             reduce using rule 75 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 75 (expresion -> TRUE .)
    MODULO          reduce using rule 75 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 75 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 75 (expresion -> TRUE .)
    MENORQUE        reduce using rule 75 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 75 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 75 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 75 (expresion -> TRUE .)
    OR              reduce using rule 75 (expresion -> TRUE .)
    AND             reduce using rule 75 (expresion -> TRUE .)
    PTCOMA          reduce using rule 75 (expresion -> TRUE .)
    PARDER          reduce using rule 75 (expresion -> TRUE .)
    COMA            reduce using rule 75 (expresion -> TRUE .)
    PTO             reduce using rule 75 (expresion -> TRUE .)
    IGUAL           reduce using rule 75 (expresion -> TRUE .)
    BARRAS          reduce using rule 75 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 75 (expresion -> TRUE .)


state 46

    (76) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 76 (expresion -> FALSE .)
    MAS             reduce using rule 76 (expresion -> FALSE .)
    MENOS           reduce using rule 76 (expresion -> FALSE .)
    POR             reduce using rule 76 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 76 (expresion -> FALSE .)
    MODULO          reduce using rule 76 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 76 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 76 (expresion -> FALSE .)
    MENORQUE        reduce using rule 76 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 76 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 76 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 76 (expresion -> FALSE .)
    OR              reduce using rule 76 (expresion -> FALSE .)
    AND             reduce using rule 76 (expresion -> FALSE .)
    PTCOMA          reduce using rule 76 (expresion -> FALSE .)
    PARDER          reduce using rule 76 (expresion -> FALSE .)
    COMA            reduce using rule 76 (expresion -> FALSE .)
    PTO             reduce using rule 76 (expresion -> FALSE .)
    IGUAL           reduce using rule 76 (expresion -> FALSE .)
    BARRAS          reduce using rule 76 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 76 (expresion -> FALSE .)


state 47

    (77) expresion -> tostring .

    LLAVEIZQ        reduce using rule 77 (expresion -> tostring .)
    MAS             reduce using rule 77 (expresion -> tostring .)
    MENOS           reduce using rule 77 (expresion -> tostring .)
    POR             reduce using rule 77 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 77 (expresion -> tostring .)
    MODULO          reduce using rule 77 (expresion -> tostring .)
    IGUALQUE        reduce using rule 77 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 77 (expresion -> tostring .)
    MENORQUE        reduce using rule 77 (expresion -> tostring .)
    MAYORQUE        reduce using rule 77 (expresion -> tostring .)
    MENORIQUE       reduce using rule 77 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 77 (expresion -> tostring .)
    OR              reduce using rule 77 (expresion -> tostring .)
    AND             reduce using rule 77 (expresion -> tostring .)
    PTCOMA          reduce using rule 77 (expresion -> tostring .)
    PARDER          reduce using rule 77 (expresion -> tostring .)
    COMA            reduce using rule 77 (expresion -> tostring .)
    PTO             reduce using rule 77 (expresion -> tostring .)
    IGUAL           reduce using rule 77 (expresion -> tostring .)
    BARRAS          reduce using rule 77 (expresion -> tostring .)
    LLAVEDER        reduce using rule 77 (expresion -> tostring .)


state 48

    (78) expresion -> toowned .

    LLAVEIZQ        reduce using rule 78 (expresion -> toowned .)
    MAS             reduce using rule 78 (expresion -> toowned .)
    MENOS           reduce using rule 78 (expresion -> toowned .)
    POR             reduce using rule 78 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 78 (expresion -> toowned .)
    MODULO          reduce using rule 78 (expresion -> toowned .)
    IGUALQUE        reduce using rule 78 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 78 (expresion -> toowned .)
    MENORQUE        reduce using rule 78 (expresion -> toowned .)
    MAYORQUE        reduce using rule 78 (expresion -> toowned .)
    MENORIQUE       reduce using rule 78 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 78 (expresion -> toowned .)
    OR              reduce using rule 78 (expresion -> toowned .)
    AND             reduce using rule 78 (expresion -> toowned .)
    PTCOMA          reduce using rule 78 (expresion -> toowned .)
    PARDER          reduce using rule 78 (expresion -> toowned .)
    COMA            reduce using rule 78 (expresion -> toowned .)
    PTO             reduce using rule 78 (expresion -> toowned .)
    IGUAL           reduce using rule 78 (expresion -> toowned .)
    BARRAS          reduce using rule 78 (expresion -> toowned .)
    LLAVEDER        reduce using rule 78 (expresion -> toowned .)


state 49

    (81) expresion -> STR .

    LLAVEIZQ        reduce using rule 81 (expresion -> STR .)
    MAS             reduce using rule 81 (expresion -> STR .)
    MENOS           reduce using rule 81 (expresion -> STR .)
    POR             reduce using rule 81 (expresion -> STR .)
    DIVIDIDO        reduce using rule 81 (expresion -> STR .)
    MODULO          reduce using rule 81 (expresion -> STR .)
    IGUALQUE        reduce using rule 81 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 81 (expresion -> STR .)
    MENORQUE        reduce using rule 81 (expresion -> STR .)
    MAYORQUE        reduce using rule 81 (expresion -> STR .)
    MENORIQUE       reduce using rule 81 (expresion -> STR .)
    MAYORIQUE       reduce using rule 81 (expresion -> STR .)
    OR              reduce using rule 81 (expresion -> STR .)
    AND             reduce using rule 81 (expresion -> STR .)
    PTCOMA          reduce using rule 81 (expresion -> STR .)
    PARDER          reduce using rule 81 (expresion -> STR .)
    COMA            reduce using rule 81 (expresion -> STR .)
    PTO             reduce using rule 81 (expresion -> STR .)
    IGUAL           reduce using rule 81 (expresion -> STR .)
    BARRAS          reduce using rule 81 (expresion -> STR .)
    LLAVEDER        reduce using rule 81 (expresion -> STR .)


state 50

    (82) expresion -> CADENA .
    (79) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (80) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 82 (expresion -> CADENA .)
    MAS             reduce using rule 82 (expresion -> CADENA .)
    MENOS           reduce using rule 82 (expresion -> CADENA .)
    POR             reduce using rule 82 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 82 (expresion -> CADENA .)
    MODULO          reduce using rule 82 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 82 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 82 (expresion -> CADENA .)
    MENORQUE        reduce using rule 82 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 82 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 82 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 82 (expresion -> CADENA .)
    OR              reduce using rule 82 (expresion -> CADENA .)
    AND             reduce using rule 82 (expresion -> CADENA .)
    PTCOMA          reduce using rule 82 (expresion -> CADENA .)
    PARDER          reduce using rule 82 (expresion -> CADENA .)
    COMA            reduce using rule 82 (expresion -> CADENA .)
    IGUAL           reduce using rule 82 (expresion -> CADENA .)
    BARRAS          reduce using rule 82 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 82 (expresion -> CADENA .)
    PTO             shift and go to state 100

  ! PTO             [ reduce using rule 82 (expresion -> CADENA .) ]


state 51

    (83) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 83 (expresion -> CARACTER .)
    MAS             reduce using rule 83 (expresion -> CARACTER .)
    MENOS           reduce using rule 83 (expresion -> CARACTER .)
    POR             reduce using rule 83 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 83 (expresion -> CARACTER .)
    MODULO          reduce using rule 83 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 83 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 83 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 83 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 83 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 83 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 83 (expresion -> CARACTER .)
    OR              reduce using rule 83 (expresion -> CARACTER .)
    AND             reduce using rule 83 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 83 (expresion -> CARACTER .)
    PARDER          reduce using rule 83 (expresion -> CARACTER .)
    COMA            reduce using rule 83 (expresion -> CARACTER .)
    PTO             reduce using rule 83 (expresion -> CARACTER .)
    IGUAL           reduce using rule 83 (expresion -> CARACTER .)
    BARRAS          reduce using rule 83 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 83 (expresion -> CARACTER .)


state 52

    (99) expresion -> MENOS . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 101
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 53

    (89) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 102


state 54

    (101) expresion -> PARIZQ . expresion PARDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 103
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 55

    (100) expresion -> NOT . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 104
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 56

    (102) expresion -> llamada_funciones .

    LLAVEIZQ        reduce using rule 102 (expresion -> llamada_funciones .)
    MAS             reduce using rule 102 (expresion -> llamada_funciones .)
    MENOS           reduce using rule 102 (expresion -> llamada_funciones .)
    POR             reduce using rule 102 (expresion -> llamada_funciones .)
    DIVIDIDO        reduce using rule 102 (expresion -> llamada_funciones .)
    MODULO          reduce using rule 102 (expresion -> llamada_funciones .)
    IGUALQUE        reduce using rule 102 (expresion -> llamada_funciones .)
    NOIGUALQUE      reduce using rule 102 (expresion -> llamada_funciones .)
    MENORQUE        reduce using rule 102 (expresion -> llamada_funciones .)
    MAYORQUE        reduce using rule 102 (expresion -> llamada_funciones .)
    MENORIQUE       reduce using rule 102 (expresion -> llamada_funciones .)
    MAYORIQUE       reduce using rule 102 (expresion -> llamada_funciones .)
    OR              reduce using rule 102 (expresion -> llamada_funciones .)
    AND             reduce using rule 102 (expresion -> llamada_funciones .)
    PTCOMA          reduce using rule 102 (expresion -> llamada_funciones .)
    PARDER          reduce using rule 102 (expresion -> llamada_funciones .)
    COMA            reduce using rule 102 (expresion -> llamada_funciones .)
    PTO             reduce using rule 102 (expresion -> llamada_funciones .)
    IGUAL           reduce using rule 102 (expresion -> llamada_funciones .)
    BARRAS          reduce using rule 102 (expresion -> llamada_funciones .)
    LLAVEDER        reduce using rule 102 (expresion -> llamada_funciones .)


state 57

    (103) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 103 (expresion -> if_asig .)
    MAS             reduce using rule 103 (expresion -> if_asig .)
    MENOS           reduce using rule 103 (expresion -> if_asig .)
    POR             reduce using rule 103 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 103 (expresion -> if_asig .)
    MODULO          reduce using rule 103 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 103 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 103 (expresion -> if_asig .)
    MENORQUE        reduce using rule 103 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 103 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 103 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 103 (expresion -> if_asig .)
    OR              reduce using rule 103 (expresion -> if_asig .)
    AND             reduce using rule 103 (expresion -> if_asig .)
    PTCOMA          reduce using rule 103 (expresion -> if_asig .)
    PARDER          reduce using rule 103 (expresion -> if_asig .)
    COMA            reduce using rule 103 (expresion -> if_asig .)
    PTO             reduce using rule 103 (expresion -> if_asig .)
    IGUAL           reduce using rule 103 (expresion -> if_asig .)
    BARRAS          reduce using rule 103 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 103 (expresion -> if_asig .)


state 58

    (114) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 114 (expresion -> match_asig .)
    MAS             reduce using rule 114 (expresion -> match_asig .)
    MENOS           reduce using rule 114 (expresion -> match_asig .)
    POR             reduce using rule 114 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 114 (expresion -> match_asig .)
    MODULO          reduce using rule 114 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 114 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 114 (expresion -> match_asig .)
    MENORQUE        reduce using rule 114 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 114 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 114 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 114 (expresion -> match_asig .)
    OR              reduce using rule 114 (expresion -> match_asig .)
    AND             reduce using rule 114 (expresion -> match_asig .)
    PTCOMA          reduce using rule 114 (expresion -> match_asig .)
    PARDER          reduce using rule 114 (expresion -> match_asig .)
    COMA            reduce using rule 114 (expresion -> match_asig .)
    PTO             reduce using rule 114 (expresion -> match_asig .)
    IGUAL           reduce using rule 114 (expresion -> match_asig .)
    BARRAS          reduce using rule 114 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 114 (expresion -> match_asig .)


state 59

    (125) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 125 (expresion -> loop_asig .)
    MAS             reduce using rule 125 (expresion -> loop_asig .)
    MENOS           reduce using rule 125 (expresion -> loop_asig .)
    POR             reduce using rule 125 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 125 (expresion -> loop_asig .)
    MODULO          reduce using rule 125 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 125 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 125 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 125 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 125 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 125 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 125 (expresion -> loop_asig .)
    OR              reduce using rule 125 (expresion -> loop_asig .)
    AND             reduce using rule 125 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 125 (expresion -> loop_asig .)
    PARDER          reduce using rule 125 (expresion -> loop_asig .)
    COMA            reduce using rule 125 (expresion -> loop_asig .)
    PTO             reduce using rule 125 (expresion -> loop_asig .)
    IGUAL           reduce using rule 125 (expresion -> loop_asig .)
    BARRAS          reduce using rule 125 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 125 (expresion -> loop_asig .)


state 60

    (64) tipo -> I64 .

    DOSPT           reduce using rule 64 (tipo -> I64 .)
    IGUAL           reduce using rule 64 (tipo -> I64 .)
    PARDER          reduce using rule 64 (tipo -> I64 .)
    COMA            reduce using rule 64 (tipo -> I64 .)
    LLAVEIZQ        reduce using rule 64 (tipo -> I64 .)


state 61

    (65) tipo -> F64 .

    DOSPT           reduce using rule 65 (tipo -> F64 .)
    IGUAL           reduce using rule 65 (tipo -> F64 .)
    PARDER          reduce using rule 65 (tipo -> F64 .)
    COMA            reduce using rule 65 (tipo -> F64 .)
    LLAVEIZQ        reduce using rule 65 (tipo -> F64 .)


state 62

    (66) tipo -> BOOL .

    DOSPT           reduce using rule 66 (tipo -> BOOL .)
    IGUAL           reduce using rule 66 (tipo -> BOOL .)
    PARDER          reduce using rule 66 (tipo -> BOOL .)
    COMA            reduce using rule 66 (tipo -> BOOL .)
    LLAVEIZQ        reduce using rule 66 (tipo -> BOOL .)


state 63

    (67) tipo -> CHAR .

    DOSPT           reduce using rule 67 (tipo -> CHAR .)
    IGUAL           reduce using rule 67 (tipo -> CHAR .)
    PARDER          reduce using rule 67 (tipo -> CHAR .)
    COMA            reduce using rule 67 (tipo -> CHAR .)
    LLAVEIZQ        reduce using rule 67 (tipo -> CHAR .)


state 64

    (68) tipo -> STRING .

    DOSPT           reduce using rule 68 (tipo -> STRING .)
    IGUAL           reduce using rule 68 (tipo -> STRING .)
    PARDER          reduce using rule 68 (tipo -> STRING .)
    COMA            reduce using rule 68 (tipo -> STRING .)
    LLAVEIZQ        reduce using rule 68 (tipo -> STRING .)


state 65

    (69) tipo -> SIGNOI . STR

    STR             shift and go to state 105


state 66

    (115) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 106
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 67

    (126) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 107


state 68

    (43) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 108
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 69

    (58) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 109
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 70

    (59) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 110
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 71

    (60) break -> BREAK PTCOMA .

    FN              reduce using rule 60 (break -> BREAK PTCOMA .)
    LET             reduce using rule 60 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 60 (break -> BREAK PTCOMA .)
    ID              reduce using rule 60 (break -> BREAK PTCOMA .)
    IF              reduce using rule 60 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 60 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 60 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 60 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 60 (break -> BREAK PTCOMA .)
    RETURN          reduce using rule 60 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 60 (break -> BREAK PTCOMA .)
    $end            reduce using rule 60 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 60 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 60 (break -> BREAK PTCOMA .)


state 72

    (61) break -> BREAK expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 111
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 73

    (63) return -> RETURN expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 112
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 74

    (62) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    LET             reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    MATCH           reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    LOOP            reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 62 (continue -> CONTINUE PTCOMA .)
    COMA            reduce using rule 62 (continue -> CONTINUE PTCOMA .)


state 75

    (1) inicio -> instrucciones main instrucciones .
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 76

    (5) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 113


state 77

    (20) funciones -> FN ID PARIZQ . lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID PARIZQ . lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (22) lparametros -> . lparametros COMA lparame
    (23) lparametros -> . lparame
    (24) lparame -> . ID DOSPT tipo

    ID              shift and go to state 114

    lparametros                    shift and go to state 115
    lparame                        shift and go to state 116

state 78

    (30) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 117
    IGUAL           shift and go to state 118


state 79

    (32) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 119

state 80

    (33) declaracion -> LET ID IGUAL . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 120
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 81

    (34) asignacion -> ID IGUAL expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 121
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 82

    (25) llamada_funciones -> ID PARIZQ largumentos . PARDER
    (26) largumentos -> largumentos . COMA expresion

    PARDER          shift and go to state 122
    COMA            shift and go to state 123


state 83

    (27) largumentos -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          reduce using rule 27 (largumentos -> expresion .)
    COMA            reduce using rule 27 (largumentos -> expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 84

    (28) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 124
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 85

    (104) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 125
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 86

    (35) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (36) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (37) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (38) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 126
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 87

    (84) expresion -> expresion MAS . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 127
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 88

    (85) expresion -> expresion MENOS . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 128
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 89

    (86) expresion -> expresion POR . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 129
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 90

    (87) expresion -> expresion DIVIDIDO . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 130
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 91

    (88) expresion -> expresion MODULO . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 131
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 92

    (91) expresion -> expresion IGUALQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 132
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 93

    (92) expresion -> expresion NOIGUALQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 133
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 94

    (93) expresion -> expresion MENORQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 134
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 95

    (94) expresion -> expresion MAYORQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 135
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 96

    (95) expresion -> expresion MENORIQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 136
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 97

    (96) expresion -> expresion MAYORIQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 137
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 98

    (97) expresion -> expresion OR . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 138
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 99

    (98) expresion -> expresion AND . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 139
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 100

    (79) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (80) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 140
    TOOWNED         shift and go to state 141


state 101

    (99) expresion -> MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 99 (expresion -> MENOS expresion .)
    MAS             reduce using rule 99 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 99 (expresion -> MENOS expresion .)
    POR             reduce using rule 99 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 99 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 99 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 99 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 99 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 99 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 99 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 99 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 99 (expresion -> MENOS expresion .)
    OR              reduce using rule 99 (expresion -> MENOS expresion .)
    AND             reduce using rule 99 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 99 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 99 (expresion -> MENOS expresion .)
    COMA            reduce using rule 99 (expresion -> MENOS expresion .)
    PTO             reduce using rule 99 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 99 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 99 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 99 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! POR             [ shift and go to state 89 ]
  ! DIVIDIDO        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 102

    (89) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 142


state 103

    (101) expresion -> PARIZQ expresion . PARDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          shift and go to state 143
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 104

    (100) expresion -> NOT expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 100 (expresion -> NOT expresion .)
    MAS             reduce using rule 100 (expresion -> NOT expresion .)
    MENOS           reduce using rule 100 (expresion -> NOT expresion .)
    POR             reduce using rule 100 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 100 (expresion -> NOT expresion .)
    MODULO          reduce using rule 100 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 100 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 100 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 100 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 100 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 100 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 100 (expresion -> NOT expresion .)
    OR              reduce using rule 100 (expresion -> NOT expresion .)
    AND             reduce using rule 100 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 100 (expresion -> NOT expresion .)
    PARDER          reduce using rule 100 (expresion -> NOT expresion .)
    COMA            reduce using rule 100 (expresion -> NOT expresion .)
    PTO             reduce using rule 100 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 100 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 100 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 100 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! POR             [ shift and go to state 89 ]
  ! DIVIDIDO        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 105

    (69) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 69 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 69 (tipo -> SIGNOI STR .)
    PARDER          reduce using rule 69 (tipo -> SIGNOI STR .)
    COMA            reduce using rule 69 (tipo -> SIGNOI STR .)
    LLAVEIZQ        reduce using rule 69 (tipo -> SIGNOI STR .)


state 106

    (115) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 144
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 107

    (126) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 145
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 108

    (43) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (44) imatch -> . opmatch COMA dmatch
    (45) opmatch -> . opmatch COMA cmatch
    (46) opmatch -> . opmatch COMA rmatch
    (47) opmatch -> . cmatch
    (48) opmatch -> . rmatch
    (49) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (50) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (55) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (51) bloque_match -> . bloque_match BARRAS expresion
    (52) bloque_match -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 146
    imatch                         shift and go to state 147
    opmatch                        shift and go to state 148
    cmatch                         shift and go to state 149
    rmatch                         shift and go to state 150
    bloque_match                   shift and go to state 151
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 109

    (58) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 152
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 110

    (59) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 153
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 111

    (61) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    RETURN          reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    CONTINUE        reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    $end            reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 61 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 61 (break -> BREAK expresion PTCOMA .)


state 112

    (63) return -> RETURN expresion PTCOMA .

    FN              reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    LET             reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    PRINTLN         reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    MATCH           reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    LOOP            reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    $end            reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    LLAVEDER        reduce using rule 63 (return -> RETURN expresion PTCOMA .)
    COMA            reduce using rule 63 (return -> RETURN expresion PTCOMA .)


state 113

    (5) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 154


state 114

    (24) lparame -> ID . DOSPT tipo

    DOSPT           shift and go to state 155


state 115

    (20) funciones -> FN ID PARIZQ lparametros . PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID PARIZQ lparametros . PARDER LLAVEIZQ instrucciones LLAVEDER
    (22) lparametros -> lparametros . COMA lparame

    PARDER          shift and go to state 156
    COMA            shift and go to state 157


state 116

    (23) lparametros -> lparame .

    PARDER          reduce using rule 23 (lparametros -> lparame .)
    COMA            reduce using rule 23 (lparametros -> lparame .)


state 117

    (30) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 158

state 118

    (31) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 159
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 119

    (32) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 160


state 120

    (33) declaracion -> LET ID IGUAL expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 161
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 121

    (34) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 34 (asignacion -> ID IGUAL expresion PTCOMA .)


state 122

    (25) llamada_funciones -> ID PARIZQ largumentos PARDER .

    PTCOMA          reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEIZQ        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAS             reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENOS           reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    POR             reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    DIVIDIDO        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MODULO          reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUALQUE        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    NOIGUALQUE      reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORQUE        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORQUE        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MENORIQUE       reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    MAYORIQUE       reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    OR              reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    AND             reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PARDER          reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    COMA            reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    PTO             reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    IGUAL           reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    BARRAS          reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)
    LLAVEDER        reduce using rule 25 (llamada_funciones -> ID PARIZQ largumentos PARDER .)


state 123

    (26) largumentos -> largumentos COMA . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 162
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 124

    (28) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (29) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    COMA            shift and go to state 163
    PARDER          shift and go to state 164
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 125

    (104) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (105) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (106) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (107) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (112) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (113) bloque_expresion -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 165
    bloque_expresion               shift and go to state 166
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 126

    (35) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (36) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (37) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (38) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 167
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 127

    (84) expresion -> expresion MAS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 84 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 84 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 84 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 84 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 84 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 84 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 84 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 84 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! POR             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 128

    (85) expresion -> expresion MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 85 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 85 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! POR             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 129

    (86) expresion -> expresion POR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 86 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 86 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 86 (expresion -> expresion POR expresion .)
    POR             reduce using rule 86 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 86 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 86 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 86 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 86 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 86 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 86 (expresion -> expresion POR expresion .)
    OR              reduce using rule 86 (expresion -> expresion POR expresion .)
    AND             reduce using rule 86 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 86 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 86 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 86 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 86 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 86 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! POR             [ shift and go to state 89 ]
  ! DIVIDIDO        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 130

    (87) expresion -> expresion DIVIDIDO expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 87 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! POR             [ shift and go to state 89 ]
  ! DIVIDIDO        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 131

    (88) expresion -> expresion MODULO expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 88 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 88 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 88 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 88 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 88 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 88 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 88 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 88 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 88 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 88 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! POR             [ shift and go to state 89 ]
  ! DIVIDIDO        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 132

    (91) expresion -> expresion IGUALQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 91 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 91 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 91 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 91 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 133

    (92) expresion -> expresion NOIGUALQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 92 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 134

    (93) expresion -> expresion MENORQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 93 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 93 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 135

    (94) expresion -> expresion MAYORQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 94 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 94 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 136

    (95) expresion -> expresion MENORIQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 95 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 95 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 137

    (96) expresion -> expresion MAYORIQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 92 ]
  ! NOIGUALQUE      [ shift and go to state 93 ]
  ! MENORQUE        [ shift and go to state 94 ]
  ! MAYORQUE        [ shift and go to state 95 ]
  ! MENORIQUE       [ shift and go to state 96 ]
  ! MAYORIQUE       [ shift and go to state 97 ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 138

    (97) expresion -> expresion OR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 97 (expresion -> expresion OR expresion .)
    OR              reduce using rule 97 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 97 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 97 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 97 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 97 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    AND             shift and go to state 99

  ! MAS             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 97 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 98 ]


state 139

    (98) expresion -> expresion AND expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 98 (expresion -> expresion AND expresion .)
    OR              reduce using rule 98 (expresion -> expresion AND expresion .)
    AND             reduce using rule 98 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 98 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 98 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 98 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 98 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 98 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 98 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97

  ! MAS             [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 98 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]


state 140

    (79) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 168


state 141

    (80) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 169


state 142

    (89) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 170
    POWF            shift and go to state 171


state 143

    (101) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 101 (expresion -> PARIZQ expresion PARDER .)


state 144

    (115) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (116) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (119) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (120) opmatch_asig -> . cmatch_asig
    (121) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (122) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (123) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (124) bloque_match_asig -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 172
    imatch_asig                    shift and go to state 173
    opmatch_asig                   shift and go to state 174
    cmatch_asig                    shift and go to state 175
    bloque_match_asig              shift and go to state 176
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 145

    (126) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 177
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 146

    (55) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (52) bloque_match -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTO             shift and go to state 178
    IGUAL           reduce using rule 52 (bloque_match -> expresion .)
    BARRAS          reduce using rule 52 (bloque_match -> expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 147

    (43) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 179


state 148

    (44) imatch -> opmatch . COMA dmatch
    (45) opmatch -> opmatch . COMA cmatch
    (46) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 180


state 149

    (47) opmatch -> cmatch .

    COMA            reduce using rule 47 (opmatch -> cmatch .)


state 150

    (48) opmatch -> rmatch .

    COMA            reduce using rule 48 (opmatch -> rmatch .)


state 151

    (49) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (50) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (51) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 181
    BARRAS          shift and go to state 182


state 152

    (58) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 58 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 153

    (59) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 183
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 154

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 184
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 155

    (24) lparame -> ID DOSPT . tipo
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 185

state 156

    (20) funciones -> FN ID PARIZQ lparametros PARDER . MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> FN ID PARIZQ lparametros PARDER . LLAVEIZQ instrucciones LLAVEDER

    MENOS           shift and go to state 186
    LLAVEIZQ        shift and go to state 187


state 157

    (22) lparametros -> lparametros COMA . lparame
    (24) lparame -> . ID DOSPT tipo

    ID              shift and go to state 114

    lparame                        shift and go to state 188

state 158

    (30) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 189


state 159

    (31) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 190
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 160

    (32) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 191
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 161

    (33) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 33 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 162

    (26) largumentos -> largumentos COMA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          reduce using rule 26 (largumentos -> largumentos COMA expresion .)
    COMA            reduce using rule 26 (largumentos -> largumentos COMA expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 163

    (28) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (70) expresiones -> . expresiones COMA expresion
    (71) expresiones -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 192
    expresiones                    shift and go to state 193
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 164

    (29) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 194


state 165

    (113) bloque_expresion -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 113 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 113 (bloque_expresion -> expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 166

    (104) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (105) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (106) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (112) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 195
    PTCOMA          shift and go to state 196


state 167

    (35) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (36) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (37) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (38) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (42) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (39) lelseif -> . lelseif elseif
    (40) lelseif -> . elseif
    (41) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 35 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 199

    else                           shift and go to state 197
    lelseif                        shift and go to state 198
    elseif                         shift and go to state 200

state 168

    (79) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 201


state 169

    (80) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 202


state 170

    (89) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 203


state 171

    (90) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 204


state 172

    (124) bloque_match_asig -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 124 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 124 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 173

    (115) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 205


state 174

    (116) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (119) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 206


state 175

    (120) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 120 (opmatch_asig -> cmatch_asig .)


state 176

    (121) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (122) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (123) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 207
    BARRAS          shift and go to state 208


state 177

    (126) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 126 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 178

    (55) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 209


state 179

    (43) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    RETURN          reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    CONTINUE        reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    $end            reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 43 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 180

    (44) imatch -> opmatch COMA . dmatch
    (45) opmatch -> opmatch COMA . cmatch
    (46) opmatch -> opmatch COMA . rmatch
    (53) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (54) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (49) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (50) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (55) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (51) bloque_match -> . bloque_match BARRAS expresion
    (52) bloque_match -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 213
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    dmatch                         shift and go to state 210
    cmatch                         shift and go to state 211
    rmatch                         shift and go to state 212
    bloque_match                   shift and go to state 151
    expresion                      shift and go to state 146
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 181

    (49) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (50) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 214


state 182

    (51) bloque_match -> bloque_match BARRAS . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 215
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 183

    (59) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 59 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 184

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 216
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 185

    (24) lparame -> ID DOSPT tipo .

    PARDER          reduce using rule 24 (lparame -> ID DOSPT tipo .)
    COMA            reduce using rule 24 (lparame -> ID DOSPT tipo .)


state 186

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS . MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER

    MAYORQUE        shift and go to state 217


state 187

    (21) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 218
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 188

    (22) lparametros -> lparametros COMA lparame .

    PARDER          reduce using rule 22 (lparametros -> lparametros COMA lparame .)
    COMA            reduce using rule 22 (lparametros -> lparametros COMA lparame .)


state 189

    (30) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 219
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 190

    (31) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 31 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 191

    (32) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 220
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 192

    (71) expresiones -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          reduce using rule 71 (expresiones -> expresion .)
    COMA            reduce using rule 71 (expresiones -> expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 193

    (28) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (70) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 222
    COMA            shift and go to state 221


state 194

    (29) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 29 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 195

    (104) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (105) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (106) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (111) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (108) elseifa -> . elseifa lif
    (109) elseifa -> . lif
    (110) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 104 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 225

    elsea                          shift and go to state 223
    elseifa                        shift and go to state 224
    lif                            shift and go to state 226

state 196

    (112) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 227
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 197

    (36) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    RETURN          reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 36 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 198

    (37) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (38) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (39) lelseif -> lelseif . elseif
    (42) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (41) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    RETURN          reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 37 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 199

    else                           shift and go to state 228
    elseif                         shift and go to state 229

state 199

    (42) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (41) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 230
    IF              shift and go to state 231


state 200

    (40) lelseif -> elseif .

    ELSE            reduce using rule 40 (lelseif -> elseif .)
    FN              reduce using rule 40 (lelseif -> elseif .)
    LET             reduce using rule 40 (lelseif -> elseif .)
    PRINTLN         reduce using rule 40 (lelseif -> elseif .)
    ID              reduce using rule 40 (lelseif -> elseif .)
    IF              reduce using rule 40 (lelseif -> elseif .)
    MATCH           reduce using rule 40 (lelseif -> elseif .)
    LOOP            reduce using rule 40 (lelseif -> elseif .)
    WHILE           reduce using rule 40 (lelseif -> elseif .)
    BREAK           reduce using rule 40 (lelseif -> elseif .)
    RETURN          reduce using rule 40 (lelseif -> elseif .)
    CONTINUE        reduce using rule 40 (lelseif -> elseif .)
    $end            reduce using rule 40 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 40 (lelseif -> elseif .)
    COMA            reduce using rule 40 (lelseif -> elseif .)


state 201

    (79) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 79 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 202

    (80) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 80 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 203

    (89) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 232
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 204

    (90) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 233
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 205

    (115) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 115 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 206

    (116) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (119) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (117) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (121) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (122) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (123) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (124) bloque_match_asig -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 236
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    dmatch_asig                    shift and go to state 234
    cmatch_asig                    shift and go to state 235
    expresion                      shift and go to state 172
    bloque_match_asig              shift and go to state 176
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 207

    (121) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (122) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 237


state 208

    (123) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 238
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 209

    (55) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 239


state 210

    (44) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 44 (imatch -> opmatch COMA dmatch .)


state 211

    (45) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 45 (opmatch -> opmatch COMA cmatch .)


state 212

    (46) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 46 (opmatch -> opmatch COMA rmatch .)


state 213

    (53) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (54) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 240


state 214

    (49) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (50) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEIZQ        shift and go to state 241
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 242
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 215

    (51) bloque_match -> bloque_match BARRAS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 51 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 51 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 216

    (5) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    LET             reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 5 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 217

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE . tipo LLAVEIZQ instrucciones LLAVEDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR

    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65

    tipo                           shift and go to state 243

state 218

    (21) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 244
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 219

    (30) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 245
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 220

    (32) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 32 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 221

    (70) expresiones -> expresiones COMA . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 246
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 222

    (28) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 247


state 223

    (105) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 105 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 224

    (106) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (108) elseifa -> elseifa . lif
    (111) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (110) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 106 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 225

    elsea                          shift and go to state 248
    lif                            shift and go to state 249

state 225

    (111) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (110) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 250
    IF              shift and go to state 251


state 226

    (109) elseifa -> lif .

    ELSE            reduce using rule 109 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 109 (elseifa -> lif .)
    MAS             reduce using rule 109 (elseifa -> lif .)
    MENOS           reduce using rule 109 (elseifa -> lif .)
    POR             reduce using rule 109 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 109 (elseifa -> lif .)
    MODULO          reduce using rule 109 (elseifa -> lif .)
    IGUALQUE        reduce using rule 109 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 109 (elseifa -> lif .)
    MENORQUE        reduce using rule 109 (elseifa -> lif .)
    MAYORQUE        reduce using rule 109 (elseifa -> lif .)
    MENORIQUE       reduce using rule 109 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 109 (elseifa -> lif .)
    OR              reduce using rule 109 (elseifa -> lif .)
    AND             reduce using rule 109 (elseifa -> lif .)
    PTCOMA          reduce using rule 109 (elseifa -> lif .)
    PARDER          reduce using rule 109 (elseifa -> lif .)
    COMA            reduce using rule 109 (elseifa -> lif .)
    PTO             reduce using rule 109 (elseifa -> lif .)
    IGUAL           reduce using rule 109 (elseifa -> lif .)
    BARRAS          reduce using rule 109 (elseifa -> lif .)
    LLAVEDER        reduce using rule 109 (elseifa -> lif .)


state 227

    (112) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 112 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 112 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 228

    (38) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    RETURN          reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 38 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 229

    (39) lelseif -> lelseif elseif .

    ELSE            reduce using rule 39 (lelseif -> lelseif elseif .)
    FN              reduce using rule 39 (lelseif -> lelseif elseif .)
    LET             reduce using rule 39 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 39 (lelseif -> lelseif elseif .)
    ID              reduce using rule 39 (lelseif -> lelseif elseif .)
    IF              reduce using rule 39 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 39 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 39 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 39 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 39 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 39 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 39 (lelseif -> lelseif elseif .)
    $end            reduce using rule 39 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 39 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 39 (lelseif -> lelseif elseif .)


state 230

    (42) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 252
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 231

    (41) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 253
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 232

    (89) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    COMA            shift and go to state 254
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 233

    (90) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    COMA            shift and go to state 255
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 234

    (116) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 116 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 235

    (119) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 119 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 236

    (117) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 256


state 237

    (121) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (122) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 257
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 258
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 238

    (123) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 123 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 123 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 239

    (55) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 259
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 240

    (53) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (54) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 260


state 241

    (49) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 261
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 242

    (50) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 50 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 243

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 262


state 244

    (21) funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 21 (funciones -> FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 245

    (30) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    RETURN          reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    CONTINUE        reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    $end            reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 30 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 246

    (70) expresiones -> expresiones COMA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          reduce using rule 70 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 70 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 247

    (28) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    $end            reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 28 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 248

    (107) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 107 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 249

    (108) elseifa -> elseifa lif .

    ELSE            reduce using rule 108 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 108 (elseifa -> elseifa lif .)
    MAS             reduce using rule 108 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 108 (elseifa -> elseifa lif .)
    POR             reduce using rule 108 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 108 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 108 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 108 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 108 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 108 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 108 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 108 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 108 (elseifa -> elseifa lif .)
    OR              reduce using rule 108 (elseifa -> elseifa lif .)
    AND             reduce using rule 108 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 108 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 108 (elseifa -> elseifa lif .)
    COMA            reduce using rule 108 (elseifa -> elseifa lif .)
    PTO             reduce using rule 108 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 108 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 108 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 108 (elseifa -> elseifa lif .)


state 250

    (111) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (112) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (113) bloque_expresion -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 263
    expresion                      shift and go to state 165
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 251

    (110) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 264
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 252

    (42) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 265
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 253

    (41) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 266
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 254

    (89) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 267
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 255

    (90) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    tipo                           shift and go to state 53
    expresion                      shift and go to state 268
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 256

    (117) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (118) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 269


state 257

    (121) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (112) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (113) bloque_expresion -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 270
    expresion                      shift and go to state 165
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 258

    (122) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    COMA            reduce using rule 122 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 259

    (55) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 271
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 260

    (53) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (54) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEIZQ        shift and go to state 272
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 273
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 261

    (49) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 274
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 262

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 275
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 263

    (111) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (112) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 276
    PTCOMA          shift and go to state 196


state 264

    (110) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 277
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 265

    (42) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 42 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 266

    (41) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 278
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 267

    (89) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          shift and go to state 279
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 268

    (90) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    PARDER          shift and go to state 280
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 269

    (117) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (118) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 281
    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 282
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 270

    (121) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (112) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 283
    PTCOMA          shift and go to state 196


state 271

    (55) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 284


state 272

    (53) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 285
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 273

    (54) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 54 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 274

    (49) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 49 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 275

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 286
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 276

    (111) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 111 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 277

    (110) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (112) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (113) bloque_expresion -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    expresion                      shift and go to state 165
    bloque_expresion               shift and go to state 287
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 278

    (41) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 288
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 279

    (89) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 89 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 280

    (90) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 90 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 281

    (117) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (112) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (113) bloque_expresion -> . expresion
    (72) expresion -> . ID
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . tostring
    (78) expresion -> . toowned
    (81) expresion -> . STR
    (82) expresion -> . CADENA
    (83) expresion -> . CARACTER
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIVIDIDO expresion
    (88) expresion -> . expresion MODULO expresion
    (89) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (90) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (91) expresion -> . expresion IGUALQUE expresion
    (92) expresion -> . expresion NOIGUALQUE expresion
    (93) expresion -> . expresion MENORQUE expresion
    (94) expresion -> . expresion MAYORQUE expresion
    (95) expresion -> . expresion MENORIQUE expresion
    (96) expresion -> . expresion MAYORIQUE expresion
    (97) expresion -> . expresion OR expresion
    (98) expresion -> . expresion AND expresion
    (99) expresion -> . MENOS expresion
    (100) expresion -> . NOT expresion
    (101) expresion -> . PARIZQ expresion PARDER
    (102) expresion -> . llamada_funciones
    (103) expresion -> . if_asig
    (114) expresion -> . match_asig
    (125) expresion -> . loop_asig
    (79) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (80) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (64) tipo -> . I64
    (65) tipo -> . F64
    (66) tipo -> . BOOL
    (67) tipo -> . CHAR
    (68) tipo -> . STRING
    (69) tipo -> . SIGNOI STR
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER
    (104) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (105) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (106) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (107) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (115) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (126) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    STR             shift and go to state 49
    CADENA          shift and go to state 50
    CARACTER        shift and go to state 51
    MENOS           shift and go to state 52
    NOT             shift and go to state 55
    PARIZQ          shift and go to state 54
    I64             shift and go to state 60
    F64             shift and go to state 61
    BOOL            shift and go to state 62
    CHAR            shift and go to state 63
    STRING          shift and go to state 64
    SIGNOI          shift and go to state 65
    IF              shift and go to state 40
    MATCH           shift and go to state 66
    LOOP            shift and go to state 67

    bloque_expresion               shift and go to state 289
    expresion                      shift and go to state 165
    tostring                       shift and go to state 47
    toowned                        shift and go to state 48
    tipo                           shift and go to state 53
    llamada_funciones              shift and go to state 56
    if_asig                        shift and go to state 57
    match_asig                     shift and go to state 58
    loop_asig                      shift and go to state 59

state 282

    (118) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIVIDIDO expresion
    (88) expresion -> expresion . MODULO expresion
    (91) expresion -> expresion . IGUALQUE expresion
    (92) expresion -> expresion . NOIGUALQUE expresion
    (93) expresion -> expresion . MENORQUE expresion
    (94) expresion -> expresion . MAYORQUE expresion
    (95) expresion -> expresion . MENORIQUE expresion
    (96) expresion -> expresion . MAYORIQUE expresion
    (97) expresion -> expresion . OR expresion
    (98) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 118 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    POR             shift and go to state 89
    DIVIDIDO        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALQUE        shift and go to state 92
    NOIGUALQUE      shift and go to state 93
    MENORQUE        shift and go to state 94
    MAYORQUE        shift and go to state 95
    MENORIQUE       shift and go to state 96
    MAYORIQUE       shift and go to state 97
    OR              shift and go to state 98
    AND             shift and go to state 99


state 283

    (121) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 121 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 284

    (55) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (56) rrmatch -> . instruccion
    (57) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEIZQ        shift and go to state 292
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    rrmatch                        shift and go to state 290
    instruccion                    shift and go to state 291
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 285

    (53) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 293
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 286

    (20) funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 20 (funciones -> FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER .)


state 287

    (110) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (112) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 294
    PTCOMA          shift and go to state 196


state 288

    (41) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 41 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 289

    (117) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (112) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 295
    PTCOMA          shift and go to state 196


state 290

    (55) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 55 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 291

    (56) rrmatch -> instruccion .

    COMA            reduce using rule 56 (rrmatch -> instruccion .)


state 292

    (57) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (6) instrucciones -> . instrucciones instruccion
    (7) instrucciones -> . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instrucciones                  shift and go to state 296
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 293

    (53) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 53 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 294

    (110) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 110 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 295

    (117) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 117 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 296

    (57) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (6) instrucciones -> instrucciones . instruccion
    (8) instruccion -> . declaracion
    (9) instruccion -> . imprimir
    (10) instruccion -> . asignacion
    (11) instruccion -> . if
    (12) instruccion -> . match
    (13) instruccion -> . loop
    (14) instruccion -> . while
    (15) instruccion -> . break
    (16) instruccion -> . return
    (17) instruccion -> . continue
    (18) instruccion -> . funciones
    (19) instruccion -> . llamada_funciones PTCOMA
    (30) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (31) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (32) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (33) declaracion -> . LET ID IGUAL expresion PTCOMA
    (28) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (29) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (34) asignacion -> . ID IGUAL expresion PTCOMA
    (35) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (36) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (37) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (38) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (43) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (58) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (59) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (60) break -> . BREAK PTCOMA
    (61) break -> . BREAK expresion PTCOMA
    (63) return -> . RETURN expresion PTCOMA
    (62) continue -> . CONTINUE PTCOMA
    (20) funciones -> . FN ID PARIZQ lparametros PARDER MENOS MAYORQUE tipo LLAVEIZQ instrucciones LLAVEDER
    (21) funciones -> . FN ID PARIZQ lparametros PARDER LLAVEIZQ instrucciones LLAVEDER
    (25) llamada_funciones -> . ID PARIZQ largumentos PARDER

    LLAVEDER        shift and go to state 297
    LET             shift and go to state 18
    PRINTLN         shift and go to state 20
    ID              shift and go to state 19
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 23
    WHILE           shift and go to state 24
    BREAK           shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    FN              shift and go to state 31

    instruccion                    shift and go to state 29
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13
    return                         shift and go to state 14
    continue                       shift and go to state 15
    funciones                      shift and go to state 16
    llamada_funciones              shift and go to state 17

state 297

    (57) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 57 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 50 resolved as shift
