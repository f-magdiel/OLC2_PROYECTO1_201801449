Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    instruccion -> match
Rule 11    instruccion -> loop
Rule 12    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 13    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 14    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 15    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 16    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 17    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 18    asignacion -> ID IGUAL expresion PTCOMA
Rule 19    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 20    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 21    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 22    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 23    lelseif -> lelseif elseif
Rule 24    lelseif -> elseif
Rule 25    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 26    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 27    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 28    imatch -> opmatch COMA dmatch
Rule 29    opmatch -> opmatch COMA cmatch
Rule 30    opmatch -> opmatch COMA rmatch
Rule 31    opmatch -> cmatch
Rule 32    opmatch -> rmatch
Rule 33    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 34    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 35    bloque_match -> bloque_match BARRAS expresion
Rule 36    bloque_match -> expresion
Rule 37    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 38    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 39    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 40    rrmatch -> instruccion
Rule 41    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 42    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 43    tipo -> I64
Rule 44    tipo -> F64
Rule 45    tipo -> BOOL
Rule 46    tipo -> CHAR
Rule 47    tipo -> STRING
Rule 48    tipo -> SIGNOI STR
Rule 49    expresiones -> expresiones COMA expresion
Rule 50    expresiones -> expresion
Rule 51    expresion -> ID
Rule 52    expresion -> ENTERO
Rule 53    expresion -> DECIMAL
Rule 54    expresion -> TRUE
Rule 55    expresion -> FALSE
Rule 56    expresion -> tostring
Rule 57    expresion -> toowned
Rule 58    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 59    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 60    expresion -> STR
Rule 61    expresion -> CADENA
Rule 62    expresion -> CARACTER
Rule 63    expresion -> expresion MAS expresion
Rule 64    expresion -> expresion MENOS expresion
Rule 65    expresion -> expresion POR expresion
Rule 66    expresion -> expresion DIVIDIDO expresion
Rule 67    expresion -> expresion MODULO expresion
Rule 68    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 69    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 70    expresion -> expresion IGUALQUE expresion
Rule 71    expresion -> expresion NOIGUALQUE expresion
Rule 72    expresion -> expresion MENORQUE expresion
Rule 73    expresion -> expresion MAYORQUE expresion
Rule 74    expresion -> expresion MENORIQUE expresion
Rule 75    expresion -> expresion MAYORIQUE expresion
Rule 76    expresion -> expresion OR expresion
Rule 77    expresion -> expresion AND expresion
Rule 78    expresion -> MENOS expresion
Rule 79    expresion -> NOT expresion
Rule 80    expresion -> PARIZQ expresion PARDER
Rule 81    expresion -> if_asig
Rule 82    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 83    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
Rule 84    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
Rule 85    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
Rule 86    elseif -> elseif lif
Rule 87    elseif -> lif
Rule 88    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 89    else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 90    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 91    bloque_expresion -> expresion
Rule 92    expresion -> match_asig
Rule 93    match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 94    imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 95    dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 96    dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 97    opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 98    opmatch_asig -> cmatch_asig
Rule 99    cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 100   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 101   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 102   bloque_match_asig -> expresion

Terminals, with rules where they appear

AND                  : 77
AS                   : 
BARRAS               : 35 101
BOOL                 : 45
CADENA               : 58 59 61
CARACTER             : 62
CHAR                 : 46
COMA                 : 12 28 29 30 49 68 69 94 97
DECIMAL              : 53
DIVIDIDO             : 66
DOSPT                : 14 16 68 68 69 69
ELSE                 : 25 26 88 89
ENTERO               : 52
F64                  : 44
FALSE                : 55
FN                   : 3
GUIONB               : 37 38 95 96
I64                  : 43
ID                   : 14 15 16 17 18 51
IF                   : 19 20 21 22 25 82 83 84 85 88
IGUAL                : 14 15 16 17 18 33 34 37 38 39 39 95 96 99 100
IGUALQUE             : 70
LET                  : 14 15 16 17
LLAVEDER             : 3 19 20 21 22 25 26 27 33 37 41 42 82 83 84 85 88 89 93 95 99
LLAVEIZQ             : 3 19 20 21 22 25 26 27 33 37 41 42 82 83 84 85 88 89 93 95 99
LOOP                 : 42
MAIN                 : 3
MAS                  : 63
MATCH                : 27 93
MAYORIQUE            : 75
MAYORQUE             : 33 34 37 38 39 73 95 96 99 100
MENORIQUE            : 74
MENORQUE             : 72
MENOS                : 64 78
MODULO               : 67
MUT                  : 14 15
NOIGUALQUE           : 71
NOT                  : 12 13 79
OR                   : 76
PARDER               : 3 12 13 58 59 68 69 80
PARIZQ               : 3 12 13 58 59 68 69 80
POR                  : 65
POW                  : 68
POWF                 : 69
PRINTLN              : 12 13
PTCOMA               : 12 13 14 15 16 17 18 90
PTO                  : 39 39 58 59
SIGNOI               : 48
STR                  : 48 60
STRING               : 47
TOOWNED              : 59
TOSTRING             : 58
TRUE                 : 54
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 82 83 84 85 88 89 90 95 99
bloque_match         : 33 34 35
bloque_match_asig    : 99 100 101
cmatch               : 29 31
cmatch_asig          : 97 98
declaracion          : 6
dmatch               : 28
dmatch_asig          : 94
else                 : 20 22 83 85
elseif               : 23 24 84 85 86
expresion            : 12 13 14 15 16 17 18 19 20 21 22 25 27 35 36 39 39 49 50 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 79 80 82 83 84 85 88 90 91 93 96 100 101 102
expresiones          : 12 49
if                   : 9
if_asig              : 81
imatch               : 27
imatch_asig          : 93
imprimir             : 7
inicio               : 0
instruccion          : 4 5 34 38 40
instrucciones        : 1 3 4 19 20 21 22 25 26 33 37 41 42
lelseif              : 21 22 23
lif                  : 86 87
loop                 : 11
main                 : 1 2
match                : 10
match_asig           : 92
opmatch              : 28 29 30
opmatch_asig         : 94 97
rmatch               : 30 32
rrmatch              : 39
tipo                 : 14 16 68 69
toowned              : 57
tostring             : 56

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    FN              shift and go to state 5
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    main                           shift and go to state 18
    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    MATCH           reduce using rule 5 (instrucciones -> instruccion .)
    LOOP            reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 20


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    MATCH           reduce using rule 6 (instruccion -> declaracion .)
    LOOP            reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)
    COMA            reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    MATCH           reduce using rule 7 (instruccion -> imprimir .)
    LOOP            reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)
    COMA            reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    MATCH           reduce using rule 8 (instruccion -> asignacion .)
    LOOP            reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)
    COMA            reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    MATCH           reduce using rule 9 (instruccion -> if .)
    LOOP            reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)
    COMA            reduce using rule 9 (instruccion -> if .)


state 10

    (10) instruccion -> match .

    FN              reduce using rule 10 (instruccion -> match .)
    LET             reduce using rule 10 (instruccion -> match .)
    PRINTLN         reduce using rule 10 (instruccion -> match .)
    ID              reduce using rule 10 (instruccion -> match .)
    IF              reduce using rule 10 (instruccion -> match .)
    MATCH           reduce using rule 10 (instruccion -> match .)
    LOOP            reduce using rule 10 (instruccion -> match .)
    LLAVEDER        reduce using rule 10 (instruccion -> match .)
    COMA            reduce using rule 10 (instruccion -> match .)


state 11

    (11) instruccion -> loop .

    FN              reduce using rule 11 (instruccion -> loop .)
    LET             reduce using rule 11 (instruccion -> loop .)
    PRINTLN         reduce using rule 11 (instruccion -> loop .)
    ID              reduce using rule 11 (instruccion -> loop .)
    IF              reduce using rule 11 (instruccion -> loop .)
    MATCH           reduce using rule 11 (instruccion -> loop .)
    LOOP            reduce using rule 11 (instruccion -> loop .)
    LLAVEDER        reduce using rule 11 (instruccion -> loop .)
    COMA            reduce using rule 11 (instruccion -> loop .)


state 12

    (14) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 21
    ID              shift and go to state 22


state 13

    (18) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 23


state 14

    (12) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 24


state 15

    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 26
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 16

    (27) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 50
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 17

    (42) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 51


state 18

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 19

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 20

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 52


state 21

    (14) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 53


state 22

    (16) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 54
    IGUAL           shift and go to state 55


state 23

    (18) asignacion -> ID IGUAL . expresion PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 56
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 24

    (12) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 57


state 25

    (82) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 58
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 26

    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 59
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 27

    (51) expresion -> ID .

    LLAVEIZQ        reduce using rule 51 (expresion -> ID .)
    MAS             reduce using rule 51 (expresion -> ID .)
    MENOS           reduce using rule 51 (expresion -> ID .)
    POR             reduce using rule 51 (expresion -> ID .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID .)
    MODULO          reduce using rule 51 (expresion -> ID .)
    IGUALQUE        reduce using rule 51 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 51 (expresion -> ID .)
    MENORQUE        reduce using rule 51 (expresion -> ID .)
    MAYORQUE        reduce using rule 51 (expresion -> ID .)
    MENORIQUE       reduce using rule 51 (expresion -> ID .)
    MAYORIQUE       reduce using rule 51 (expresion -> ID .)
    OR              reduce using rule 51 (expresion -> ID .)
    AND             reduce using rule 51 (expresion -> ID .)
    PTCOMA          reduce using rule 51 (expresion -> ID .)
    PARDER          reduce using rule 51 (expresion -> ID .)
    COMA            reduce using rule 51 (expresion -> ID .)
    PTO             reduce using rule 51 (expresion -> ID .)
    IGUAL           reduce using rule 51 (expresion -> ID .)
    BARRAS          reduce using rule 51 (expresion -> ID .)
    LLAVEDER        reduce using rule 51 (expresion -> ID .)


state 28

    (52) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 52 (expresion -> ENTERO .)
    MAS             reduce using rule 52 (expresion -> ENTERO .)
    MENOS           reduce using rule 52 (expresion -> ENTERO .)
    POR             reduce using rule 52 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 52 (expresion -> ENTERO .)
    MODULO          reduce using rule 52 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 52 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 52 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 52 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 52 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 52 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 52 (expresion -> ENTERO .)
    OR              reduce using rule 52 (expresion -> ENTERO .)
    AND             reduce using rule 52 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 52 (expresion -> ENTERO .)
    PARDER          reduce using rule 52 (expresion -> ENTERO .)
    COMA            reduce using rule 52 (expresion -> ENTERO .)
    PTO             reduce using rule 52 (expresion -> ENTERO .)
    IGUAL           reduce using rule 52 (expresion -> ENTERO .)
    BARRAS          reduce using rule 52 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 52 (expresion -> ENTERO .)


state 29

    (53) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 53 (expresion -> DECIMAL .)
    MAS             reduce using rule 53 (expresion -> DECIMAL .)
    MENOS           reduce using rule 53 (expresion -> DECIMAL .)
    POR             reduce using rule 53 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 53 (expresion -> DECIMAL .)
    MODULO          reduce using rule 53 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 53 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 53 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 53 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 53 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 53 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 53 (expresion -> DECIMAL .)
    OR              reduce using rule 53 (expresion -> DECIMAL .)
    AND             reduce using rule 53 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 53 (expresion -> DECIMAL .)
    PARDER          reduce using rule 53 (expresion -> DECIMAL .)
    COMA            reduce using rule 53 (expresion -> DECIMAL .)
    PTO             reduce using rule 53 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 53 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 53 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 53 (expresion -> DECIMAL .)


state 30

    (54) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 54 (expresion -> TRUE .)
    MAS             reduce using rule 54 (expresion -> TRUE .)
    MENOS           reduce using rule 54 (expresion -> TRUE .)
    POR             reduce using rule 54 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 54 (expresion -> TRUE .)
    MODULO          reduce using rule 54 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 54 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 54 (expresion -> TRUE .)
    MENORQUE        reduce using rule 54 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 54 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 54 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 54 (expresion -> TRUE .)
    OR              reduce using rule 54 (expresion -> TRUE .)
    AND             reduce using rule 54 (expresion -> TRUE .)
    PTCOMA          reduce using rule 54 (expresion -> TRUE .)
    PARDER          reduce using rule 54 (expresion -> TRUE .)
    COMA            reduce using rule 54 (expresion -> TRUE .)
    PTO             reduce using rule 54 (expresion -> TRUE .)
    IGUAL           reduce using rule 54 (expresion -> TRUE .)
    BARRAS          reduce using rule 54 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 54 (expresion -> TRUE .)


state 31

    (55) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 55 (expresion -> FALSE .)
    MAS             reduce using rule 55 (expresion -> FALSE .)
    MENOS           reduce using rule 55 (expresion -> FALSE .)
    POR             reduce using rule 55 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 55 (expresion -> FALSE .)
    MODULO          reduce using rule 55 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 55 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 55 (expresion -> FALSE .)
    MENORQUE        reduce using rule 55 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 55 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 55 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 55 (expresion -> FALSE .)
    OR              reduce using rule 55 (expresion -> FALSE .)
    AND             reduce using rule 55 (expresion -> FALSE .)
    PTCOMA          reduce using rule 55 (expresion -> FALSE .)
    PARDER          reduce using rule 55 (expresion -> FALSE .)
    COMA            reduce using rule 55 (expresion -> FALSE .)
    PTO             reduce using rule 55 (expresion -> FALSE .)
    IGUAL           reduce using rule 55 (expresion -> FALSE .)
    BARRAS          reduce using rule 55 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 55 (expresion -> FALSE .)


state 32

    (56) expresion -> tostring .

    LLAVEIZQ        reduce using rule 56 (expresion -> tostring .)
    MAS             reduce using rule 56 (expresion -> tostring .)
    MENOS           reduce using rule 56 (expresion -> tostring .)
    POR             reduce using rule 56 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 56 (expresion -> tostring .)
    MODULO          reduce using rule 56 (expresion -> tostring .)
    IGUALQUE        reduce using rule 56 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 56 (expresion -> tostring .)
    MENORQUE        reduce using rule 56 (expresion -> tostring .)
    MAYORQUE        reduce using rule 56 (expresion -> tostring .)
    MENORIQUE       reduce using rule 56 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 56 (expresion -> tostring .)
    OR              reduce using rule 56 (expresion -> tostring .)
    AND             reduce using rule 56 (expresion -> tostring .)
    PTCOMA          reduce using rule 56 (expresion -> tostring .)
    PARDER          reduce using rule 56 (expresion -> tostring .)
    COMA            reduce using rule 56 (expresion -> tostring .)
    PTO             reduce using rule 56 (expresion -> tostring .)
    IGUAL           reduce using rule 56 (expresion -> tostring .)
    BARRAS          reduce using rule 56 (expresion -> tostring .)
    LLAVEDER        reduce using rule 56 (expresion -> tostring .)


state 33

    (57) expresion -> toowned .

    LLAVEIZQ        reduce using rule 57 (expresion -> toowned .)
    MAS             reduce using rule 57 (expresion -> toowned .)
    MENOS           reduce using rule 57 (expresion -> toowned .)
    POR             reduce using rule 57 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 57 (expresion -> toowned .)
    MODULO          reduce using rule 57 (expresion -> toowned .)
    IGUALQUE        reduce using rule 57 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 57 (expresion -> toowned .)
    MENORQUE        reduce using rule 57 (expresion -> toowned .)
    MAYORQUE        reduce using rule 57 (expresion -> toowned .)
    MENORIQUE       reduce using rule 57 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 57 (expresion -> toowned .)
    OR              reduce using rule 57 (expresion -> toowned .)
    AND             reduce using rule 57 (expresion -> toowned .)
    PTCOMA          reduce using rule 57 (expresion -> toowned .)
    PARDER          reduce using rule 57 (expresion -> toowned .)
    COMA            reduce using rule 57 (expresion -> toowned .)
    PTO             reduce using rule 57 (expresion -> toowned .)
    IGUAL           reduce using rule 57 (expresion -> toowned .)
    BARRAS          reduce using rule 57 (expresion -> toowned .)
    LLAVEDER        reduce using rule 57 (expresion -> toowned .)


state 34

    (60) expresion -> STR .

    LLAVEIZQ        reduce using rule 60 (expresion -> STR .)
    MAS             reduce using rule 60 (expresion -> STR .)
    MENOS           reduce using rule 60 (expresion -> STR .)
    POR             reduce using rule 60 (expresion -> STR .)
    DIVIDIDO        reduce using rule 60 (expresion -> STR .)
    MODULO          reduce using rule 60 (expresion -> STR .)
    IGUALQUE        reduce using rule 60 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 60 (expresion -> STR .)
    MENORQUE        reduce using rule 60 (expresion -> STR .)
    MAYORQUE        reduce using rule 60 (expresion -> STR .)
    MENORIQUE       reduce using rule 60 (expresion -> STR .)
    MAYORIQUE       reduce using rule 60 (expresion -> STR .)
    OR              reduce using rule 60 (expresion -> STR .)
    AND             reduce using rule 60 (expresion -> STR .)
    PTCOMA          reduce using rule 60 (expresion -> STR .)
    PARDER          reduce using rule 60 (expresion -> STR .)
    COMA            reduce using rule 60 (expresion -> STR .)
    PTO             reduce using rule 60 (expresion -> STR .)
    IGUAL           reduce using rule 60 (expresion -> STR .)
    BARRAS          reduce using rule 60 (expresion -> STR .)
    LLAVEDER        reduce using rule 60 (expresion -> STR .)


state 35

    (61) expresion -> CADENA .
    (58) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (59) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 61 (expresion -> CADENA .)
    MAS             reduce using rule 61 (expresion -> CADENA .)
    MENOS           reduce using rule 61 (expresion -> CADENA .)
    POR             reduce using rule 61 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 61 (expresion -> CADENA .)
    MODULO          reduce using rule 61 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 61 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 61 (expresion -> CADENA .)
    MENORQUE        reduce using rule 61 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 61 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 61 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 61 (expresion -> CADENA .)
    OR              reduce using rule 61 (expresion -> CADENA .)
    AND             reduce using rule 61 (expresion -> CADENA .)
    PTCOMA          reduce using rule 61 (expresion -> CADENA .)
    PARDER          reduce using rule 61 (expresion -> CADENA .)
    COMA            reduce using rule 61 (expresion -> CADENA .)
    IGUAL           reduce using rule 61 (expresion -> CADENA .)
    BARRAS          reduce using rule 61 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 61 (expresion -> CADENA .)
    PTO             shift and go to state 73

  ! PTO             [ reduce using rule 61 (expresion -> CADENA .) ]


state 36

    (62) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 62 (expresion -> CARACTER .)
    MAS             reduce using rule 62 (expresion -> CARACTER .)
    MENOS           reduce using rule 62 (expresion -> CARACTER .)
    POR             reduce using rule 62 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 62 (expresion -> CARACTER .)
    MODULO          reduce using rule 62 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 62 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 62 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 62 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 62 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 62 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 62 (expresion -> CARACTER .)
    OR              reduce using rule 62 (expresion -> CARACTER .)
    AND             reduce using rule 62 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 62 (expresion -> CARACTER .)
    PARDER          reduce using rule 62 (expresion -> CARACTER .)
    COMA            reduce using rule 62 (expresion -> CARACTER .)
    PTO             reduce using rule 62 (expresion -> CARACTER .)
    IGUAL           reduce using rule 62 (expresion -> CARACTER .)
    BARRAS          reduce using rule 62 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 62 (expresion -> CARACTER .)


state 37

    (78) expresion -> MENOS . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 74
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 38

    (68) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 75


state 39

    (80) expresion -> PARIZQ . expresion PARDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 76
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 40

    (79) expresion -> NOT . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 77
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 41

    (81) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 81 (expresion -> if_asig .)
    MAS             reduce using rule 81 (expresion -> if_asig .)
    MENOS           reduce using rule 81 (expresion -> if_asig .)
    POR             reduce using rule 81 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 81 (expresion -> if_asig .)
    MODULO          reduce using rule 81 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 81 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 81 (expresion -> if_asig .)
    MENORQUE        reduce using rule 81 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 81 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 81 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 81 (expresion -> if_asig .)
    OR              reduce using rule 81 (expresion -> if_asig .)
    AND             reduce using rule 81 (expresion -> if_asig .)
    PTCOMA          reduce using rule 81 (expresion -> if_asig .)
    PARDER          reduce using rule 81 (expresion -> if_asig .)
    COMA            reduce using rule 81 (expresion -> if_asig .)
    PTO             reduce using rule 81 (expresion -> if_asig .)
    IGUAL           reduce using rule 81 (expresion -> if_asig .)
    BARRAS          reduce using rule 81 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 81 (expresion -> if_asig .)


state 42

    (92) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 92 (expresion -> match_asig .)
    MAS             reduce using rule 92 (expresion -> match_asig .)
    MENOS           reduce using rule 92 (expresion -> match_asig .)
    POR             reduce using rule 92 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 92 (expresion -> match_asig .)
    MODULO          reduce using rule 92 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 92 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 92 (expresion -> match_asig .)
    MENORQUE        reduce using rule 92 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 92 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 92 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 92 (expresion -> match_asig .)
    OR              reduce using rule 92 (expresion -> match_asig .)
    AND             reduce using rule 92 (expresion -> match_asig .)
    PTCOMA          reduce using rule 92 (expresion -> match_asig .)
    PARDER          reduce using rule 92 (expresion -> match_asig .)
    COMA            reduce using rule 92 (expresion -> match_asig .)
    PTO             reduce using rule 92 (expresion -> match_asig .)
    IGUAL           reduce using rule 92 (expresion -> match_asig .)
    BARRAS          reduce using rule 92 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 92 (expresion -> match_asig .)


state 43

    (43) tipo -> I64 .

    DOSPT           reduce using rule 43 (tipo -> I64 .)
    IGUAL           reduce using rule 43 (tipo -> I64 .)


state 44

    (44) tipo -> F64 .

    DOSPT           reduce using rule 44 (tipo -> F64 .)
    IGUAL           reduce using rule 44 (tipo -> F64 .)


state 45

    (45) tipo -> BOOL .

    DOSPT           reduce using rule 45 (tipo -> BOOL .)
    IGUAL           reduce using rule 45 (tipo -> BOOL .)


state 46

    (46) tipo -> CHAR .

    DOSPT           reduce using rule 46 (tipo -> CHAR .)
    IGUAL           reduce using rule 46 (tipo -> CHAR .)


state 47

    (47) tipo -> STRING .

    DOSPT           reduce using rule 47 (tipo -> STRING .)
    IGUAL           reduce using rule 47 (tipo -> STRING .)


state 48

    (48) tipo -> SIGNOI . STR

    STR             shift and go to state 78


state 49

    (93) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 79
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 50

    (27) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 80
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 51

    (42) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 81
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 52

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 82


state 53

    (14) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 83
    IGUAL           shift and go to state 84


state 54

    (16) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR

    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48

    tipo                           shift and go to state 85

state 55

    (17) declaracion -> LET ID IGUAL . expresion PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 86
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 56

    (18) asignacion -> ID IGUAL expresion . PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 87
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 57

    (12) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 88
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 58

    (82) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 89
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 59

    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 90
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 60

    (63) expresion -> expresion MAS . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 91
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 61

    (64) expresion -> expresion MENOS . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 92
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 62

    (65) expresion -> expresion POR . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 93
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 63

    (66) expresion -> expresion DIVIDIDO . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 94
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 64

    (67) expresion -> expresion MODULO . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 95
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 65

    (70) expresion -> expresion IGUALQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 96
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 66

    (71) expresion -> expresion NOIGUALQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 97
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 67

    (72) expresion -> expresion MENORQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 98
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 68

    (73) expresion -> expresion MAYORQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 99
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 69

    (74) expresion -> expresion MENORIQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 100
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 70

    (75) expresion -> expresion MAYORIQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 101
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 71

    (76) expresion -> expresion OR . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 102
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 72

    (77) expresion -> expresion AND . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 103
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 73

    (58) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (59) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 104
    TOOWNED         shift and go to state 105


state 74

    (78) expresion -> MENOS expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 78 (expresion -> MENOS expresion .)
    MAS             reduce using rule 78 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 78 (expresion -> MENOS expresion .)
    POR             reduce using rule 78 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 78 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 78 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 78 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 78 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 78 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 78 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 78 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 78 (expresion -> MENOS expresion .)
    OR              reduce using rule 78 (expresion -> MENOS expresion .)
    AND             reduce using rule 78 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 78 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 78 (expresion -> MENOS expresion .)
    COMA            reduce using rule 78 (expresion -> MENOS expresion .)
    PTO             reduce using rule 78 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 78 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 78 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 78 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! POR             [ shift and go to state 62 ]
  ! DIVIDIDO        [ shift and go to state 63 ]
  ! MODULO          [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 75

    (68) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 106


state 76

    (80) expresion -> PARIZQ expresion . PARDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARDER          shift and go to state 107
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 77

    (79) expresion -> NOT expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 79 (expresion -> NOT expresion .)
    MAS             reduce using rule 79 (expresion -> NOT expresion .)
    MENOS           reduce using rule 79 (expresion -> NOT expresion .)
    POR             reduce using rule 79 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 79 (expresion -> NOT expresion .)
    MODULO          reduce using rule 79 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 79 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 79 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 79 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 79 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 79 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 79 (expresion -> NOT expresion .)
    OR              reduce using rule 79 (expresion -> NOT expresion .)
    AND             reduce using rule 79 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 79 (expresion -> NOT expresion .)
    PARDER          reduce using rule 79 (expresion -> NOT expresion .)
    COMA            reduce using rule 79 (expresion -> NOT expresion .)
    PTO             reduce using rule 79 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 79 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 79 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 79 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! POR             [ shift and go to state 62 ]
  ! DIVIDIDO        [ shift and go to state 63 ]
  ! MODULO          [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 78

    (48) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 48 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 48 (tipo -> SIGNOI STR .)


state 79

    (93) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 108
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 80

    (27) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (28) imatch -> . opmatch COMA dmatch
    (29) opmatch -> . opmatch COMA cmatch
    (30) opmatch -> . opmatch COMA rmatch
    (31) opmatch -> . cmatch
    (32) opmatch -> . rmatch
    (33) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (39) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (35) bloque_match -> . bloque_match BARRAS expresion
    (36) bloque_match -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 109
    imatch                         shift and go to state 110
    opmatch                        shift and go to state 111
    cmatch                         shift and go to state 112
    rmatch                         shift and go to state 113
    bloque_match                   shift and go to state 114
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 81

    (42) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 115
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 82

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 116


state 83

    (14) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR

    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48

    tipo                           shift and go to state 117

state 84

    (15) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 118
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 85

    (16) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 119


state 86

    (17) declaracion -> LET ID IGUAL expresion . PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 120
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 87

    (18) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 18 (asignacion -> ID IGUAL expresion PTCOMA .)


state 88

    (12) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (13) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    COMA            shift and go to state 121
    PARDER          shift and go to state 122
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 89

    (82) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (83) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (84) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 123
    bloque_expresion               shift and go to state 124
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 90

    (19) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (20) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (21) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (22) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 125
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 91

    (63) expresion -> expresion MAS expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 63 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 63 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 63 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 63 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 63 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 63 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 63 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 63 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 63 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 63 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 63 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 63 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 63 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 63 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 63 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! POR             [ reduce using rule 63 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 63 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 92

    (64) expresion -> expresion MENOS expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 64 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 64 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 64 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 64 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 64 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 64 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 64 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 64 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 64 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 64 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! POR             [ reduce using rule 64 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 64 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 93

    (65) expresion -> expresion POR expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 65 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 65 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion POR expresion .)
    POR             reduce using rule 65 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 65 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 65 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 65 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 65 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 65 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 65 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 65 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 65 (expresion -> expresion POR expresion .)
    OR              reduce using rule 65 (expresion -> expresion POR expresion .)
    AND             reduce using rule 65 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 65 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 65 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 65 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 65 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! POR             [ shift and go to state 62 ]
  ! DIVIDIDO        [ shift and go to state 63 ]
  ! MODULO          [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 94

    (66) expresion -> expresion DIVIDIDO expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 66 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! POR             [ shift and go to state 62 ]
  ! DIVIDIDO        [ shift and go to state 63 ]
  ! MODULO          [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 95

    (67) expresion -> expresion MODULO expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 67 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 67 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 67 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 67 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 67 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 67 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 67 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 67 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 67 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 67 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 67 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 67 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 67 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 67 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 67 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 60 ]
  ! MENOS           [ shift and go to state 61 ]
  ! POR             [ shift and go to state 62 ]
  ! DIVIDIDO        [ shift and go to state 63 ]
  ! MODULO          [ shift and go to state 64 ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 96

    (70) expresion -> expresion IGUALQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 97

    (71) expresion -> expresion NOIGUALQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 98

    (72) expresion -> expresion MENORQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 99

    (73) expresion -> expresion MAYORQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 100

    (74) expresion -> expresion MENORIQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 101

    (75) expresion -> expresion MAYORIQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64

  ! MAS             [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 65 ]
  ! NOIGUALQUE      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! MENORIQUE       [ shift and go to state 69 ]
  ! MAYORIQUE       [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 102

    (76) expresion -> expresion OR expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 76 (expresion -> expresion OR expresion .)
    OR              reduce using rule 76 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 76 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 76 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 76 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 76 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 76 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    AND             shift and go to state 72

  ! MAS             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 71 ]


state 103

    (77) expresion -> expresion AND expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 77 (expresion -> expresion AND expresion .)
    OR              reduce using rule 77 (expresion -> expresion AND expresion .)
    AND             reduce using rule 77 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 77 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 77 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 77 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70

  ! MAS             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 104

    (58) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 126


state 105

    (59) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 127


state 106

    (68) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 128
    POWF            shift and go to state 129


state 107

    (80) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)


state 108

    (93) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (94) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (97) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (98) opmatch_asig -> . cmatch_asig
    (99) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (101) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (102) bloque_match_asig -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 130
    imatch_asig                    shift and go to state 131
    opmatch_asig                   shift and go to state 132
    cmatch_asig                    shift and go to state 133
    bloque_match_asig              shift and go to state 134
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 109

    (39) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (36) bloque_match -> expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTO             shift and go to state 135
    IGUAL           reduce using rule 36 (bloque_match -> expresion .)
    BARRAS          reduce using rule 36 (bloque_match -> expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 110

    (27) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 136


state 111

    (28) imatch -> opmatch . COMA dmatch
    (29) opmatch -> opmatch . COMA cmatch
    (30) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 137


state 112

    (31) opmatch -> cmatch .

    COMA            reduce using rule 31 (opmatch -> cmatch .)


state 113

    (32) opmatch -> rmatch .

    COMA            reduce using rule 32 (opmatch -> rmatch .)


state 114

    (33) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (35) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 138
    BARRAS          shift and go to state 139


state 115

    (42) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 42 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 116

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 140
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 117

    (14) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 141


state 118

    (15) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 142
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 119

    (16) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 143
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 120

    (17) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 17 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 121

    (12) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (49) expresiones -> . expresiones COMA expresion
    (50) expresiones -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 144
    expresiones                    shift and go to state 145
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 122

    (13) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 146


state 123

    (91) bloque_expresion -> expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 91 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 91 (bloque_expresion -> expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 124

    (82) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER else
    (84) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif
    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseif else
    (90) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 147
    PTCOMA          shift and go to state 148


state 125

    (19) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (26) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (89) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (23) lelseif -> . lelseif elseif
    (24) lelseif -> . elseif
    (25) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (86) elseif -> . elseif lif
    (87) elseif -> . lif
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 19 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 151

    else                           shift and go to state 149
    lelseif                        shift and go to state 150
    elseif                         shift and go to state 152
    lif                            shift and go to state 153

state 126

    (58) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 154


state 127

    (59) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 155


state 128

    (68) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 156


state 129

    (69) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 157


state 130

    (102) bloque_match_asig -> expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 102 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 102 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 131

    (93) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 158


state 132

    (94) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (97) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 159


state 133

    (98) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 98 (opmatch_asig -> cmatch_asig .)


state 134

    (99) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (101) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 160
    BARRAS          shift and go to state 161


state 135

    (39) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 162


state 136

    (27) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 27 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 137

    (28) imatch -> opmatch COMA . dmatch
    (29) opmatch -> opmatch COMA . cmatch
    (30) opmatch -> opmatch COMA . rmatch
    (37) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (38) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (33) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (39) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (35) bloque_match -> . bloque_match BARRAS expresion
    (36) bloque_match -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    GUIONB          shift and go to state 166
    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    dmatch                         shift and go to state 163
    cmatch                         shift and go to state 164
    rmatch                         shift and go to state 165
    bloque_match                   shift and go to state 114
    expresion                      shift and go to state 109
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 138

    (33) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 167


state 139

    (35) bloque_match -> bloque_match BARRAS . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 168
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 140

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 169
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 141

    (14) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 170
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 142

    (15) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 143

    (16) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 171
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 144

    (50) expresiones -> expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARDER          reduce using rule 50 (expresiones -> expresion .)
    COMA            reduce using rule 50 (expresiones -> expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 145

    (12) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (49) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 173
    COMA            shift and go to state 172


state 146

    (13) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 147

    (82) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . else
    (84) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif
    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseif else
    (26) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (89) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (25) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (86) elseif -> . elseif lif
    (87) elseif -> . lif
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 82 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 151

    else                           shift and go to state 174
    elseif                         shift and go to state 175
    lif                            shift and go to state 153

state 148

    (90) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 176
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 149

    (20) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 20 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 150

    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (23) lelseif -> lelseif . elseif
    (26) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (89) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (25) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
    (86) elseif -> . elseif lif
    (87) elseif -> . lif
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    FN              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 151

    else                           shift and go to state 177
    elseif                         shift and go to state 178
    lif                            shift and go to state 153

state 151

    (26) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (89) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (25) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (88) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 179
    IF              shift and go to state 180


state 152

    (24) lelseif -> elseif .
    (86) elseif -> elseif . lif
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 24 (lelseif -> elseif .)
    LET             reduce using rule 24 (lelseif -> elseif .)
    PRINTLN         reduce using rule 24 (lelseif -> elseif .)
    ID              reduce using rule 24 (lelseif -> elseif .)
    IF              reduce using rule 24 (lelseif -> elseif .)
    MATCH           reduce using rule 24 (lelseif -> elseif .)
    LOOP            reduce using rule 24 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 24 (lelseif -> elseif .)
    COMA            reduce using rule 24 (lelseif -> elseif .)
    ELSE            shift and go to state 182

  ! ELSE            [ reduce using rule 24 (lelseif -> elseif .) ]

    lif                            shift and go to state 181

state 153

    (87) elseif -> lif .

    ELSE            reduce using rule 87 (elseif -> lif .)
    FN              reduce using rule 87 (elseif -> lif .)
    LET             reduce using rule 87 (elseif -> lif .)
    PRINTLN         reduce using rule 87 (elseif -> lif .)
    ID              reduce using rule 87 (elseif -> lif .)
    IF              reduce using rule 87 (elseif -> lif .)
    MATCH           reduce using rule 87 (elseif -> lif .)
    LOOP            reduce using rule 87 (elseif -> lif .)
    LLAVEDER        reduce using rule 87 (elseif -> lif .)
    COMA            reduce using rule 87 (elseif -> lif .)
    LLAVEIZQ        reduce using rule 87 (elseif -> lif .)
    MAS             reduce using rule 87 (elseif -> lif .)
    MENOS           reduce using rule 87 (elseif -> lif .)
    POR             reduce using rule 87 (elseif -> lif .)
    DIVIDIDO        reduce using rule 87 (elseif -> lif .)
    MODULO          reduce using rule 87 (elseif -> lif .)
    IGUALQUE        reduce using rule 87 (elseif -> lif .)
    NOIGUALQUE      reduce using rule 87 (elseif -> lif .)
    MENORQUE        reduce using rule 87 (elseif -> lif .)
    MAYORQUE        reduce using rule 87 (elseif -> lif .)
    MENORIQUE       reduce using rule 87 (elseif -> lif .)
    MAYORIQUE       reduce using rule 87 (elseif -> lif .)
    OR              reduce using rule 87 (elseif -> lif .)
    AND             reduce using rule 87 (elseif -> lif .)
    PTCOMA          reduce using rule 87 (elseif -> lif .)
    PARDER          reduce using rule 87 (elseif -> lif .)
    PTO             reduce using rule 87 (elseif -> lif .)
    IGUAL           reduce using rule 87 (elseif -> lif .)
    BARRAS          reduce using rule 87 (elseif -> lif .)


state 154

    (58) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 58 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 155

    (59) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 59 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 156

    (68) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 183
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 157

    (69) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 184
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 158

    (93) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 93 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 159

    (94) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (97) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (95) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (96) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (99) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (101) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (102) bloque_match_asig -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    GUIONB          shift and go to state 187
    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    dmatch_asig                    shift and go to state 185
    cmatch_asig                    shift and go to state 186
    expresion                      shift and go to state 130
    bloque_match_asig              shift and go to state 134
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 160

    (99) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 188


state 161

    (101) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 189
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 162

    (39) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 190


state 163

    (28) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 28 (imatch -> opmatch COMA dmatch .)


state 164

    (29) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 29 (opmatch -> opmatch COMA cmatch .)


state 165

    (30) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 30 (opmatch -> opmatch COMA rmatch .)


state 166

    (37) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (38) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 191


state 167

    (33) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 192
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 193
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 168

    (35) bloque_match -> bloque_match BARRAS expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 35 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 35 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 169

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 170

    (14) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 194
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 171

    (16) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 16 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 172

    (49) expresiones -> expresiones COMA . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 195
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 173

    (12) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 196


state 174

    (83) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .

    LLAVEIZQ        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAS             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENOS           reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    POR             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    DIVIDIDO        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MODULO          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUALQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    NOIGUALQUE      reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORQUE        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MENORIQUE       reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    MAYORIQUE       reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    OR              reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    AND             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTCOMA          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PARDER          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    COMA            reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    PTO             reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    IGUAL           reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    BARRAS          reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)
    LLAVEDER        reduce using rule 83 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER else .)


state 175

    (84) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .
    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif . else
    (86) elseif -> elseif . lif
    (26) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (89) else -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAS             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENOS           reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    POR             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    DIVIDIDO        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MODULO          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUALQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    NOIGUALQUE      reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORQUE        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MENORIQUE       reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    MAYORIQUE       reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    OR              reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    AND             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTCOMA          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PARDER          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    COMA            reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    PTO             reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    IGUAL           reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    BARRAS          reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    LLAVEDER        reduce using rule 84 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif .)
    ELSE            shift and go to state 198

    else                           shift and go to state 197
    lif                            shift and go to state 181

state 176

    (90) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 90 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 90 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 177

    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 178

    (23) lelseif -> lelseif elseif .
    (86) elseif -> elseif . lif
    (88) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

  ! shift/reduce conflict for ELSE resolved as shift
    FN              reduce using rule 23 (lelseif -> lelseif elseif .)
    LET             reduce using rule 23 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 23 (lelseif -> lelseif elseif .)
    ID              reduce using rule 23 (lelseif -> lelseif elseif .)
    IF              reduce using rule 23 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 23 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 23 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 23 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 23 (lelseif -> lelseif elseif .)
    ELSE            shift and go to state 182

  ! ELSE            [ reduce using rule 23 (lelseif -> lelseif elseif .) ]

    lif                            shift and go to state 181

state 179

    (26) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (89) else -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 201
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    IF              shift and go to state 202
    MATCH           shift and go to state 203
    LOOP            shift and go to state 17
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48

    instrucciones                  shift and go to state 199
    bloque_expresion               shift and go to state 200
    instruccion                    shift and go to state 4
    expresion                      shift and go to state 123
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 180

    (25) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (88) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 204
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 181

    (86) elseif -> elseif lif .

    ELSE            reduce using rule 86 (elseif -> elseif lif .)
    FN              reduce using rule 86 (elseif -> elseif lif .)
    LET             reduce using rule 86 (elseif -> elseif lif .)
    PRINTLN         reduce using rule 86 (elseif -> elseif lif .)
    ID              reduce using rule 86 (elseif -> elseif lif .)
    IF              reduce using rule 86 (elseif -> elseif lif .)
    MATCH           reduce using rule 86 (elseif -> elseif lif .)
    LOOP            reduce using rule 86 (elseif -> elseif lif .)
    LLAVEDER        reduce using rule 86 (elseif -> elseif lif .)
    COMA            reduce using rule 86 (elseif -> elseif lif .)
    LLAVEIZQ        reduce using rule 86 (elseif -> elseif lif .)
    MAS             reduce using rule 86 (elseif -> elseif lif .)
    MENOS           reduce using rule 86 (elseif -> elseif lif .)
    POR             reduce using rule 86 (elseif -> elseif lif .)
    DIVIDIDO        reduce using rule 86 (elseif -> elseif lif .)
    MODULO          reduce using rule 86 (elseif -> elseif lif .)
    IGUALQUE        reduce using rule 86 (elseif -> elseif lif .)
    NOIGUALQUE      reduce using rule 86 (elseif -> elseif lif .)
    MENORQUE        reduce using rule 86 (elseif -> elseif lif .)
    MAYORQUE        reduce using rule 86 (elseif -> elseif lif .)
    MENORIQUE       reduce using rule 86 (elseif -> elseif lif .)
    MAYORIQUE       reduce using rule 86 (elseif -> elseif lif .)
    OR              reduce using rule 86 (elseif -> elseif lif .)
    AND             reduce using rule 86 (elseif -> elseif lif .)
    PTCOMA          reduce using rule 86 (elseif -> elseif lif .)
    PARDER          reduce using rule 86 (elseif -> elseif lif .)
    PTO             reduce using rule 86 (elseif -> elseif lif .)
    IGUAL           reduce using rule 86 (elseif -> elseif lif .)
    BARRAS          reduce using rule 86 (elseif -> elseif lif .)


state 182

    (88) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    IF              shift and go to state 205


state 183

    (68) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    COMA            shift and go to state 206
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 184

    (69) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    COMA            shift and go to state 207
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 185

    (94) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 94 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 186

    (97) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 97 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 187

    (95) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (96) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 208


state 188

    (99) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    LLAVEIZQ        shift and go to state 209
    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 210
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 189

    (101) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 101 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 101 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 190

    (39) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 211
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 191

    (37) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (38) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 212


state 192

    (33) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 213
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 193

    (34) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 34 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 194

    (14) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 14 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 195

    (49) expresiones -> expresiones COMA expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARDER          reduce using rule 49 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 49 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 196

    (12) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 12 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 197

    (85) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .

    LLAVEIZQ        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAS             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENOS           reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    POR             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    DIVIDIDO        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MODULO          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUALQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    NOIGUALQUE      reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORQUE        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MENORIQUE       reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    MAYORIQUE       reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    OR              reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    AND             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTCOMA          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PARDER          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    COMA            reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    PTO             reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    IGUAL           reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    BARRAS          reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)
    LLAVEDER        reduce using rule 85 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else .)


state 198

    (26) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (89) else -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (88) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 179
    IF              shift and go to state 205


state 199

    (26) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 214
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 200

    (89) else -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (90) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 215
    PTCOMA          shift and go to state 148


state 201

    (51) expresion -> ID .
    (18) asignacion -> ID . IGUAL expresion PTCOMA

    MAS             reduce using rule 51 (expresion -> ID .)
    MENOS           reduce using rule 51 (expresion -> ID .)
    POR             reduce using rule 51 (expresion -> ID .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID .)
    MODULO          reduce using rule 51 (expresion -> ID .)
    IGUALQUE        reduce using rule 51 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 51 (expresion -> ID .)
    MENORQUE        reduce using rule 51 (expresion -> ID .)
    MAYORQUE        reduce using rule 51 (expresion -> ID .)
    MENORIQUE       reduce using rule 51 (expresion -> ID .)
    MAYORIQUE       reduce using rule 51 (expresion -> ID .)
    OR              reduce using rule 51 (expresion -> ID .)
    AND             reduce using rule 51 (expresion -> ID .)
    LLAVEDER        reduce using rule 51 (expresion -> ID .)
    PTCOMA          reduce using rule 51 (expresion -> ID .)
    IGUAL           shift and go to state 23


state 202

    (19) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (82) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 216
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 203

    (27) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (93) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 217
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 204

    (25) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (88) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 218
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 205

    (88) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 219
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 206

    (68) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 220
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 207

    (69) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    tipo                           shift and go to state 38
    expresion                      shift and go to state 221
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 208

    (95) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (96) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 222


state 209

    (99) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    bloque_expresion               shift and go to state 223
    expresion                      shift and go to state 123
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 210

    (100) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    COMA            reduce using rule 100 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 211

    (39) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 224
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 212

    (37) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (38) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 225
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 226
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 213

    (33) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 227
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 214

    (26) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 26 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 215

    (89) else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    FN              reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LOOP            reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 89 (else -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 216

    (19) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (20) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (82) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 228
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 217

    (27) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (93) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 229
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 218

    (25) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (88) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 201
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    IF              shift and go to state 202
    MATCH           shift and go to state 203
    LOOP            shift and go to state 17
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48

    expresion                      shift and go to state 123
    instrucciones                  shift and go to state 230
    bloque_expresion               shift and go to state 231
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 219

    (88) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 232
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 220

    (68) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARDER          shift and go to state 233
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 221

    (69) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARDER          shift and go to state 234
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 222

    (95) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (96) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    LLAVEIZQ        shift and go to state 235
    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 236
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 223

    (99) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (90) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 237
    PTCOMA          shift and go to state 148


state 224

    (39) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 238


state 225

    (37) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 239
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 226

    (38) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 38 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 227

    (33) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 33 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 228

    (19) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (20) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (82) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (83) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER else
    (84) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif
    (85) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 201
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    IF              shift and go to state 202
    MATCH           shift and go to state 203
    LOOP            shift and go to state 17
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48

    expresion                      shift and go to state 123
    instrucciones                  shift and go to state 90
    bloque_expresion               shift and go to state 124
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 229

    (27) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (93) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (28) imatch -> . opmatch COMA dmatch
    (94) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (29) opmatch -> . opmatch COMA cmatch
    (30) opmatch -> . opmatch COMA rmatch
    (31) opmatch -> . cmatch
    (32) opmatch -> . rmatch
    (97) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (98) opmatch_asig -> . cmatch_asig
    (33) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (34) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (39) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (99) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (100) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (35) bloque_match -> . bloque_match BARRAS expresion
    (36) bloque_match -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (101) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (102) bloque_match_asig -> . expresion
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 240
    imatch                         shift and go to state 110
    imatch_asig                    shift and go to state 131
    opmatch                        shift and go to state 111
    opmatch_asig                   shift and go to state 132
    cmatch                         shift and go to state 112
    rmatch                         shift and go to state 113
    cmatch_asig                    shift and go to state 133
    bloque_match                   shift and go to state 114
    bloque_match_asig              shift and go to state 134
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 230

    (25) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 241
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 231

    (88) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (90) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 242
    PTCOMA          shift and go to state 148


state 232

    (88) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    expresion                      shift and go to state 123
    bloque_expresion               shift and go to state 231
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 233

    (68) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 68 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 234

    (69) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 69 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 235

    (95) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (90) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (91) bloque_expresion -> . expresion
    (51) expresion -> . ID
    (52) expresion -> . ENTERO
    (53) expresion -> . DECIMAL
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . tostring
    (57) expresion -> . toowned
    (60) expresion -> . STR
    (61) expresion -> . CADENA
    (62) expresion -> . CARACTER
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . PARIZQ expresion PARDER
    (81) expresion -> . if_asig
    (92) expresion -> . match_asig
    (58) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (59) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (43) tipo -> . I64
    (44) tipo -> . F64
    (45) tipo -> . BOOL
    (46) tipo -> . CHAR
    (47) tipo -> . STRING
    (48) tipo -> . SIGNOI STR
    (82) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (83) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER else
    (84) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif
    (85) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseif else
    (93) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER

    ID              shift and go to state 27
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    STR             shift and go to state 34
    CADENA          shift and go to state 35
    CARACTER        shift and go to state 36
    MENOS           shift and go to state 37
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 39
    I64             shift and go to state 43
    F64             shift and go to state 44
    BOOL            shift and go to state 45
    CHAR            shift and go to state 46
    STRING          shift and go to state 47
    SIGNOI          shift and go to state 48
    IF              shift and go to state 25
    MATCH           shift and go to state 49

    bloque_expresion               shift and go to state 243
    expresion                      shift and go to state 123
    tostring                       shift and go to state 32
    toowned                        shift and go to state 33
    tipo                           shift and go to state 38
    if_asig                        shift and go to state 41
    match_asig                     shift and go to state 42

state 236

    (96) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 96 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 237

    (99) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 99 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 238

    (39) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (40) rrmatch -> . instruccion
    (41) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 246
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    rrmatch                        shift and go to state 244
    instruccion                    shift and go to state 245
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 239

    (37) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 247
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 240

    (39) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (36) bloque_match -> expresion .
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (102) bloque_match_asig -> expresion .

  ! reduce/reduce conflict for IGUAL resolved using rule 36 (bloque_match -> expresion .)
  ! reduce/reduce conflict for BARRAS resolved using rule 36 (bloque_match -> expresion .)
    PTO             shift and go to state 135
    IGUAL           reduce using rule 36 (bloque_match -> expresion .)
    BARRAS          reduce using rule 36 (bloque_match -> expresion .)
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    POR             shift and go to state 62
    DIVIDIDO        shift and go to state 63
    MODULO          shift and go to state 64
    IGUALQUE        shift and go to state 65
    NOIGUALQUE      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    MENORIQUE       shift and go to state 69
    MAYORIQUE       shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72

  ! IGUAL           [ reduce using rule 102 (bloque_match_asig -> expresion .) ]
  ! BARRAS          [ reduce using rule 102 (bloque_match_asig -> expresion .) ]


state 241

    (25) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 25 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 242

    (88) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    FN              reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LET             reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PRINTLN         reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ID              reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IF              reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MATCH           reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LOOP            reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 88 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 243

    (95) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (90) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 248
    PTCOMA          shift and go to state 148


state 244

    (39) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 39 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 245

    (40) rrmatch -> instruccion .

    COMA            reduce using rule 40 (rrmatch -> instruccion .)


state 246

    (41) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instrucciones                  shift and go to state 249
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 247

    (37) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 37 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 248

    (95) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 95 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 249

    (41) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (14) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (15) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (16) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET ID IGUAL expresion PTCOMA
    (12) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (13) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (18) asignacion -> . ID IGUAL expresion PTCOMA
    (19) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (20) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (27) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (42) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 250
    LET             shift and go to state 12
    PRINTLN         shift and go to state 14
    ID              shift and go to state 13
    IF              shift and go to state 15
    MATCH           shift and go to state 16
    LOOP            shift and go to state 17

    instruccion                    shift and go to state 19
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11

state 250

    (41) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 41 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 35 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 152 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 178 resolved as shift
WARNING: reduce/reduce conflict in state 240 resolved using rule (bloque_match -> expresion)
WARNING: rejected rule (bloque_match_asig -> expresion) in state 240
