Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main
Rule 2     inicio -> main
Rule 3     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 4     instrucciones -> instrucciones instruccion
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> declaracion
Rule 7     instruccion -> imprimir
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> if
Rule 10    instruccion -> match
Rule 11    instruccion -> loop
Rule 12    instruccion -> while
Rule 13    instruccion -> break
Rule 14    imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
Rule 15    imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA
Rule 16    declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
Rule 17    declaracion -> LET MUT ID IGUAL expresion PTCOMA
Rule 18    declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA
Rule 19    declaracion -> LET ID IGUAL expresion PTCOMA
Rule 20    asignacion -> ID IGUAL expresion PTCOMA
Rule 21    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 22    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 23    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 24    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 25    lelseif -> lelseif elseif
Rule 26    lelseif -> elseif
Rule 27    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 28    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 29    match -> MATCH expresion LLAVEIZQ imatch LLAVEDER
Rule 30    imatch -> opmatch COMA dmatch
Rule 31    opmatch -> opmatch COMA cmatch
Rule 32    opmatch -> opmatch COMA rmatch
Rule 33    opmatch -> cmatch
Rule 34    opmatch -> rmatch
Rule 35    cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 36    cmatch -> bloque_match IGUAL MAYORQUE instruccion
Rule 37    bloque_match -> bloque_match BARRAS expresion
Rule 38    bloque_match -> expresion
Rule 39    dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 40    dmatch -> GUIONB IGUAL MAYORQUE instruccion
Rule 41    rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
Rule 42    rrmatch -> instruccion
Rule 43    rrmatch -> LLAVEIZQ instrucciones LLAVEDER
Rule 44    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 45    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 46    break -> BREAK PTCOMA
Rule 47    break -> BREAK expresion PTCOMA
Rule 48    tipo -> I64
Rule 49    tipo -> F64
Rule 50    tipo -> BOOL
Rule 51    tipo -> CHAR
Rule 52    tipo -> STRING
Rule 53    tipo -> SIGNOI STR
Rule 54    expresiones -> expresiones COMA expresion
Rule 55    expresiones -> expresion
Rule 56    expresion -> ID
Rule 57    expresion -> ENTERO
Rule 58    expresion -> DECIMAL
Rule 59    expresion -> TRUE
Rule 60    expresion -> FALSE
Rule 61    expresion -> tostring
Rule 62    expresion -> toowned
Rule 63    tostring -> CADENA PTO TOSTRING PARIZQ PARDER
Rule 64    toowned -> CADENA PTO TOOWNED PARIZQ PARDER
Rule 65    expresion -> STR
Rule 66    expresion -> CADENA
Rule 67    expresion -> CARACTER
Rule 68    expresion -> expresion MAS expresion
Rule 69    expresion -> expresion MENOS expresion
Rule 70    expresion -> expresion POR expresion
Rule 71    expresion -> expresion DIVIDIDO expresion
Rule 72    expresion -> expresion MODULO expresion
Rule 73    expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 74    expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 75    expresion -> expresion IGUALQUE expresion
Rule 76    expresion -> expresion NOIGUALQUE expresion
Rule 77    expresion -> expresion MENORQUE expresion
Rule 78    expresion -> expresion MAYORQUE expresion
Rule 79    expresion -> expresion MENORIQUE expresion
Rule 80    expresion -> expresion MAYORIQUE expresion
Rule 81    expresion -> expresion OR expresion
Rule 82    expresion -> expresion AND expresion
Rule 83    expresion -> MENOS expresion
Rule 84    expresion -> NOT expresion
Rule 85    expresion -> PARIZQ expresion PARDER
Rule 86    expresion -> if_asig
Rule 87    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 88    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
Rule 89    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
Rule 90    if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
Rule 91    elseifa -> elseifa lif
Rule 92    elseifa -> lif
Rule 93    lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER
Rule 94    elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER
Rule 95    bloque_expresion -> bloque_expresion PTCOMA expresion
Rule 96    bloque_expresion -> expresion
Rule 97    expresion -> match_asig
Rule 98    match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
Rule 99    imatch_asig -> opmatch_asig COMA dmatch_asig
Rule 100   dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 101   dmatch_asig -> GUIONB IGUAL MAYORQUE expresion
Rule 102   opmatch_asig -> opmatch_asig COMA cmatch_asig
Rule 103   opmatch_asig -> cmatch_asig
Rule 104   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
Rule 105   cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion
Rule 106   bloque_match_asig -> bloque_match_asig BARRAS expresion
Rule 107   bloque_match_asig -> expresion
Rule 108   expresion -> loop_asig
Rule 109   loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER

Terminals, with rules where they appear

AND                  : 82
AS                   : 
BARRAS               : 37 106
BOOL                 : 50
BREAK                : 46 47
CADENA               : 63 64 66
CARACTER             : 67
CHAR                 : 51
COMA                 : 14 30 31 32 54 73 74 99 102
DECIMAL              : 58
DIVIDIDO             : 71
DOSPT                : 16 18 73 73 74 74
ELSE                 : 27 28 93 94
ENTERO               : 57
F64                  : 49
FALSE                : 60
FN                   : 3
GUIONB               : 39 40 100 101
I64                  : 48
ID                   : 16 17 18 19 20 56
IF                   : 21 22 23 24 27 87 88 89 90 93
IGUAL                : 16 17 18 19 20 35 36 39 40 41 41 100 101 104 105
IGUALQUE             : 75
LET                  : 16 17 18 19
LLAVEDER             : 3 21 22 23 24 27 28 29 35 39 43 44 45 87 88 89 90 93 94 98 100 104 109
LLAVEIZQ             : 3 21 22 23 24 27 28 29 35 39 43 44 45 87 88 89 90 93 94 98 100 104 109
LOOP                 : 44 109
MAIN                 : 3
MAS                  : 68
MATCH                : 29 98
MAYORIQUE            : 80
MAYORQUE             : 35 36 39 40 41 78 100 101 104 105
MENORIQUE            : 79
MENORQUE             : 77
MENOS                : 69 83
MODULO               : 72
MUT                  : 16 17
NOIGUALQUE           : 76
NOT                  : 14 15 84
OR                   : 81
PARDER               : 3 14 15 63 64 73 74 85
PARIZQ               : 3 14 15 63 64 73 74 85
POR                  : 70
POW                  : 73
POWF                 : 74
PRINTLN              : 14 15
PTCOMA               : 14 15 16 17 18 19 20 46 47 95
PTO                  : 41 41 63 64
SIGNOI               : 53
STR                  : 53 65
STRING               : 52
TOOWNED              : 64
TOSTRING             : 63
TRUE                 : 59
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
bloque_expresion     : 87 88 89 90 93 94 95 100 104
bloque_match         : 35 36 37
bloque_match_asig    : 104 105 106
break                : 13
cmatch               : 31 33
cmatch_asig          : 102 103
declaracion          : 6
dmatch               : 30
dmatch_asig          : 99
else                 : 22 24
elsea                : 88 90
elseif               : 25 26
elseifa              : 89 90 91
expresion            : 14 15 16 17 18 19 20 21 22 23 24 27 29 37 38 41 41 45 47 54 55 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 84 85 87 88 89 90 93 95 96 98 101 105 106 107
expresiones          : 14 54
if                   : 9
if_asig              : 86
imatch               : 29
imatch_asig          : 98
imprimir             : 7
inicio               : 0
instruccion          : 4 5 36 40 42
instrucciones        : 1 3 4 21 22 23 24 27 28 35 39 43 44 45 109
lelseif              : 23 24 25
lif                  : 91 92
loop                 : 11
loop_asig            : 108
main                 : 1 2
match                : 10
match_asig           : 97
opmatch              : 30 31 32
opmatch_asig         : 99 102
rmatch               : 32 34
rrmatch              : 41
tipo                 : 16 18 73 74
toowned              : 62
tostring             : 61
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main
    (2) inicio -> . main
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    main                           shift and go to state 3
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main
    (4) instrucciones -> instrucciones . instruccion
    (3) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    FN              shift and go to state 5
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    main                           shift and go to state 22
    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 3

    (2) inicio -> main .

    $end            reduce using rule 2 (inicio -> main .)


state 4

    (5) instrucciones -> instruccion .

    FN              reduce using rule 5 (instrucciones -> instruccion .)
    LET             reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    MATCH           reduce using rule 5 (instrucciones -> instruccion .)
    LOOP            reduce using rule 5 (instrucciones -> instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instruccion .)
    BREAK           reduce using rule 5 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 5 (instrucciones -> instruccion .)


state 5

    (3) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 24


state 6

    (6) instruccion -> declaracion .

    FN              reduce using rule 6 (instruccion -> declaracion .)
    LET             reduce using rule 6 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 6 (instruccion -> declaracion .)
    ID              reduce using rule 6 (instruccion -> declaracion .)
    IF              reduce using rule 6 (instruccion -> declaracion .)
    MATCH           reduce using rule 6 (instruccion -> declaracion .)
    LOOP            reduce using rule 6 (instruccion -> declaracion .)
    WHILE           reduce using rule 6 (instruccion -> declaracion .)
    BREAK           reduce using rule 6 (instruccion -> declaracion .)
    LLAVEDER        reduce using rule 6 (instruccion -> declaracion .)
    COMA            reduce using rule 6 (instruccion -> declaracion .)


state 7

    (7) instruccion -> imprimir .

    FN              reduce using rule 7 (instruccion -> imprimir .)
    LET             reduce using rule 7 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 7 (instruccion -> imprimir .)
    ID              reduce using rule 7 (instruccion -> imprimir .)
    IF              reduce using rule 7 (instruccion -> imprimir .)
    MATCH           reduce using rule 7 (instruccion -> imprimir .)
    LOOP            reduce using rule 7 (instruccion -> imprimir .)
    WHILE           reduce using rule 7 (instruccion -> imprimir .)
    BREAK           reduce using rule 7 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 7 (instruccion -> imprimir .)
    COMA            reduce using rule 7 (instruccion -> imprimir .)


state 8

    (8) instruccion -> asignacion .

    FN              reduce using rule 8 (instruccion -> asignacion .)
    LET             reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    MATCH           reduce using rule 8 (instruccion -> asignacion .)
    LOOP            reduce using rule 8 (instruccion -> asignacion .)
    WHILE           reduce using rule 8 (instruccion -> asignacion .)
    BREAK           reduce using rule 8 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 8 (instruccion -> asignacion .)
    COMA            reduce using rule 8 (instruccion -> asignacion .)


state 9

    (9) instruccion -> if .

    FN              reduce using rule 9 (instruccion -> if .)
    LET             reduce using rule 9 (instruccion -> if .)
    PRINTLN         reduce using rule 9 (instruccion -> if .)
    ID              reduce using rule 9 (instruccion -> if .)
    IF              reduce using rule 9 (instruccion -> if .)
    MATCH           reduce using rule 9 (instruccion -> if .)
    LOOP            reduce using rule 9 (instruccion -> if .)
    WHILE           reduce using rule 9 (instruccion -> if .)
    BREAK           reduce using rule 9 (instruccion -> if .)
    LLAVEDER        reduce using rule 9 (instruccion -> if .)
    COMA            reduce using rule 9 (instruccion -> if .)


state 10

    (10) instruccion -> match .

    FN              reduce using rule 10 (instruccion -> match .)
    LET             reduce using rule 10 (instruccion -> match .)
    PRINTLN         reduce using rule 10 (instruccion -> match .)
    ID              reduce using rule 10 (instruccion -> match .)
    IF              reduce using rule 10 (instruccion -> match .)
    MATCH           reduce using rule 10 (instruccion -> match .)
    LOOP            reduce using rule 10 (instruccion -> match .)
    WHILE           reduce using rule 10 (instruccion -> match .)
    BREAK           reduce using rule 10 (instruccion -> match .)
    LLAVEDER        reduce using rule 10 (instruccion -> match .)
    COMA            reduce using rule 10 (instruccion -> match .)


state 11

    (11) instruccion -> loop .

    FN              reduce using rule 11 (instruccion -> loop .)
    LET             reduce using rule 11 (instruccion -> loop .)
    PRINTLN         reduce using rule 11 (instruccion -> loop .)
    ID              reduce using rule 11 (instruccion -> loop .)
    IF              reduce using rule 11 (instruccion -> loop .)
    MATCH           reduce using rule 11 (instruccion -> loop .)
    LOOP            reduce using rule 11 (instruccion -> loop .)
    WHILE           reduce using rule 11 (instruccion -> loop .)
    BREAK           reduce using rule 11 (instruccion -> loop .)
    LLAVEDER        reduce using rule 11 (instruccion -> loop .)
    COMA            reduce using rule 11 (instruccion -> loop .)


state 12

    (12) instruccion -> while .

    FN              reduce using rule 12 (instruccion -> while .)
    LET             reduce using rule 12 (instruccion -> while .)
    PRINTLN         reduce using rule 12 (instruccion -> while .)
    ID              reduce using rule 12 (instruccion -> while .)
    IF              reduce using rule 12 (instruccion -> while .)
    MATCH           reduce using rule 12 (instruccion -> while .)
    LOOP            reduce using rule 12 (instruccion -> while .)
    WHILE           reduce using rule 12 (instruccion -> while .)
    BREAK           reduce using rule 12 (instruccion -> while .)
    LLAVEDER        reduce using rule 12 (instruccion -> while .)
    COMA            reduce using rule 12 (instruccion -> while .)


state 13

    (13) instruccion -> break .

    FN              reduce using rule 13 (instruccion -> break .)
    LET             reduce using rule 13 (instruccion -> break .)
    PRINTLN         reduce using rule 13 (instruccion -> break .)
    ID              reduce using rule 13 (instruccion -> break .)
    IF              reduce using rule 13 (instruccion -> break .)
    MATCH           reduce using rule 13 (instruccion -> break .)
    LOOP            reduce using rule 13 (instruccion -> break .)
    WHILE           reduce using rule 13 (instruccion -> break .)
    BREAK           reduce using rule 13 (instruccion -> break .)
    LLAVEDER        reduce using rule 13 (instruccion -> break .)
    COMA            reduce using rule 13 (instruccion -> break .)


state 14

    (16) declaracion -> LET . MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> LET . MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> LET . ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> LET . ID IGUAL expresion PTCOMA

    MUT             shift and go to state 25
    ID              shift and go to state 26


state 15

    (20) asignacion -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 27


state 16

    (14) imprimir -> PRINTLN . NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> PRINTLN . NOT PARIZQ expresion PARDER PTCOMA

    NOT             shift and go to state 28


state 17

    (21) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 30
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 18

    (29) match -> MATCH . expresion LLAVEIZQ imatch LLAVEDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 56
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 19

    (44) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 57


state 20

    (45) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 58
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 21

    (46) break -> BREAK . PTCOMA
    (47) break -> BREAK . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    PTCOMA          shift and go to state 59
    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 60
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 22

    (1) inicio -> instrucciones main .

    $end            reduce using rule 1 (inicio -> instrucciones main .)


state 23

    (4) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 4 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instrucciones instruccion .)


state 24

    (3) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 61


state 25

    (16) declaracion -> LET MUT . ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> LET MUT . ID IGUAL expresion PTCOMA

    ID              shift and go to state 62


state 26

    (18) declaracion -> LET ID . DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> LET ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 63
    IGUAL           shift and go to state 64


state 27

    (20) asignacion -> ID IGUAL . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 65
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 28

    (14) imprimir -> PRINTLN NOT . PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> PRINTLN NOT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 66


state 29

    (87) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> IF . expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 67
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 30

    (21) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (22) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 68
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 31

    (56) expresion -> ID .

    LLAVEIZQ        reduce using rule 56 (expresion -> ID .)
    MAS             reduce using rule 56 (expresion -> ID .)
    MENOS           reduce using rule 56 (expresion -> ID .)
    POR             reduce using rule 56 (expresion -> ID .)
    DIVIDIDO        reduce using rule 56 (expresion -> ID .)
    MODULO          reduce using rule 56 (expresion -> ID .)
    IGUALQUE        reduce using rule 56 (expresion -> ID .)
    NOIGUALQUE      reduce using rule 56 (expresion -> ID .)
    MENORQUE        reduce using rule 56 (expresion -> ID .)
    MAYORQUE        reduce using rule 56 (expresion -> ID .)
    MENORIQUE       reduce using rule 56 (expresion -> ID .)
    MAYORIQUE       reduce using rule 56 (expresion -> ID .)
    OR              reduce using rule 56 (expresion -> ID .)
    AND             reduce using rule 56 (expresion -> ID .)
    PTCOMA          reduce using rule 56 (expresion -> ID .)
    PARDER          reduce using rule 56 (expresion -> ID .)
    COMA            reduce using rule 56 (expresion -> ID .)
    PTO             reduce using rule 56 (expresion -> ID .)
    IGUAL           reduce using rule 56 (expresion -> ID .)
    BARRAS          reduce using rule 56 (expresion -> ID .)
    LLAVEDER        reduce using rule 56 (expresion -> ID .)


state 32

    (57) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 57 (expresion -> ENTERO .)
    MAS             reduce using rule 57 (expresion -> ENTERO .)
    MENOS           reduce using rule 57 (expresion -> ENTERO .)
    POR             reduce using rule 57 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 57 (expresion -> ENTERO .)
    MODULO          reduce using rule 57 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 57 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 57 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 57 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 57 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 57 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 57 (expresion -> ENTERO .)
    OR              reduce using rule 57 (expresion -> ENTERO .)
    AND             reduce using rule 57 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 57 (expresion -> ENTERO .)
    PARDER          reduce using rule 57 (expresion -> ENTERO .)
    COMA            reduce using rule 57 (expresion -> ENTERO .)
    PTO             reduce using rule 57 (expresion -> ENTERO .)
    IGUAL           reduce using rule 57 (expresion -> ENTERO .)
    BARRAS          reduce using rule 57 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 57 (expresion -> ENTERO .)


state 33

    (58) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 58 (expresion -> DECIMAL .)
    MAS             reduce using rule 58 (expresion -> DECIMAL .)
    MENOS           reduce using rule 58 (expresion -> DECIMAL .)
    POR             reduce using rule 58 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 58 (expresion -> DECIMAL .)
    MODULO          reduce using rule 58 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 58 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 58 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 58 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 58 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 58 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 58 (expresion -> DECIMAL .)
    OR              reduce using rule 58 (expresion -> DECIMAL .)
    AND             reduce using rule 58 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 58 (expresion -> DECIMAL .)
    PARDER          reduce using rule 58 (expresion -> DECIMAL .)
    COMA            reduce using rule 58 (expresion -> DECIMAL .)
    PTO             reduce using rule 58 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 58 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 58 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 58 (expresion -> DECIMAL .)


state 34

    (59) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 59 (expresion -> TRUE .)
    MAS             reduce using rule 59 (expresion -> TRUE .)
    MENOS           reduce using rule 59 (expresion -> TRUE .)
    POR             reduce using rule 59 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 59 (expresion -> TRUE .)
    MODULO          reduce using rule 59 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 59 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 59 (expresion -> TRUE .)
    MENORQUE        reduce using rule 59 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 59 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 59 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 59 (expresion -> TRUE .)
    OR              reduce using rule 59 (expresion -> TRUE .)
    AND             reduce using rule 59 (expresion -> TRUE .)
    PTCOMA          reduce using rule 59 (expresion -> TRUE .)
    PARDER          reduce using rule 59 (expresion -> TRUE .)
    COMA            reduce using rule 59 (expresion -> TRUE .)
    PTO             reduce using rule 59 (expresion -> TRUE .)
    IGUAL           reduce using rule 59 (expresion -> TRUE .)
    BARRAS          reduce using rule 59 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 59 (expresion -> TRUE .)


state 35

    (60) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 60 (expresion -> FALSE .)
    MAS             reduce using rule 60 (expresion -> FALSE .)
    MENOS           reduce using rule 60 (expresion -> FALSE .)
    POR             reduce using rule 60 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 60 (expresion -> FALSE .)
    MODULO          reduce using rule 60 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 60 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 60 (expresion -> FALSE .)
    MENORQUE        reduce using rule 60 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 60 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 60 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 60 (expresion -> FALSE .)
    OR              reduce using rule 60 (expresion -> FALSE .)
    AND             reduce using rule 60 (expresion -> FALSE .)
    PTCOMA          reduce using rule 60 (expresion -> FALSE .)
    PARDER          reduce using rule 60 (expresion -> FALSE .)
    COMA            reduce using rule 60 (expresion -> FALSE .)
    PTO             reduce using rule 60 (expresion -> FALSE .)
    IGUAL           reduce using rule 60 (expresion -> FALSE .)
    BARRAS          reduce using rule 60 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 60 (expresion -> FALSE .)


state 36

    (61) expresion -> tostring .

    LLAVEIZQ        reduce using rule 61 (expresion -> tostring .)
    MAS             reduce using rule 61 (expresion -> tostring .)
    MENOS           reduce using rule 61 (expresion -> tostring .)
    POR             reduce using rule 61 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 61 (expresion -> tostring .)
    MODULO          reduce using rule 61 (expresion -> tostring .)
    IGUALQUE        reduce using rule 61 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 61 (expresion -> tostring .)
    MENORQUE        reduce using rule 61 (expresion -> tostring .)
    MAYORQUE        reduce using rule 61 (expresion -> tostring .)
    MENORIQUE       reduce using rule 61 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 61 (expresion -> tostring .)
    OR              reduce using rule 61 (expresion -> tostring .)
    AND             reduce using rule 61 (expresion -> tostring .)
    PTCOMA          reduce using rule 61 (expresion -> tostring .)
    PARDER          reduce using rule 61 (expresion -> tostring .)
    COMA            reduce using rule 61 (expresion -> tostring .)
    PTO             reduce using rule 61 (expresion -> tostring .)
    IGUAL           reduce using rule 61 (expresion -> tostring .)
    BARRAS          reduce using rule 61 (expresion -> tostring .)
    LLAVEDER        reduce using rule 61 (expresion -> tostring .)


state 37

    (62) expresion -> toowned .

    LLAVEIZQ        reduce using rule 62 (expresion -> toowned .)
    MAS             reduce using rule 62 (expresion -> toowned .)
    MENOS           reduce using rule 62 (expresion -> toowned .)
    POR             reduce using rule 62 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 62 (expresion -> toowned .)
    MODULO          reduce using rule 62 (expresion -> toowned .)
    IGUALQUE        reduce using rule 62 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 62 (expresion -> toowned .)
    MENORQUE        reduce using rule 62 (expresion -> toowned .)
    MAYORQUE        reduce using rule 62 (expresion -> toowned .)
    MENORIQUE       reduce using rule 62 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 62 (expresion -> toowned .)
    OR              reduce using rule 62 (expresion -> toowned .)
    AND             reduce using rule 62 (expresion -> toowned .)
    PTCOMA          reduce using rule 62 (expresion -> toowned .)
    PARDER          reduce using rule 62 (expresion -> toowned .)
    COMA            reduce using rule 62 (expresion -> toowned .)
    PTO             reduce using rule 62 (expresion -> toowned .)
    IGUAL           reduce using rule 62 (expresion -> toowned .)
    BARRAS          reduce using rule 62 (expresion -> toowned .)
    LLAVEDER        reduce using rule 62 (expresion -> toowned .)


state 38

    (65) expresion -> STR .

    LLAVEIZQ        reduce using rule 65 (expresion -> STR .)
    MAS             reduce using rule 65 (expresion -> STR .)
    MENOS           reduce using rule 65 (expresion -> STR .)
    POR             reduce using rule 65 (expresion -> STR .)
    DIVIDIDO        reduce using rule 65 (expresion -> STR .)
    MODULO          reduce using rule 65 (expresion -> STR .)
    IGUALQUE        reduce using rule 65 (expresion -> STR .)
    NOIGUALQUE      reduce using rule 65 (expresion -> STR .)
    MENORQUE        reduce using rule 65 (expresion -> STR .)
    MAYORQUE        reduce using rule 65 (expresion -> STR .)
    MENORIQUE       reduce using rule 65 (expresion -> STR .)
    MAYORIQUE       reduce using rule 65 (expresion -> STR .)
    OR              reduce using rule 65 (expresion -> STR .)
    AND             reduce using rule 65 (expresion -> STR .)
    PTCOMA          reduce using rule 65 (expresion -> STR .)
    PARDER          reduce using rule 65 (expresion -> STR .)
    COMA            reduce using rule 65 (expresion -> STR .)
    PTO             reduce using rule 65 (expresion -> STR .)
    IGUAL           reduce using rule 65 (expresion -> STR .)
    BARRAS          reduce using rule 65 (expresion -> STR .)
    LLAVEDER        reduce using rule 65 (expresion -> STR .)


state 39

    (66) expresion -> CADENA .
    (63) tostring -> CADENA . PTO TOSTRING PARIZQ PARDER
    (64) toowned -> CADENA . PTO TOOWNED PARIZQ PARDER

  ! shift/reduce conflict for PTO resolved as shift
    LLAVEIZQ        reduce using rule 66 (expresion -> CADENA .)
    MAS             reduce using rule 66 (expresion -> CADENA .)
    MENOS           reduce using rule 66 (expresion -> CADENA .)
    POR             reduce using rule 66 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 66 (expresion -> CADENA .)
    MODULO          reduce using rule 66 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 66 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 66 (expresion -> CADENA .)
    MENORQUE        reduce using rule 66 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 66 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 66 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 66 (expresion -> CADENA .)
    OR              reduce using rule 66 (expresion -> CADENA .)
    AND             reduce using rule 66 (expresion -> CADENA .)
    PTCOMA          reduce using rule 66 (expresion -> CADENA .)
    PARDER          reduce using rule 66 (expresion -> CADENA .)
    COMA            reduce using rule 66 (expresion -> CADENA .)
    IGUAL           reduce using rule 66 (expresion -> CADENA .)
    BARRAS          reduce using rule 66 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 66 (expresion -> CADENA .)
    PTO             shift and go to state 82

  ! PTO             [ reduce using rule 66 (expresion -> CADENA .) ]


state 40

    (67) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 67 (expresion -> CARACTER .)
    MAS             reduce using rule 67 (expresion -> CARACTER .)
    MENOS           reduce using rule 67 (expresion -> CARACTER .)
    POR             reduce using rule 67 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 67 (expresion -> CARACTER .)
    MODULO          reduce using rule 67 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 67 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 67 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 67 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 67 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 67 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 67 (expresion -> CARACTER .)
    OR              reduce using rule 67 (expresion -> CARACTER .)
    AND             reduce using rule 67 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 67 (expresion -> CARACTER .)
    PARDER          reduce using rule 67 (expresion -> CARACTER .)
    COMA            reduce using rule 67 (expresion -> CARACTER .)
    PTO             reduce using rule 67 (expresion -> CARACTER .)
    IGUAL           reduce using rule 67 (expresion -> CARACTER .)
    BARRAS          reduce using rule 67 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 67 (expresion -> CARACTER .)


state 41

    (83) expresion -> MENOS . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 83
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 42

    (73) expresion -> tipo . DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> tipo . DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 84


state 43

    (85) expresion -> PARIZQ . expresion PARDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 85
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 44

    (84) expresion -> NOT . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 86
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 45

    (86) expresion -> if_asig .

    LLAVEIZQ        reduce using rule 86 (expresion -> if_asig .)
    MAS             reduce using rule 86 (expresion -> if_asig .)
    MENOS           reduce using rule 86 (expresion -> if_asig .)
    POR             reduce using rule 86 (expresion -> if_asig .)
    DIVIDIDO        reduce using rule 86 (expresion -> if_asig .)
    MODULO          reduce using rule 86 (expresion -> if_asig .)
    IGUALQUE        reduce using rule 86 (expresion -> if_asig .)
    NOIGUALQUE      reduce using rule 86 (expresion -> if_asig .)
    MENORQUE        reduce using rule 86 (expresion -> if_asig .)
    MAYORQUE        reduce using rule 86 (expresion -> if_asig .)
    MENORIQUE       reduce using rule 86 (expresion -> if_asig .)
    MAYORIQUE       reduce using rule 86 (expresion -> if_asig .)
    OR              reduce using rule 86 (expresion -> if_asig .)
    AND             reduce using rule 86 (expresion -> if_asig .)
    PTCOMA          reduce using rule 86 (expresion -> if_asig .)
    PARDER          reduce using rule 86 (expresion -> if_asig .)
    COMA            reduce using rule 86 (expresion -> if_asig .)
    PTO             reduce using rule 86 (expresion -> if_asig .)
    IGUAL           reduce using rule 86 (expresion -> if_asig .)
    BARRAS          reduce using rule 86 (expresion -> if_asig .)
    LLAVEDER        reduce using rule 86 (expresion -> if_asig .)


state 46

    (97) expresion -> match_asig .

    LLAVEIZQ        reduce using rule 97 (expresion -> match_asig .)
    MAS             reduce using rule 97 (expresion -> match_asig .)
    MENOS           reduce using rule 97 (expresion -> match_asig .)
    POR             reduce using rule 97 (expresion -> match_asig .)
    DIVIDIDO        reduce using rule 97 (expresion -> match_asig .)
    MODULO          reduce using rule 97 (expresion -> match_asig .)
    IGUALQUE        reduce using rule 97 (expresion -> match_asig .)
    NOIGUALQUE      reduce using rule 97 (expresion -> match_asig .)
    MENORQUE        reduce using rule 97 (expresion -> match_asig .)
    MAYORQUE        reduce using rule 97 (expresion -> match_asig .)
    MENORIQUE       reduce using rule 97 (expresion -> match_asig .)
    MAYORIQUE       reduce using rule 97 (expresion -> match_asig .)
    OR              reduce using rule 97 (expresion -> match_asig .)
    AND             reduce using rule 97 (expresion -> match_asig .)
    PTCOMA          reduce using rule 97 (expresion -> match_asig .)
    PARDER          reduce using rule 97 (expresion -> match_asig .)
    COMA            reduce using rule 97 (expresion -> match_asig .)
    PTO             reduce using rule 97 (expresion -> match_asig .)
    IGUAL           reduce using rule 97 (expresion -> match_asig .)
    BARRAS          reduce using rule 97 (expresion -> match_asig .)
    LLAVEDER        reduce using rule 97 (expresion -> match_asig .)


state 47

    (108) expresion -> loop_asig .

    LLAVEIZQ        reduce using rule 108 (expresion -> loop_asig .)
    MAS             reduce using rule 108 (expresion -> loop_asig .)
    MENOS           reduce using rule 108 (expresion -> loop_asig .)
    POR             reduce using rule 108 (expresion -> loop_asig .)
    DIVIDIDO        reduce using rule 108 (expresion -> loop_asig .)
    MODULO          reduce using rule 108 (expresion -> loop_asig .)
    IGUALQUE        reduce using rule 108 (expresion -> loop_asig .)
    NOIGUALQUE      reduce using rule 108 (expresion -> loop_asig .)
    MENORQUE        reduce using rule 108 (expresion -> loop_asig .)
    MAYORQUE        reduce using rule 108 (expresion -> loop_asig .)
    MENORIQUE       reduce using rule 108 (expresion -> loop_asig .)
    MAYORIQUE       reduce using rule 108 (expresion -> loop_asig .)
    OR              reduce using rule 108 (expresion -> loop_asig .)
    AND             reduce using rule 108 (expresion -> loop_asig .)
    PTCOMA          reduce using rule 108 (expresion -> loop_asig .)
    PARDER          reduce using rule 108 (expresion -> loop_asig .)
    COMA            reduce using rule 108 (expresion -> loop_asig .)
    PTO             reduce using rule 108 (expresion -> loop_asig .)
    IGUAL           reduce using rule 108 (expresion -> loop_asig .)
    BARRAS          reduce using rule 108 (expresion -> loop_asig .)
    LLAVEDER        reduce using rule 108 (expresion -> loop_asig .)


state 48

    (48) tipo -> I64 .

    DOSPT           reduce using rule 48 (tipo -> I64 .)
    IGUAL           reduce using rule 48 (tipo -> I64 .)


state 49

    (49) tipo -> F64 .

    DOSPT           reduce using rule 49 (tipo -> F64 .)
    IGUAL           reduce using rule 49 (tipo -> F64 .)


state 50

    (50) tipo -> BOOL .

    DOSPT           reduce using rule 50 (tipo -> BOOL .)
    IGUAL           reduce using rule 50 (tipo -> BOOL .)


state 51

    (51) tipo -> CHAR .

    DOSPT           reduce using rule 51 (tipo -> CHAR .)
    IGUAL           reduce using rule 51 (tipo -> CHAR .)


state 52

    (52) tipo -> STRING .

    DOSPT           reduce using rule 52 (tipo -> STRING .)
    IGUAL           reduce using rule 52 (tipo -> STRING .)


state 53

    (53) tipo -> SIGNOI . STR

    STR             shift and go to state 87


state 54

    (98) match_asig -> MATCH . expresion LLAVEIZQ imatch_asig LLAVEDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 88
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 55

    (109) loop_asig -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 89


state 56

    (29) match -> MATCH expresion . LLAVEIZQ imatch LLAVEDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 90
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 57

    (44) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 91
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 58

    (45) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 92
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 59

    (46) break -> BREAK PTCOMA .

    FN              reduce using rule 46 (break -> BREAK PTCOMA .)
    LET             reduce using rule 46 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 46 (break -> BREAK PTCOMA .)
    ID              reduce using rule 46 (break -> BREAK PTCOMA .)
    IF              reduce using rule 46 (break -> BREAK PTCOMA .)
    MATCH           reduce using rule 46 (break -> BREAK PTCOMA .)
    LOOP            reduce using rule 46 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 46 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 46 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 46 (break -> BREAK PTCOMA .)
    COMA            reduce using rule 46 (break -> BREAK PTCOMA .)


state 60

    (47) break -> BREAK expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 93
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 61

    (3) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 94


state 62

    (16) declaracion -> LET MUT ID . DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> LET MUT ID . IGUAL expresion PTCOMA

    DOSPT           shift and go to state 95
    IGUAL           shift and go to state 96


state 63

    (18) declaracion -> LET ID DOSPT . tipo IGUAL expresion PTCOMA
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR

    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53

    tipo                           shift and go to state 97

state 64

    (19) declaracion -> LET ID IGUAL . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 98
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 65

    (20) asignacion -> ID IGUAL expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 99
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 66

    (14) imprimir -> PRINTLN NOT PARIZQ . expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> PRINTLN NOT PARIZQ . expresion PARDER PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 100
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 67

    (87) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> IF expresion . LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 101
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 68

    (21) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (22) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (23) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (24) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 102
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 69

    (68) expresion -> expresion MAS . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 103
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 70

    (69) expresion -> expresion MENOS . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 104
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 71

    (70) expresion -> expresion POR . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 105
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 72

    (71) expresion -> expresion DIVIDIDO . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 106
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 73

    (72) expresion -> expresion MODULO . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 107
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 74

    (75) expresion -> expresion IGUALQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 108
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 75

    (76) expresion -> expresion NOIGUALQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 109
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 76

    (77) expresion -> expresion MENORQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 110
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 77

    (78) expresion -> expresion MAYORQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 111
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 78

    (79) expresion -> expresion MENORIQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 112
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 79

    (80) expresion -> expresion MAYORIQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 113
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 80

    (81) expresion -> expresion OR . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 114
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 81

    (82) expresion -> expresion AND . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 115
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 82

    (63) tostring -> CADENA PTO . TOSTRING PARIZQ PARDER
    (64) toowned -> CADENA PTO . TOOWNED PARIZQ PARDER

    TOSTRING        shift and go to state 116
    TOOWNED         shift and go to state 117


state 83

    (83) expresion -> MENOS expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 83 (expresion -> MENOS expresion .)
    MAS             reduce using rule 83 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 83 (expresion -> MENOS expresion .)
    POR             reduce using rule 83 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 83 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 83 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 83 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 83 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 83 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 83 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 83 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 83 (expresion -> MENOS expresion .)
    OR              reduce using rule 83 (expresion -> MENOS expresion .)
    AND             reduce using rule 83 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 83 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 83 (expresion -> MENOS expresion .)
    COMA            reduce using rule 83 (expresion -> MENOS expresion .)
    PTO             reduce using rule 83 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 83 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 83 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 83 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! POR             [ shift and go to state 71 ]
  ! DIVIDIDO        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 84

    (73) expresion -> tipo DOSPT . DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> tipo DOSPT . DOSPT POWF PARIZQ expresion COMA expresion PARDER

    DOSPT           shift and go to state 118


state 85

    (85) expresion -> PARIZQ expresion . PARDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PARDER          shift and go to state 119
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 86

    (84) expresion -> NOT expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 84 (expresion -> NOT expresion .)
    MAS             reduce using rule 84 (expresion -> NOT expresion .)
    MENOS           reduce using rule 84 (expresion -> NOT expresion .)
    POR             reduce using rule 84 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 84 (expresion -> NOT expresion .)
    MODULO          reduce using rule 84 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 84 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 84 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 84 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 84 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 84 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 84 (expresion -> NOT expresion .)
    OR              reduce using rule 84 (expresion -> NOT expresion .)
    AND             reduce using rule 84 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 84 (expresion -> NOT expresion .)
    PARDER          reduce using rule 84 (expresion -> NOT expresion .)
    COMA            reduce using rule 84 (expresion -> NOT expresion .)
    PTO             reduce using rule 84 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 84 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 84 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 84 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! POR             [ shift and go to state 71 ]
  ! DIVIDIDO        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 87

    (53) tipo -> SIGNOI STR .

    DOSPT           reduce using rule 53 (tipo -> SIGNOI STR .)
    IGUAL           reduce using rule 53 (tipo -> SIGNOI STR .)


state 88

    (98) match_asig -> MATCH expresion . LLAVEIZQ imatch_asig LLAVEDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 120
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 89

    (109) loop_asig -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 121
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 90

    (29) match -> MATCH expresion LLAVEIZQ . imatch LLAVEDER
    (30) imatch -> . opmatch COMA dmatch
    (31) opmatch -> . opmatch COMA cmatch
    (32) opmatch -> . opmatch COMA rmatch
    (33) opmatch -> . cmatch
    (34) opmatch -> . rmatch
    (35) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (36) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (41) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (37) bloque_match -> . bloque_match BARRAS expresion
    (38) bloque_match -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 122
    imatch                         shift and go to state 123
    opmatch                        shift and go to state 124
    cmatch                         shift and go to state 125
    rmatch                         shift and go to state 126
    bloque_match                   shift and go to state 127
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 91

    (44) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 128
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 92

    (45) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 129
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 93

    (47) break -> BREAK expresion PTCOMA .

    FN              reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    LET             reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    PRINTLN         reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    ID              reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    IF              reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    MATCH           reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    LOOP            reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    WHILE           reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    BREAK           reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    LLAVEDER        reduce using rule 47 (break -> BREAK expresion PTCOMA .)
    COMA            reduce using rule 47 (break -> BREAK expresion PTCOMA .)


state 94

    (3) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 130


state 95

    (16) declaracion -> LET MUT ID DOSPT . tipo IGUAL expresion PTCOMA
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR

    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53

    tipo                           shift and go to state 131

state 96

    (17) declaracion -> LET MUT ID IGUAL . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 132
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 97

    (18) declaracion -> LET ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 133


state 98

    (19) declaracion -> LET ID IGUAL expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 134
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 99

    (20) asignacion -> ID IGUAL expresion PTCOMA .

    FN              reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 20 (asignacion -> ID IGUAL expresion PTCOMA .)


state 100

    (14) imprimir -> PRINTLN NOT PARIZQ expresion . COMA expresiones PARDER PTCOMA
    (15) imprimir -> PRINTLN NOT PARIZQ expresion . PARDER PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    COMA            shift and go to state 135
    PARDER          shift and go to state 136
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 101

    (87) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (88) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elsea
    (89) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa
    (90) if_asig -> IF expresion LLAVEIZQ . bloque_expresion LLAVEDER elseifa elsea
    (95) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (96) bloque_expresion -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 137
    bloque_expresion               shift and go to state 138
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 102

    (21) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (22) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (23) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (24) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 139
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 103

    (68) expresion -> expresion MAS expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 68 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 68 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 68 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 68 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 68 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 68 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 68 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 68 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 68 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 68 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 68 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 68 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 68 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 68 (expresion -> expresion MAS expresion .)
    PTO             reduce using rule 68 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 68 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 68 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 68 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! POR             [ reduce using rule 68 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 68 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 68 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 104

    (69) expresion -> expresion MENOS expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 69 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 69 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 69 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 69 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 69 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 69 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 69 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 69 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 69 (expresion -> expresion MENOS expresion .)
    PTO             reduce using rule 69 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 69 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 69 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 69 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! POR             [ reduce using rule 69 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 69 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 69 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 105

    (70) expresion -> expresion POR expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 70 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 70 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 70 (expresion -> expresion POR expresion .)
    POR             reduce using rule 70 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 70 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 70 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 70 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 70 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 70 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 70 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 70 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 70 (expresion -> expresion POR expresion .)
    OR              reduce using rule 70 (expresion -> expresion POR expresion .)
    AND             reduce using rule 70 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 70 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 70 (expresion -> expresion POR expresion .)
    PTO             reduce using rule 70 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 70 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 70 (expresion -> expresion POR expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! POR             [ shift and go to state 71 ]
  ! DIVIDIDO        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 106

    (71) expresion -> expresion DIVIDIDO expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    PTO             reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! POR             [ shift and go to state 71 ]
  ! DIVIDIDO        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 107

    (72) expresion -> expresion MODULO expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 72 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 72 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 72 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 72 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 72 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MODULO expresion .)
    PTO             reduce using rule 72 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! POR             [ shift and go to state 71 ]
  ! DIVIDIDO        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 108

    (75) expresion -> expresion IGUALQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    PTO             reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 75 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 109

    (76) expresion -> expresion NOIGUALQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    PTO             reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    LLAVEDER        reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 110

    (77) expresion -> expresion MENORQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    PTO             reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 77 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 111

    (78) expresion -> expresion MAYORQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    PTCOMA          reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    PTO             reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    LLAVEDER        reduce using rule 78 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 78 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 78 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 78 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 112

    (79) expresion -> expresion MENORIQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    PTO             reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    LLAVEDER        reduce using rule 79 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 79 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 79 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 79 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 113

    (80) expresion -> expresion MAYORIQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    PTCOMA          reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    PTO             reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    LLAVEDER        reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73

  ! MAS             [ reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 74 ]
  ! NOIGUALQUE      [ shift and go to state 75 ]
  ! MENORQUE        [ shift and go to state 76 ]
  ! MAYORQUE        [ shift and go to state 77 ]
  ! MENORIQUE       [ shift and go to state 78 ]
  ! MAYORIQUE       [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 114

    (81) expresion -> expresion OR expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 81 (expresion -> expresion OR expresion .)
    OR              reduce using rule 81 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 81 (expresion -> expresion OR expresion .)
    PTO             reduce using rule 81 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 81 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 81 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 81 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    AND             shift and go to state 81

  ! MAS             [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 81 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 80 ]


state 115

    (82) expresion -> expresion AND expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        reduce using rule 82 (expresion -> expresion AND expresion .)
    OR              reduce using rule 82 (expresion -> expresion AND expresion .)
    AND             reduce using rule 82 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 82 (expresion -> expresion AND expresion .)
    PTO             reduce using rule 82 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 82 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 82 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 82 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79

  ! MAS             [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 82 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 116

    (63) tostring -> CADENA PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 140


state 117

    (64) toowned -> CADENA PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 141


state 118

    (73) expresion -> tipo DOSPT DOSPT . POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> tipo DOSPT DOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 142
    POWF            shift and go to state 143


state 119

    (85) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)
    LLAVEDER        reduce using rule 85 (expresion -> PARIZQ expresion PARDER .)


state 120

    (98) match_asig -> MATCH expresion LLAVEIZQ . imatch_asig LLAVEDER
    (99) imatch_asig -> . opmatch_asig COMA dmatch_asig
    (102) opmatch_asig -> . opmatch_asig COMA cmatch_asig
    (103) opmatch_asig -> . cmatch_asig
    (104) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (105) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (106) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (107) bloque_match_asig -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 144
    imatch_asig                    shift and go to state 145
    opmatch_asig                   shift and go to state 146
    cmatch_asig                    shift and go to state 147
    bloque_match_asig              shift and go to state 148
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 121

    (109) loop_asig -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 149
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 122

    (41) rmatch -> expresion . PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (38) bloque_match -> expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTO             shift and go to state 150
    IGUAL           reduce using rule 38 (bloque_match -> expresion .)
    BARRAS          reduce using rule 38 (bloque_match -> expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 123

    (29) match -> MATCH expresion LLAVEIZQ imatch . LLAVEDER

    LLAVEDER        shift and go to state 151


state 124

    (30) imatch -> opmatch . COMA dmatch
    (31) opmatch -> opmatch . COMA cmatch
    (32) opmatch -> opmatch . COMA rmatch

    COMA            shift and go to state 152


state 125

    (33) opmatch -> cmatch .

    COMA            reduce using rule 33 (opmatch -> cmatch .)


state 126

    (34) opmatch -> rmatch .

    COMA            reduce using rule 34 (opmatch -> rmatch .)


state 127

    (35) cmatch -> bloque_match . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (36) cmatch -> bloque_match . IGUAL MAYORQUE instruccion
    (37) bloque_match -> bloque_match . BARRAS expresion

    IGUAL           shift and go to state 153
    BARRAS          shift and go to state 154


state 128

    (44) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 44 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 129

    (45) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 155
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 130

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 156
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 131

    (16) declaracion -> LET MUT ID DOSPT tipo . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 157


state 132

    (17) declaracion -> LET MUT ID IGUAL expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 158
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 133

    (18) declaracion -> LET ID DOSPT tipo IGUAL . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 159
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 134

    (19) declaracion -> LET ID IGUAL expresion PTCOMA .

    FN              reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 19 (declaracion -> LET ID IGUAL expresion PTCOMA .)


state 135

    (14) imprimir -> PRINTLN NOT PARIZQ expresion COMA . expresiones PARDER PTCOMA
    (54) expresiones -> . expresiones COMA expresion
    (55) expresiones -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 160
    expresiones                    shift and go to state 161
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 136

    (15) imprimir -> PRINTLN NOT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 162


state 137

    (96) bloque_expresion -> expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 96 (bloque_expresion -> expresion .)
    PTCOMA          reduce using rule 96 (bloque_expresion -> expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 138

    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (88) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elsea
    (89) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa
    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion . LLAVEDER elseifa elsea
    (95) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 163
    PTCOMA          shift and go to state 164


state 139

    (21) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (24) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (28) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (25) lelseif -> . lelseif elseif
    (26) lelseif -> . elseif
    (27) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 21 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 167

    else                           shift and go to state 165
    lelseif                        shift and go to state 166
    elseif                         shift and go to state 168

state 140

    (63) tostring -> CADENA PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 169


state 141

    (64) toowned -> CADENA PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 170


state 142

    (73) expresion -> tipo DOSPT DOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 171


state 143

    (74) expresion -> tipo DOSPT DOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 172


state 144

    (107) bloque_match_asig -> expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 107 (bloque_match_asig -> expresion .)
    BARRAS          reduce using rule 107 (bloque_match_asig -> expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 145

    (98) match_asig -> MATCH expresion LLAVEIZQ imatch_asig . LLAVEDER

    LLAVEDER        shift and go to state 173


state 146

    (99) imatch_asig -> opmatch_asig . COMA dmatch_asig
    (102) opmatch_asig -> opmatch_asig . COMA cmatch_asig

    COMA            shift and go to state 174


state 147

    (103) opmatch_asig -> cmatch_asig .

    COMA            reduce using rule 103 (opmatch_asig -> cmatch_asig .)


state 148

    (104) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (105) cmatch_asig -> bloque_match_asig . IGUAL MAYORQUE expresion
    (106) bloque_match_asig -> bloque_match_asig . BARRAS expresion

    IGUAL           shift and go to state 175
    BARRAS          shift and go to state 176


state 149

    (109) loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    LLAVEIZQ        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    POR             reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    DIVIDIDO        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUALQUE        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    NOIGUALQUE      reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORQUE        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORQUE        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MENORIQUE       reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIQUE       reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PARDER          reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PTO             reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IGUAL           reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BARRAS          reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 109 (loop_asig -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 150

    (41) rmatch -> expresion PTO . PTO IGUAL expresion IGUAL MAYORQUE rrmatch

    PTO             shift and go to state 177


state 151

    (29) match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .

    FN              reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LET             reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    PRINTLN         reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    ID              reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    IF              reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    MATCH           reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LOOP            reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    WHILE           reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    BREAK           reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    LLAVEDER        reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)
    COMA            reduce using rule 29 (match -> MATCH expresion LLAVEIZQ imatch LLAVEDER .)


state 152

    (30) imatch -> opmatch COMA . dmatch
    (31) opmatch -> opmatch COMA . cmatch
    (32) opmatch -> opmatch COMA . rmatch
    (39) dmatch -> . GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (40) dmatch -> . GUIONB IGUAL MAYORQUE instruccion
    (35) cmatch -> . bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (36) cmatch -> . bloque_match IGUAL MAYORQUE instruccion
    (41) rmatch -> . expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch
    (37) bloque_match -> . bloque_match BARRAS expresion
    (38) bloque_match -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 181
    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    dmatch                         shift and go to state 178
    cmatch                         shift and go to state 179
    rmatch                         shift and go to state 180
    bloque_match                   shift and go to state 127
    expresion                      shift and go to state 122
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 153

    (35) cmatch -> bloque_match IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (36) cmatch -> bloque_match IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 182


state 154

    (37) bloque_match -> bloque_match BARRAS . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 183
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 155

    (45) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 45 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 156

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 184
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 157

    (16) declaracion -> LET MUT ID DOSPT tipo IGUAL . expresion PTCOMA
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 185
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 158

    (17) declaracion -> LET MUT ID IGUAL expresion PTCOMA .

    FN              reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LET             reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)
    COMA            reduce using rule 17 (declaracion -> LET MUT ID IGUAL expresion PTCOMA .)


state 159

    (18) declaracion -> LET ID DOSPT tipo IGUAL expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 186
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 160

    (55) expresiones -> expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PARDER          reduce using rule 55 (expresiones -> expresion .)
    COMA            reduce using rule 55 (expresiones -> expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 161

    (14) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones . PARDER PTCOMA
    (54) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 188
    COMA            shift and go to state 187


state 162

    (15) imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .

    FN              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LET             reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    PRINTLN         reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    MATCH           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LOOP            reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    LLAVEDER        reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)
    COMA            reduce using rule 15 (imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA .)


state 163

    (87) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .
    (88) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elsea
    (89) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa
    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER . elseifa elsea
    (94) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (91) elseifa -> . elseifa lif
    (92) elseifa -> . lif
    (93) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 87 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    ELSE            shift and go to state 191

    elsea                          shift and go to state 189
    elseifa                        shift and go to state 190
    lif                            shift and go to state 192

state 164

    (95) bloque_expresion -> bloque_expresion PTCOMA . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 193
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 165

    (22) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LET             reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    ID              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 22 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 166

    (23) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (24) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (25) lelseif -> lelseif . elseif
    (28) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (27) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LET             reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ID              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 23 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 167

    else                           shift and go to state 194
    elseif                         shift and go to state 195

state 167

    (28) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (27) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 196
    IF              shift and go to state 197


state 168

    (26) lelseif -> elseif .

    ELSE            reduce using rule 26 (lelseif -> elseif .)
    FN              reduce using rule 26 (lelseif -> elseif .)
    LET             reduce using rule 26 (lelseif -> elseif .)
    PRINTLN         reduce using rule 26 (lelseif -> elseif .)
    ID              reduce using rule 26 (lelseif -> elseif .)
    IF              reduce using rule 26 (lelseif -> elseif .)
    MATCH           reduce using rule 26 (lelseif -> elseif .)
    LOOP            reduce using rule 26 (lelseif -> elseif .)
    WHILE           reduce using rule 26 (lelseif -> elseif .)
    BREAK           reduce using rule 26 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 26 (lelseif -> elseif .)
    COMA            reduce using rule 26 (lelseif -> elseif .)


state 169

    (63) tostring -> CADENA PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTCOMA          reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 63 (tostring -> CADENA PTO TOSTRING PARIZQ PARDER .)


state 170

    (64) toowned -> CADENA PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTCOMA          reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)
    LLAVEDER        reduce using rule 64 (toowned -> CADENA PTO TOOWNED PARIZQ PARDER .)


state 171

    (73) expresion -> tipo DOSPT DOSPT POW PARIZQ . expresion COMA expresion PARDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 198
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 172

    (74) expresion -> tipo DOSPT DOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 199
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 173

    (98) match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .

    LLAVEIZQ        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAS             reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENOS           reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    POR             reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    DIVIDIDO        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MODULO          reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUALQUE        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    NOIGUALQUE      reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORQUE        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORQUE        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MENORIQUE       reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    MAYORIQUE       reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    OR              reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    AND             reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTCOMA          reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PARDER          reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    COMA            reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    PTO             reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    IGUAL           reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    BARRAS          reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)
    LLAVEDER        reduce using rule 98 (match_asig -> MATCH expresion LLAVEIZQ imatch_asig LLAVEDER .)


state 174

    (99) imatch_asig -> opmatch_asig COMA . dmatch_asig
    (102) opmatch_asig -> opmatch_asig COMA . cmatch_asig
    (100) dmatch_asig -> . GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (101) dmatch_asig -> . GUIONB IGUAL MAYORQUE expresion
    (104) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (105) cmatch_asig -> . bloque_match_asig IGUAL MAYORQUE expresion
    (106) bloque_match_asig -> . bloque_match_asig BARRAS expresion
    (107) bloque_match_asig -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    GUIONB          shift and go to state 202
    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    dmatch_asig                    shift and go to state 200
    cmatch_asig                    shift and go to state 201
    expresion                      shift and go to state 144
    bloque_match_asig              shift and go to state 148
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 175

    (104) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (105) cmatch_asig -> bloque_match_asig IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 203


state 176

    (106) bloque_match_asig -> bloque_match_asig BARRAS . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 204
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 177

    (41) rmatch -> expresion PTO PTO . IGUAL expresion IGUAL MAYORQUE rrmatch

    IGUAL           shift and go to state 205


state 178

    (30) imatch -> opmatch COMA dmatch .

    LLAVEDER        reduce using rule 30 (imatch -> opmatch COMA dmatch .)


state 179

    (31) opmatch -> opmatch COMA cmatch .

    COMA            reduce using rule 31 (opmatch -> opmatch COMA cmatch .)


state 180

    (32) opmatch -> opmatch COMA rmatch .

    COMA            reduce using rule 32 (opmatch -> opmatch COMA rmatch .)


state 181

    (39) dmatch -> GUIONB . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (40) dmatch -> GUIONB . IGUAL MAYORQUE instruccion

    IGUAL           shift and go to state 206


state 182

    (35) cmatch -> bloque_match IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (36) cmatch -> bloque_match IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEIZQ        shift and go to state 207
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 208
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 183

    (37) bloque_match -> bloque_match BARRAS expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 37 (bloque_match -> bloque_match BARRAS expresion .)
    BARRAS          reduce using rule 37 (bloque_match -> bloque_match BARRAS expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 184

    (3) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    $end            reduce using rule 3 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 185

    (16) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion . PTCOMA
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 209
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 186

    (18) declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 18 (declaracion -> LET ID DOSPT tipo IGUAL expresion PTCOMA .)


state 187

    (54) expresiones -> expresiones COMA . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 210
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 188

    (14) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 211


state 189

    (88) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .

    LLAVEIZQ        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAS             reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENOS           reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    POR             reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    DIVIDIDO        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MODULO          reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUALQUE        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    NOIGUALQUE      reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORQUE        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORQUE        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MENORIQUE       reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    MAYORIQUE       reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    OR              reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    AND             reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTCOMA          reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PARDER          reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    COMA            reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    PTO             reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    IGUAL           reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    BARRAS          reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)
    LLAVEDER        reduce using rule 88 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea .)


state 190

    (89) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .
    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa . elsea
    (91) elseifa -> elseifa . lif
    (94) elsea -> . ELSE LLAVEIZQ bloque_expresion LLAVEDER
    (93) lif -> . ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAS             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENOS           reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    POR             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    DIVIDIDO        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MODULO          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUALQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    NOIGUALQUE      reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORQUE        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MENORIQUE       reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    MAYORIQUE       reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    OR              reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    AND             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTCOMA          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PARDER          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    COMA            reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    PTO             reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    IGUAL           reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    BARRAS          reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    LLAVEDER        reduce using rule 89 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa .)
    ELSE            shift and go to state 191

    elsea                          shift and go to state 212
    lif                            shift and go to state 213

state 191

    (94) elsea -> ELSE . LLAVEIZQ bloque_expresion LLAVEDER
    (93) lif -> ELSE . IF expresion LLAVEIZQ bloque_expresion LLAVEDER

    LLAVEIZQ        shift and go to state 214
    IF              shift and go to state 215


state 192

    (92) elseifa -> lif .

    ELSE            reduce using rule 92 (elseifa -> lif .)
    LLAVEIZQ        reduce using rule 92 (elseifa -> lif .)
    MAS             reduce using rule 92 (elseifa -> lif .)
    MENOS           reduce using rule 92 (elseifa -> lif .)
    POR             reduce using rule 92 (elseifa -> lif .)
    DIVIDIDO        reduce using rule 92 (elseifa -> lif .)
    MODULO          reduce using rule 92 (elseifa -> lif .)
    IGUALQUE        reduce using rule 92 (elseifa -> lif .)
    NOIGUALQUE      reduce using rule 92 (elseifa -> lif .)
    MENORQUE        reduce using rule 92 (elseifa -> lif .)
    MAYORQUE        reduce using rule 92 (elseifa -> lif .)
    MENORIQUE       reduce using rule 92 (elseifa -> lif .)
    MAYORIQUE       reduce using rule 92 (elseifa -> lif .)
    OR              reduce using rule 92 (elseifa -> lif .)
    AND             reduce using rule 92 (elseifa -> lif .)
    PTCOMA          reduce using rule 92 (elseifa -> lif .)
    PARDER          reduce using rule 92 (elseifa -> lif .)
    COMA            reduce using rule 92 (elseifa -> lif .)
    PTO             reduce using rule 92 (elseifa -> lif .)
    IGUAL           reduce using rule 92 (elseifa -> lif .)
    BARRAS          reduce using rule 92 (elseifa -> lif .)
    LLAVEDER        reduce using rule 92 (elseifa -> lif .)


state 193

    (95) bloque_expresion -> bloque_expresion PTCOMA expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 95 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    PTCOMA          reduce using rule 95 (bloque_expresion -> bloque_expresion PTCOMA expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 194

    (24) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LET             reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    ID              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 24 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 195

    (25) lelseif -> lelseif elseif .

    ELSE            reduce using rule 25 (lelseif -> lelseif elseif .)
    FN              reduce using rule 25 (lelseif -> lelseif elseif .)
    LET             reduce using rule 25 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 25 (lelseif -> lelseif elseif .)
    ID              reduce using rule 25 (lelseif -> lelseif elseif .)
    IF              reduce using rule 25 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 25 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 25 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 25 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 25 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 25 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 25 (lelseif -> lelseif elseif .)


state 196

    (28) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 216
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 197

    (27) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 217
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 198

    (73) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion . COMA expresion PARDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    COMA            shift and go to state 218
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 199

    (74) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    COMA            shift and go to state 219
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 200

    (99) imatch_asig -> opmatch_asig COMA dmatch_asig .

    LLAVEDER        reduce using rule 99 (imatch_asig -> opmatch_asig COMA dmatch_asig .)


state 201

    (102) opmatch_asig -> opmatch_asig COMA cmatch_asig .

    COMA            reduce using rule 102 (opmatch_asig -> opmatch_asig COMA cmatch_asig .)


state 202

    (100) dmatch_asig -> GUIONB . IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (101) dmatch_asig -> GUIONB . IGUAL MAYORQUE expresion

    IGUAL           shift and go to state 220


state 203

    (104) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (105) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 221
    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 222
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 204

    (106) bloque_match_asig -> bloque_match_asig BARRAS expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    IGUAL           reduce using rule 106 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    BARRAS          reduce using rule 106 (bloque_match_asig -> bloque_match_asig BARRAS expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 205

    (41) rmatch -> expresion PTO PTO IGUAL . expresion IGUAL MAYORQUE rrmatch
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 223
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 206

    (39) dmatch -> GUIONB IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (40) dmatch -> GUIONB IGUAL . MAYORQUE instruccion

    MAYORQUE        shift and go to state 224


state 207

    (35) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 225
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 208

    (36) cmatch -> bloque_match IGUAL MAYORQUE instruccion .

    COMA            reduce using rule 36 (cmatch -> bloque_match IGUAL MAYORQUE instruccion .)


state 209

    (16) declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .

    FN              reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LET             reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    PRINTLN         reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    ID              reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    IF              reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    MATCH           reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LOOP            reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    LLAVEDER        reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)
    COMA            reduce using rule 16 (declaracion -> LET MUT ID DOSPT tipo IGUAL expresion PTCOMA .)


state 210

    (54) expresiones -> expresiones COMA expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PARDER          reduce using rule 54 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 54 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 211

    (14) imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .

    FN              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LET             reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    MATCH           reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LOOP            reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)
    COMA            reduce using rule 14 (imprimir -> PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA .)


state 212

    (90) if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .

    LLAVEIZQ        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAS             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENOS           reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    POR             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    DIVIDIDO        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MODULO          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUALQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    NOIGUALQUE      reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORQUE        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MENORIQUE       reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    MAYORIQUE       reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    OR              reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    AND             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTCOMA          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PARDER          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    COMA            reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    PTO             reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    IGUAL           reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    BARRAS          reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)
    LLAVEDER        reduce using rule 90 (if_asig -> IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea .)


state 213

    (91) elseifa -> elseifa lif .

    ELSE            reduce using rule 91 (elseifa -> elseifa lif .)
    LLAVEIZQ        reduce using rule 91 (elseifa -> elseifa lif .)
    MAS             reduce using rule 91 (elseifa -> elseifa lif .)
    MENOS           reduce using rule 91 (elseifa -> elseifa lif .)
    POR             reduce using rule 91 (elseifa -> elseifa lif .)
    DIVIDIDO        reduce using rule 91 (elseifa -> elseifa lif .)
    MODULO          reduce using rule 91 (elseifa -> elseifa lif .)
    IGUALQUE        reduce using rule 91 (elseifa -> elseifa lif .)
    NOIGUALQUE      reduce using rule 91 (elseifa -> elseifa lif .)
    MENORQUE        reduce using rule 91 (elseifa -> elseifa lif .)
    MAYORQUE        reduce using rule 91 (elseifa -> elseifa lif .)
    MENORIQUE       reduce using rule 91 (elseifa -> elseifa lif .)
    MAYORIQUE       reduce using rule 91 (elseifa -> elseifa lif .)
    OR              reduce using rule 91 (elseifa -> elseifa lif .)
    AND             reduce using rule 91 (elseifa -> elseifa lif .)
    PTCOMA          reduce using rule 91 (elseifa -> elseifa lif .)
    PARDER          reduce using rule 91 (elseifa -> elseifa lif .)
    COMA            reduce using rule 91 (elseifa -> elseifa lif .)
    PTO             reduce using rule 91 (elseifa -> elseifa lif .)
    IGUAL           reduce using rule 91 (elseifa -> elseifa lif .)
    BARRAS          reduce using rule 91 (elseifa -> elseifa lif .)
    LLAVEDER        reduce using rule 91 (elseifa -> elseifa lif .)


state 214

    (94) elsea -> ELSE LLAVEIZQ . bloque_expresion LLAVEDER
    (95) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (96) bloque_expresion -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    bloque_expresion               shift and go to state 226
    expresion                      shift and go to state 137
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 215

    (93) lif -> ELSE IF . expresion LLAVEIZQ bloque_expresion LLAVEDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 227
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 216

    (28) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 228
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 217

    (27) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 229
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 218

    (73) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA . expresion PARDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 230
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 219

    (74) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    tipo                           shift and go to state 42
    expresion                      shift and go to state 231
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 220

    (100) dmatch_asig -> GUIONB IGUAL . MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER
    (101) dmatch_asig -> GUIONB IGUAL . MAYORQUE expresion

    MAYORQUE        shift and go to state 232


state 221

    (104) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (95) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (96) bloque_expresion -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    bloque_expresion               shift and go to state 233
    expresion                      shift and go to state 137
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 222

    (105) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    COMA            reduce using rule 105 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 223

    (41) rmatch -> expresion PTO PTO IGUAL expresion . IGUAL MAYORQUE rrmatch
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    IGUAL           shift and go to state 234
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 224

    (39) dmatch -> GUIONB IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (40) dmatch -> GUIONB IGUAL MAYORQUE . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEIZQ        shift and go to state 235
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 236
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 225

    (35) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 237
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 226

    (94) elsea -> ELSE LLAVEIZQ bloque_expresion . LLAVEDER
    (95) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 238
    PTCOMA          shift and go to state 164


state 227

    (93) lif -> ELSE IF expresion . LLAVEIZQ bloque_expresion LLAVEDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEIZQ        shift and go to state 239
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 228

    (28) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 28 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 229

    (27) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 240
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 230

    (73) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion . PARDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PARDER          shift and go to state 241
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 231

    (74) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    PARDER          shift and go to state 242
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 232

    (100) dmatch_asig -> GUIONB IGUAL MAYORQUE . LLAVEIZQ bloque_expresion LLAVEDER
    (101) dmatch_asig -> GUIONB IGUAL MAYORQUE . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 243
    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 244
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 233

    (104) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (95) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 245
    PTCOMA          shift and go to state 164


state 234

    (41) rmatch -> expresion PTO PTO IGUAL expresion IGUAL . MAYORQUE rrmatch

    MAYORQUE        shift and go to state 246


state 235

    (39) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 247
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 236

    (40) dmatch -> GUIONB IGUAL MAYORQUE instruccion .

    LLAVEDER        reduce using rule 40 (dmatch -> GUIONB IGUAL MAYORQUE instruccion .)


state 237

    (35) cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 35 (cmatch -> bloque_match IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 238

    (94) elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEIZQ        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 94 (elsea -> ELSE LLAVEIZQ bloque_expresion LLAVEDER .)


state 239

    (93) lif -> ELSE IF expresion LLAVEIZQ . bloque_expresion LLAVEDER
    (95) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (96) bloque_expresion -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    expresion                      shift and go to state 137
    bloque_expresion               shift and go to state 248
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 240

    (27) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 249
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 241

    (73) expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 73 (expresion -> tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 242

    (74) expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTCOMA          reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    LLAVEDER        reduce using rule 74 (expresion -> tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 243

    (100) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ . bloque_expresion LLAVEDER
    (95) bloque_expresion -> . bloque_expresion PTCOMA expresion
    (96) bloque_expresion -> . expresion
    (56) expresion -> . ID
    (57) expresion -> . ENTERO
    (58) expresion -> . DECIMAL
    (59) expresion -> . TRUE
    (60) expresion -> . FALSE
    (61) expresion -> . tostring
    (62) expresion -> . toowned
    (65) expresion -> . STR
    (66) expresion -> . CADENA
    (67) expresion -> . CARACTER
    (68) expresion -> . expresion MAS expresion
    (69) expresion -> . expresion MENOS expresion
    (70) expresion -> . expresion POR expresion
    (71) expresion -> . expresion DIVIDIDO expresion
    (72) expresion -> . expresion MODULO expresion
    (73) expresion -> . tipo DOSPT DOSPT POW PARIZQ expresion COMA expresion PARDER
    (74) expresion -> . tipo DOSPT DOSPT POWF PARIZQ expresion COMA expresion PARDER
    (75) expresion -> . expresion IGUALQUE expresion
    (76) expresion -> . expresion NOIGUALQUE expresion
    (77) expresion -> . expresion MENORQUE expresion
    (78) expresion -> . expresion MAYORQUE expresion
    (79) expresion -> . expresion MENORIQUE expresion
    (80) expresion -> . expresion MAYORIQUE expresion
    (81) expresion -> . expresion OR expresion
    (82) expresion -> . expresion AND expresion
    (83) expresion -> . MENOS expresion
    (84) expresion -> . NOT expresion
    (85) expresion -> . PARIZQ expresion PARDER
    (86) expresion -> . if_asig
    (97) expresion -> . match_asig
    (108) expresion -> . loop_asig
    (63) tostring -> . CADENA PTO TOSTRING PARIZQ PARDER
    (64) toowned -> . CADENA PTO TOOWNED PARIZQ PARDER
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . CHAR
    (52) tipo -> . STRING
    (53) tipo -> . SIGNOI STR
    (87) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER
    (88) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elsea
    (89) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa
    (90) if_asig -> . IF expresion LLAVEIZQ bloque_expresion LLAVEDER elseifa elsea
    (98) match_asig -> . MATCH expresion LLAVEIZQ imatch_asig LLAVEDER
    (109) loop_asig -> . LOOP LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 31
    ENTERO          shift and go to state 32
    DECIMAL         shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    STR             shift and go to state 38
    CADENA          shift and go to state 39
    CARACTER        shift and go to state 40
    MENOS           shift and go to state 41
    NOT             shift and go to state 44
    PARIZQ          shift and go to state 43
    I64             shift and go to state 48
    F64             shift and go to state 49
    BOOL            shift and go to state 50
    CHAR            shift and go to state 51
    STRING          shift and go to state 52
    SIGNOI          shift and go to state 53
    IF              shift and go to state 29
    MATCH           shift and go to state 54
    LOOP            shift and go to state 55

    bloque_expresion               shift and go to state 250
    expresion                      shift and go to state 137
    tostring                       shift and go to state 36
    toowned                        shift and go to state 37
    tipo                           shift and go to state 42
    if_asig                        shift and go to state 45
    match_asig                     shift and go to state 46
    loop_asig                      shift and go to state 47

state 244

    (101) dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .
    (68) expresion -> expresion . MAS expresion
    (69) expresion -> expresion . MENOS expresion
    (70) expresion -> expresion . POR expresion
    (71) expresion -> expresion . DIVIDIDO expresion
    (72) expresion -> expresion . MODULO expresion
    (75) expresion -> expresion . IGUALQUE expresion
    (76) expresion -> expresion . NOIGUALQUE expresion
    (77) expresion -> expresion . MENORQUE expresion
    (78) expresion -> expresion . MAYORQUE expresion
    (79) expresion -> expresion . MENORIQUE expresion
    (80) expresion -> expresion . MAYORIQUE expresion
    (81) expresion -> expresion . OR expresion
    (82) expresion -> expresion . AND expresion

    LLAVEDER        reduce using rule 101 (dmatch_asig -> GUIONB IGUAL MAYORQUE expresion .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    POR             shift and go to state 71
    DIVIDIDO        shift and go to state 72
    MODULO          shift and go to state 73
    IGUALQUE        shift and go to state 74
    NOIGUALQUE      shift and go to state 75
    MENORQUE        shift and go to state 76
    MAYORQUE        shift and go to state 77
    MENORIQUE       shift and go to state 78
    MAYORIQUE       shift and go to state 79
    OR              shift and go to state 80
    AND             shift and go to state 81


state 245

    (104) cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    COMA            reduce using rule 104 (cmatch_asig -> bloque_match_asig IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 246

    (41) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE . rrmatch
    (42) rrmatch -> . instruccion
    (43) rrmatch -> . LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEIZQ        shift and go to state 253
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    rrmatch                        shift and go to state 251
    instruccion                    shift and go to state 252
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 247

    (39) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 254
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 248

    (93) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion . LLAVEDER
    (95) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 255
    PTCOMA          shift and go to state 164


state 249

    (27) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 27 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)


state 250

    (100) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion . LLAVEDER
    (95) bloque_expresion -> bloque_expresion . PTCOMA expresion

    LLAVEDER        shift and go to state 256
    PTCOMA          shift and go to state 164


state 251

    (41) rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .

    COMA            reduce using rule 41 (rmatch -> expresion PTO PTO IGUAL expresion IGUAL MAYORQUE rrmatch .)


state 252

    (42) rrmatch -> instruccion .

    COMA            reduce using rule 42 (rrmatch -> instruccion .)


state 253

    (43) rrmatch -> LLAVEIZQ . instrucciones LLAVEDER
    (4) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instrucciones                  shift and go to state 257
    instruccion                    shift and go to state 4
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 254

    (39) dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 39 (dmatch -> GUIONB IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 255

    (93) lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .

    ELSE            reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAS             reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENOS           reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    POR             reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    DIVIDIDO        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MODULO          reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUALQUE        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    NOIGUALQUE      reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORQUE        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORQUE        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MENORIQUE       reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    MAYORIQUE       reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    OR              reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    AND             reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTCOMA          reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PARDER          reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    COMA            reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    PTO             reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    IGUAL           reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    BARRAS          reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)
    LLAVEDER        reduce using rule 93 (lif -> ELSE IF expresion LLAVEIZQ bloque_expresion LLAVEDER .)


state 256

    (100) dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .

    LLAVEDER        reduce using rule 100 (dmatch_asig -> GUIONB IGUAL MAYORQUE LLAVEIZQ bloque_expresion LLAVEDER .)


state 257

    (43) rrmatch -> LLAVEIZQ instrucciones . LLAVEDER
    (4) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . declaracion
    (7) instruccion -> . imprimir
    (8) instruccion -> . asignacion
    (9) instruccion -> . if
    (10) instruccion -> . match
    (11) instruccion -> . loop
    (12) instruccion -> . while
    (13) instruccion -> . break
    (16) declaracion -> . LET MUT ID DOSPT tipo IGUAL expresion PTCOMA
    (17) declaracion -> . LET MUT ID IGUAL expresion PTCOMA
    (18) declaracion -> . LET ID DOSPT tipo IGUAL expresion PTCOMA
    (19) declaracion -> . LET ID IGUAL expresion PTCOMA
    (14) imprimir -> . PRINTLN NOT PARIZQ expresion COMA expresiones PARDER PTCOMA
    (15) imprimir -> . PRINTLN NOT PARIZQ expresion PARDER PTCOMA
    (20) asignacion -> . ID IGUAL expresion PTCOMA
    (21) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (22) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (23) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (24) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (29) match -> . MATCH expresion LLAVEIZQ imatch LLAVEDER
    (44) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (45) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (46) break -> . BREAK PTCOMA
    (47) break -> . BREAK expresion PTCOMA

    LLAVEDER        shift and go to state 258
    LET             shift and go to state 14
    PRINTLN         shift and go to state 16
    ID              shift and go to state 15
    IF              shift and go to state 17
    MATCH           shift and go to state 18
    LOOP            shift and go to state 19
    WHILE           shift and go to state 20
    BREAK           shift and go to state 21

    instruccion                    shift and go to state 23
    declaracion                    shift and go to state 6
    imprimir                       shift and go to state 7
    asignacion                     shift and go to state 8
    if                             shift and go to state 9
    match                          shift and go to state 10
    loop                           shift and go to state 11
    while                          shift and go to state 12
    break                          shift and go to state 13

state 258

    (43) rrmatch -> LLAVEIZQ instrucciones LLAVEDER .

    COMA            reduce using rule 43 (rrmatch -> LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PTO in state 39 resolved as shift
